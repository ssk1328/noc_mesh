/*
 * Generated by Bluespec Compiler, version 2014.05.C (build 33930, 2014-05-28)
 * 
 * On Wed Jun  7 17:29:33 IST 2017
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkSystem_h__
#define __mkSystem_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkCore.h"
#include "mkNode.h"


/* Class declaration for the mkSystem module */
class MOD_mkSystem : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_mkCore INST_cores_0;
  MOD_mkCore INST_cores_1;
  MOD_mkCore INST_cores_2;
  MOD_mkCore INST_cores_3;
  MOD_mkCore INST_cores_4;
  MOD_mkCore INST_cores_5;
  MOD_mkCore INST_cores_6;
  MOD_mkNode INST_node_0;
  MOD_mkNode INST_node_1;
  MOD_mkNode INST_node_2;
  MOD_mkNode INST_node_3;
  MOD_mkNode INST_node_4;
  MOD_mkNode INST_node_5;
  MOD_mkNode INST_node_6;
  MOD_mkNode INST_node_7;
  MOD_mkNode INST_node_8;
 
 /* Constructor */
 public:
  MOD_mkSystem(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt8 PORT_EN_dumpDataMem_0_startDump;
  tUInt8 PORT_EN_dumpDataMem_1_startDump;
  tUInt8 PORT_EN_dumpDataMem_2_startDump;
  tUInt8 PORT_EN_dumpDataMem_3_startDump;
  tUInt8 PORT_EN_dumpDataMem_4_startDump;
  tUInt8 PORT_EN_dumpDataMem_5_startDump;
  tUInt8 PORT_EN_dumpDataMem_6_startDump;
  tUInt8 PORT_coreStatus_0_getState;
  tUInt8 PORT_RDY_coreStatus_0_getState;
  tUInt8 PORT_coreStatus_1_getState;
  tUInt8 PORT_RDY_coreStatus_1_getState;
  tUInt8 PORT_coreStatus_2_getState;
  tUInt8 PORT_RDY_coreStatus_2_getState;
  tUInt8 PORT_coreStatus_3_getState;
  tUInt8 PORT_RDY_coreStatus_3_getState;
  tUInt8 PORT_coreStatus_4_getState;
  tUInt8 PORT_RDY_coreStatus_4_getState;
  tUInt8 PORT_coreStatus_5_getState;
  tUInt8 PORT_RDY_coreStatus_5_getState;
  tUInt8 PORT_coreStatus_6_getState;
  tUInt8 PORT_RDY_coreStatus_6_getState;
  tUInt8 PORT_RDY_dumpDataMem_0_startDump;
  tUInt8 PORT_dumpDataMem_0_doneDump;
  tUInt8 PORT_RDY_dumpDataMem_0_doneDump;
  tUInt8 PORT_RDY_dumpDataMem_1_startDump;
  tUInt8 PORT_dumpDataMem_1_doneDump;
  tUInt8 PORT_RDY_dumpDataMem_1_doneDump;
  tUInt8 PORT_RDY_dumpDataMem_2_startDump;
  tUInt8 PORT_dumpDataMem_2_doneDump;
  tUInt8 PORT_RDY_dumpDataMem_2_doneDump;
  tUInt8 PORT_RDY_dumpDataMem_3_startDump;
  tUInt8 PORT_dumpDataMem_3_doneDump;
  tUInt8 PORT_RDY_dumpDataMem_3_doneDump;
  tUInt8 PORT_RDY_dumpDataMem_4_startDump;
  tUInt8 PORT_dumpDataMem_4_doneDump;
  tUInt8 PORT_RDY_dumpDataMem_4_doneDump;
  tUInt8 PORT_RDY_dumpDataMem_5_startDump;
  tUInt8 PORT_dumpDataMem_5_doneDump;
  tUInt8 PORT_RDY_dumpDataMem_5_doneDump;
  tUInt8 PORT_RDY_dumpDataMem_6_startDump;
  tUInt8 PORT_dumpDataMem_6_doneDump;
  tUInt8 PORT_RDY_dumpDataMem_6_doneDump;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_dumpDataMem_6_startDump;
  tUInt8 DEF_WILL_FIRE_dumpDataMem_5_startDump;
  tUInt8 DEF_WILL_FIRE_dumpDataMem_4_startDump;
  tUInt8 DEF_WILL_FIRE_dumpDataMem_3_startDump;
  tUInt8 DEF_WILL_FIRE_dumpDataMem_2_startDump;
  tUInt8 DEF_WILL_FIRE_dumpDataMem_1_startDump;
  tUInt8 DEF_WILL_FIRE_dumpDataMem_0_startDump;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_37;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_37;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_36;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_36;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_35;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_35;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_34;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_34;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_33;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_33;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_32;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_32;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_31;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_31;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_30;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_30;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_29;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_29;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_28;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_28;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_27;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_27;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_26;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_26;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_25;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_25;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_24;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_24;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_23;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_23;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_22;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_22;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_21;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_21;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_20;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_20;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_19;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_19;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_18;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_18;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_17;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_17;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_16;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_16;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_15;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_15;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_14;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_14;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_13;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_13;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_12;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_12;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_11;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_11;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_10;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_10;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_9;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_9;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_8;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_8;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_7;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_7;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_6;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_6;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_5;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_5;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_4;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_4;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_3;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_3;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_2;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_2;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut_1;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut_1;
  tUInt8 DEF_WILL_FIRE_RL_mkConnectionGetPut;
  tUInt8 DEF_CAN_FIRE_RL_mkConnectionGetPut;
  tUInt8 DEF_CAN_FIRE_dumpDataMem_6_doneDump;
  tUInt8 DEF_CAN_FIRE_dumpDataMem_6_startDump;
  tUInt8 DEF_CAN_FIRE_dumpDataMem_5_doneDump;
  tUInt8 DEF_CAN_FIRE_dumpDataMem_5_startDump;
  tUInt8 DEF_CAN_FIRE_dumpDataMem_4_doneDump;
  tUInt8 DEF_CAN_FIRE_dumpDataMem_4_startDump;
  tUInt8 DEF_CAN_FIRE_dumpDataMem_3_doneDump;
  tUInt8 DEF_CAN_FIRE_dumpDataMem_3_startDump;
  tUInt8 DEF_CAN_FIRE_dumpDataMem_2_doneDump;
  tUInt8 DEF_CAN_FIRE_dumpDataMem_2_startDump;
  tUInt8 DEF_CAN_FIRE_dumpDataMem_1_doneDump;
  tUInt8 DEF_CAN_FIRE_dumpDataMem_1_startDump;
  tUInt8 DEF_CAN_FIRE_dumpDataMem_0_doneDump;
  tUInt8 DEF_CAN_FIRE_dumpDataMem_0_startDump;
  tUInt8 DEF_CAN_FIRE_coreStatus_6_getState;
  tUInt8 DEF_CAN_FIRE_coreStatus_5_getState;
  tUInt8 DEF_CAN_FIRE_coreStatus_4_getState;
  tUInt8 DEF_CAN_FIRE_coreStatus_3_getState;
  tUInt8 DEF_CAN_FIRE_coreStatus_2_getState;
  tUInt8 DEF_CAN_FIRE_coreStatus_1_getState;
  tUInt8 DEF_CAN_FIRE_coreStatus_0_getState;
 
 /* Local definitions */
 private:
 
 /* Rules */
 public:
  void RL_mkConnectionGetPut();
  void RL_mkConnectionGetPut_1();
  void RL_mkConnectionGetPut_2();
  void RL_mkConnectionGetPut_3();
  void RL_mkConnectionGetPut_4();
  void RL_mkConnectionGetPut_5();
  void RL_mkConnectionGetPut_6();
  void RL_mkConnectionGetPut_7();
  void RL_mkConnectionGetPut_8();
  void RL_mkConnectionGetPut_9();
  void RL_mkConnectionGetPut_10();
  void RL_mkConnectionGetPut_11();
  void RL_mkConnectionGetPut_12();
  void RL_mkConnectionGetPut_13();
  void RL_mkConnectionGetPut_14();
  void RL_mkConnectionGetPut_15();
  void RL_mkConnectionGetPut_16();
  void RL_mkConnectionGetPut_17();
  void RL_mkConnectionGetPut_18();
  void RL_mkConnectionGetPut_19();
  void RL_mkConnectionGetPut_20();
  void RL_mkConnectionGetPut_21();
  void RL_mkConnectionGetPut_22();
  void RL_mkConnectionGetPut_23();
  void RL_mkConnectionGetPut_24();
  void RL_mkConnectionGetPut_25();
  void RL_mkConnectionGetPut_26();
  void RL_mkConnectionGetPut_27();
  void RL_mkConnectionGetPut_28();
  void RL_mkConnectionGetPut_29();
  void RL_mkConnectionGetPut_30();
  void RL_mkConnectionGetPut_31();
  void RL_mkConnectionGetPut_32();
  void RL_mkConnectionGetPut_33();
  void RL_mkConnectionGetPut_34();
  void RL_mkConnectionGetPut_35();
  void RL_mkConnectionGetPut_36();
  void RL_mkConnectionGetPut_37();
 
 /* Methods */
 public:
  tUInt8 METH_coreStatus_0_getState();
  tUInt8 METH_RDY_coreStatus_0_getState();
  tUInt8 METH_coreStatus_1_getState();
  tUInt8 METH_RDY_coreStatus_1_getState();
  tUInt8 METH_coreStatus_2_getState();
  tUInt8 METH_RDY_coreStatus_2_getState();
  tUInt8 METH_coreStatus_3_getState();
  tUInt8 METH_RDY_coreStatus_3_getState();
  tUInt8 METH_coreStatus_4_getState();
  tUInt8 METH_RDY_coreStatus_4_getState();
  tUInt8 METH_coreStatus_5_getState();
  tUInt8 METH_RDY_coreStatus_5_getState();
  tUInt8 METH_coreStatus_6_getState();
  tUInt8 METH_RDY_coreStatus_6_getState();
  void METH_dumpDataMem_0_startDump();
  tUInt8 METH_RDY_dumpDataMem_0_startDump();
  tUInt8 METH_dumpDataMem_0_doneDump();
  tUInt8 METH_RDY_dumpDataMem_0_doneDump();
  void METH_dumpDataMem_1_startDump();
  tUInt8 METH_RDY_dumpDataMem_1_startDump();
  tUInt8 METH_dumpDataMem_1_doneDump();
  tUInt8 METH_RDY_dumpDataMem_1_doneDump();
  void METH_dumpDataMem_2_startDump();
  tUInt8 METH_RDY_dumpDataMem_2_startDump();
  tUInt8 METH_dumpDataMem_2_doneDump();
  tUInt8 METH_RDY_dumpDataMem_2_doneDump();
  void METH_dumpDataMem_3_startDump();
  tUInt8 METH_RDY_dumpDataMem_3_startDump();
  tUInt8 METH_dumpDataMem_3_doneDump();
  tUInt8 METH_RDY_dumpDataMem_3_doneDump();
  void METH_dumpDataMem_4_startDump();
  tUInt8 METH_RDY_dumpDataMem_4_startDump();
  tUInt8 METH_dumpDataMem_4_doneDump();
  tUInt8 METH_RDY_dumpDataMem_4_doneDump();
  void METH_dumpDataMem_5_startDump();
  tUInt8 METH_RDY_dumpDataMem_5_startDump();
  tUInt8 METH_dumpDataMem_5_doneDump();
  tUInt8 METH_RDY_dumpDataMem_5_doneDump();
  void METH_dumpDataMem_6_startDump();
  tUInt8 METH_RDY_dumpDataMem_6_startDump();
  tUInt8 METH_dumpDataMem_6_doneDump();
  tUInt8 METH_RDY_dumpDataMem_6_doneDump();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkSystem &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkSystem &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkSystem &backing);
};

#endif /* ifndef __mkSystem_h__ */
