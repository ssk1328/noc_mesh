//
// Generated by Bluespec Compiler, version 2012.01.A (build 26572, 2012-01-17)
//
// On Wed May  7 20:12:18 IST 2014
//
// Method conflict info:
// Method: coreStatus_0_getState
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
//
// Method: coreStatus_1_getState
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
//
// Method: coreStatus_2_getState
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
//
// Method: coreStatus_3_getState
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
//
// Method: coreStatus_4_getState
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
//
// Method: coreStatus_5_getState
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
//
// Method: coreStatus_6_getState
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
//
// Method: dumpDataMem_0_startDump
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
// Sequenced before (restricted): dumpDataMem_0_startDump
// Sequenced after (restricted): dumpDataMem_0_doneDump
//
// Method: dumpDataMem_0_doneDump
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
// Sequenced before (restricted): dumpDataMem_0_startDump
//
// Method: dumpDataMem_1_startDump
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
// Sequenced before (restricted): dumpDataMem_1_startDump
// Sequenced after (restricted): dumpDataMem_1_doneDump
//
// Method: dumpDataMem_1_doneDump
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
// Sequenced before (restricted): dumpDataMem_1_startDump
//
// Method: dumpDataMem_2_startDump
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
// Sequenced before (restricted): dumpDataMem_2_startDump
// Sequenced after (restricted): dumpDataMem_2_doneDump
//
// Method: dumpDataMem_2_doneDump
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
// Sequenced before (restricted): dumpDataMem_2_startDump
//
// Method: dumpDataMem_3_startDump
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
// Sequenced before (restricted): dumpDataMem_3_startDump
// Sequenced after (restricted): dumpDataMem_3_doneDump
//
// Method: dumpDataMem_3_doneDump
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
// Sequenced before (restricted): dumpDataMem_3_startDump
//
// Method: dumpDataMem_4_startDump
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
// Sequenced before (restricted): dumpDataMem_4_startDump
// Sequenced after (restricted): dumpDataMem_4_doneDump
//
// Method: dumpDataMem_4_doneDump
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
// Sequenced before (restricted): dumpDataMem_4_startDump
//
// Method: dumpDataMem_5_startDump
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
// Sequenced before (restricted): dumpDataMem_5_startDump
// Sequenced after (restricted): dumpDataMem_5_doneDump
//
// Method: dumpDataMem_5_doneDump
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_startDump,
// 	       dumpDataMem_6_doneDump
// Sequenced before (restricted): dumpDataMem_5_startDump
//
// Method: dumpDataMem_6_startDump
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump
// Sequenced before (restricted): dumpDataMem_6_startDump
// Sequenced after (restricted): dumpDataMem_6_doneDump
//
// Method: dumpDataMem_6_doneDump
// Conflict-free: coreStatus_0_getState,
// 	       coreStatus_1_getState,
// 	       coreStatus_2_getState,
// 	       coreStatus_3_getState,
// 	       coreStatus_4_getState,
// 	       coreStatus_5_getState,
// 	       coreStatus_6_getState,
// 	       dumpDataMem_0_startDump,
// 	       dumpDataMem_0_doneDump,
// 	       dumpDataMem_1_startDump,
// 	       dumpDataMem_1_doneDump,
// 	       dumpDataMem_2_startDump,
// 	       dumpDataMem_2_doneDump,
// 	       dumpDataMem_3_startDump,
// 	       dumpDataMem_3_doneDump,
// 	       dumpDataMem_4_startDump,
// 	       dumpDataMem_4_doneDump,
// 	       dumpDataMem_5_startDump,
// 	       dumpDataMem_5_doneDump,
// 	       dumpDataMem_6_doneDump
// Sequenced before (restricted): dumpDataMem_6_startDump
//
//
// Ports:
// Name                         I/O  size props
// coreStatus_0_getState          O     1 reg
// RDY_coreStatus_0_getState      O     1 const
// coreStatus_1_getState          O     1 reg
// RDY_coreStatus_1_getState      O     1 const
// coreStatus_2_getState          O     1 reg
// RDY_coreStatus_2_getState      O     1 const
// coreStatus_3_getState          O     1 reg
// RDY_coreStatus_3_getState      O     1 const
// coreStatus_4_getState          O     1 reg
// RDY_coreStatus_4_getState      O     1 const
// coreStatus_5_getState          O     1 reg
// RDY_coreStatus_5_getState      O     1 const
// coreStatus_6_getState          O     1 reg
// RDY_coreStatus_6_getState      O     1 const
// RDY_dumpDataMem_0_startDump    O     1 const
// dumpDataMem_0_doneDump         O     1
// RDY_dumpDataMem_0_doneDump     O     1 const
// RDY_dumpDataMem_1_startDump    O     1 const
// dumpDataMem_1_doneDump         O     1
// RDY_dumpDataMem_1_doneDump     O     1 const
// RDY_dumpDataMem_2_startDump    O     1 const
// dumpDataMem_2_doneDump         O     1
// RDY_dumpDataMem_2_doneDump     O     1 const
// RDY_dumpDataMem_3_startDump    O     1 const
// dumpDataMem_3_doneDump         O     1
// RDY_dumpDataMem_3_doneDump     O     1 const
// RDY_dumpDataMem_4_startDump    O     1 const
// dumpDataMem_4_doneDump         O     1
// RDY_dumpDataMem_4_doneDump     O     1 const
// RDY_dumpDataMem_5_startDump    O     1 const
// dumpDataMem_5_doneDump         O     1
// RDY_dumpDataMem_5_doneDump     O     1 const
// RDY_dumpDataMem_6_startDump    O     1 const
// dumpDataMem_6_doneDump         O     1
// RDY_dumpDataMem_6_doneDump     O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// EN_dumpDataMem_0_startDump     I     1
// EN_dumpDataMem_1_startDump     I     1
// EN_dumpDataMem_2_startDump     I     1
// EN_dumpDataMem_3_startDump     I     1
// EN_dumpDataMem_4_startDump     I     1
// EN_dumpDataMem_5_startDump     I     1
// EN_dumpDataMem_6_startDump     I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
`define BSV_ASSIGNMENT_DELAY
`endif

module mkSystem(CLK,
		RST_N,

		coreStatus_0_getState,
		RDY_coreStatus_0_getState,

		coreStatus_1_getState,
		RDY_coreStatus_1_getState,

		coreStatus_2_getState,
		RDY_coreStatus_2_getState,

		coreStatus_3_getState,
		RDY_coreStatus_3_getState,

		coreStatus_4_getState,
		RDY_coreStatus_4_getState,

		coreStatus_5_getState,
		RDY_coreStatus_5_getState,

		coreStatus_6_getState,
		RDY_coreStatus_6_getState,

		EN_dumpDataMem_0_startDump,
		RDY_dumpDataMem_0_startDump,

		dumpDataMem_0_doneDump,
		RDY_dumpDataMem_0_doneDump,

		EN_dumpDataMem_1_startDump,
		RDY_dumpDataMem_1_startDump,

		dumpDataMem_1_doneDump,
		RDY_dumpDataMem_1_doneDump,

		EN_dumpDataMem_2_startDump,
		RDY_dumpDataMem_2_startDump,

		dumpDataMem_2_doneDump,
		RDY_dumpDataMem_2_doneDump,

		EN_dumpDataMem_3_startDump,
		RDY_dumpDataMem_3_startDump,

		dumpDataMem_3_doneDump,
		RDY_dumpDataMem_3_doneDump,

		EN_dumpDataMem_4_startDump,
		RDY_dumpDataMem_4_startDump,

		dumpDataMem_4_doneDump,
		RDY_dumpDataMem_4_doneDump,

		EN_dumpDataMem_5_startDump,
		RDY_dumpDataMem_5_startDump,

		dumpDataMem_5_doneDump,
		RDY_dumpDataMem_5_doneDump,

		EN_dumpDataMem_6_startDump,
		RDY_dumpDataMem_6_startDump,

		dumpDataMem_6_doneDump,
		RDY_dumpDataMem_6_doneDump);
  input  CLK;
  input  RST_N;

  // value method coreStatus_0_getState
  output coreStatus_0_getState;
  output RDY_coreStatus_0_getState;

  // value method coreStatus_1_getState
  output coreStatus_1_getState;
  output RDY_coreStatus_1_getState;

  // value method coreStatus_2_getState
  output coreStatus_2_getState;
  output RDY_coreStatus_2_getState;

  // value method coreStatus_3_getState
  output coreStatus_3_getState;
  output RDY_coreStatus_3_getState;

  // value method coreStatus_4_getState
  output coreStatus_4_getState;
  output RDY_coreStatus_4_getState;

  // value method coreStatus_5_getState
  output coreStatus_5_getState;
  output RDY_coreStatus_5_getState;

  // value method coreStatus_6_getState
  output coreStatus_6_getState;
  output RDY_coreStatus_6_getState;

  // action method dumpDataMem_0_startDump
  input  EN_dumpDataMem_0_startDump;
  output RDY_dumpDataMem_0_startDump;

  // value method dumpDataMem_0_doneDump
  output dumpDataMem_0_doneDump;
  output RDY_dumpDataMem_0_doneDump;

  // action method dumpDataMem_1_startDump
  input  EN_dumpDataMem_1_startDump;
  output RDY_dumpDataMem_1_startDump;

  // value method dumpDataMem_1_doneDump
  output dumpDataMem_1_doneDump;
  output RDY_dumpDataMem_1_doneDump;

  // action method dumpDataMem_2_startDump
  input  EN_dumpDataMem_2_startDump;
  output RDY_dumpDataMem_2_startDump;

  // value method dumpDataMem_2_doneDump
  output dumpDataMem_2_doneDump;
  output RDY_dumpDataMem_2_doneDump;

  // action method dumpDataMem_3_startDump
  input  EN_dumpDataMem_3_startDump;
  output RDY_dumpDataMem_3_startDump;

  // value method dumpDataMem_3_doneDump
  output dumpDataMem_3_doneDump;
  output RDY_dumpDataMem_3_doneDump;

  // action method dumpDataMem_4_startDump
  input  EN_dumpDataMem_4_startDump;
  output RDY_dumpDataMem_4_startDump;

  // value method dumpDataMem_4_doneDump
  output dumpDataMem_4_doneDump;
  output RDY_dumpDataMem_4_doneDump;

  // action method dumpDataMem_5_startDump
  input  EN_dumpDataMem_5_startDump;
  output RDY_dumpDataMem_5_startDump;

  // value method dumpDataMem_5_doneDump
  output dumpDataMem_5_doneDump;
  output RDY_dumpDataMem_5_doneDump;

  // action method dumpDataMem_6_startDump
  input  EN_dumpDataMem_6_startDump;
  output RDY_dumpDataMem_6_startDump;

  // value method dumpDataMem_6_doneDump
  output dumpDataMem_6_doneDump;
  output RDY_dumpDataMem_6_doneDump;

  // signals for module outputs
  wire RDY_coreStatus_0_getState,
       RDY_coreStatus_1_getState,
       RDY_coreStatus_2_getState,
       RDY_coreStatus_3_getState,
       RDY_coreStatus_4_getState,
       RDY_coreStatus_5_getState,
       RDY_coreStatus_6_getState,
       RDY_dumpDataMem_0_doneDump,
       RDY_dumpDataMem_0_startDump,
       RDY_dumpDataMem_1_doneDump,
       RDY_dumpDataMem_1_startDump,
       RDY_dumpDataMem_2_doneDump,
       RDY_dumpDataMem_2_startDump,
       RDY_dumpDataMem_3_doneDump,
       RDY_dumpDataMem_3_startDump,
       RDY_dumpDataMem_4_doneDump,
       RDY_dumpDataMem_4_startDump,
       RDY_dumpDataMem_5_doneDump,
       RDY_dumpDataMem_5_startDump,
       RDY_dumpDataMem_6_doneDump,
       RDY_dumpDataMem_6_startDump,
       coreStatus_0_getState,
       coreStatus_1_getState,
       coreStatus_2_getState,
       coreStatus_3_getState,
       coreStatus_4_getState,
       coreStatus_5_getState,
       coreStatus_6_getState,
       dumpDataMem_0_doneDump,
       dumpDataMem_1_doneDump,
       dumpDataMem_2_doneDump,
       dumpDataMem_3_doneDump,
       dumpDataMem_4_doneDump,
       dumpDataMem_5_doneDump,
       dumpDataMem_6_doneDump;

  // ports of submodule cores_0
  wire [47 : 0] cores_0$getNoCPacket_get, cores_0$putNoCPacket_put;
  wire cores_0$EN_dumpMem_startDump,
       cores_0$EN_getNoCPacket_get,
       cores_0$EN_putNoCPacket_put,
       cores_0$RDY_getNoCPacket_get,
       cores_0$RDY_putNoCPacket_put,
       cores_0$checkStatus_getState,
       cores_0$dumpMem_doneDump;

  // ports of submodule cores_1
  wire [47 : 0] cores_1$getNoCPacket_get, cores_1$putNoCPacket_put;
  wire cores_1$EN_dumpMem_startDump,
       cores_1$EN_getNoCPacket_get,
       cores_1$EN_putNoCPacket_put,
       cores_1$RDY_getNoCPacket_get,
       cores_1$RDY_putNoCPacket_put,
       cores_1$checkStatus_getState,
       cores_1$dumpMem_doneDump;

  // ports of submodule cores_2
  wire [47 : 0] cores_2$getNoCPacket_get, cores_2$putNoCPacket_put;
  wire cores_2$EN_dumpMem_startDump,
       cores_2$EN_getNoCPacket_get,
       cores_2$EN_putNoCPacket_put,
       cores_2$RDY_getNoCPacket_get,
       cores_2$RDY_putNoCPacket_put,
       cores_2$checkStatus_getState,
       cores_2$dumpMem_doneDump;

  // ports of submodule cores_3
  wire [47 : 0] cores_3$putNoCPacket_put;
  wire cores_3$EN_dumpMem_startDump,
       cores_3$EN_getNoCPacket_get,
       cores_3$EN_putNoCPacket_put,
       cores_3$RDY_getNoCPacket_get,
       cores_3$RDY_putNoCPacket_put,
       cores_3$checkStatus_getState,
       cores_3$dumpMem_doneDump;

  // ports of submodule cores_4
  wire [47 : 0] cores_4$getNoCPacket_get, cores_4$putNoCPacket_put;
  wire cores_4$EN_dumpMem_startDump,
       cores_4$EN_getNoCPacket_get,
       cores_4$EN_putNoCPacket_put,
       cores_4$RDY_getNoCPacket_get,
       cores_4$RDY_putNoCPacket_put,
       cores_4$checkStatus_getState,
       cores_4$dumpMem_doneDump;

  // ports of submodule cores_5
  wire [47 : 0] cores_5$getNoCPacket_get, cores_5$putNoCPacket_put;
  wire cores_5$EN_dumpMem_startDump,
       cores_5$EN_getNoCPacket_get,
       cores_5$EN_putNoCPacket_put,
       cores_5$RDY_getNoCPacket_get,
       cores_5$RDY_putNoCPacket_put,
       cores_5$checkStatus_getState,
       cores_5$dumpMem_doneDump;

  // ports of submodule cores_6
  wire [47 : 0] cores_6$getNoCPacket_get, cores_6$putNoCPacket_put;
  wire cores_6$EN_dumpMem_startDump,
       cores_6$EN_getNoCPacket_get,
       cores_6$EN_putNoCPacket_put,
       cores_6$RDY_getNoCPacket_get,
       cores_6$RDY_putNoCPacket_put,
       cores_6$checkStatus_getState,
       cores_6$dumpMem_doneDump;

  // ports of submodule node_0
  wire [47 : 0] node_0$channels_0_putNoCPacket_put,
		node_0$channels_1_putNoCPacket_put,
		node_0$channels_2_putNoCPacket_put,
		node_0$channels_3_putNoCPacket_put,
		node_0$channels_4_putNoCPacket_put;
  wire node_0$EN_channels_0_getNoCPacket_get,
       node_0$EN_channels_0_putNoCPacket_put,
       node_0$EN_channels_1_getNoCPacket_get,
       node_0$EN_channels_1_putNoCPacket_put,
       node_0$EN_channels_2_getNoCPacket_get,
       node_0$EN_channels_2_putNoCPacket_put,
       node_0$EN_channels_3_getNoCPacket_get,
       node_0$EN_channels_3_putNoCPacket_put,
       node_0$EN_channels_4_getNoCPacket_get,
       node_0$EN_channels_4_putNoCPacket_put;

  // ports of submodule node_0_1
  wire [47 : 0] node_0_1$channels_0_putNoCPacket_put,
		node_0_1$channels_1_putNoCPacket_put,
		node_0_1$channels_2_putNoCPacket_put,
		node_0_1$channels_3_putNoCPacket_put,
		node_0_1$channels_4_putNoCPacket_put;
  wire node_0_1$EN_channels_0_getNoCPacket_get,
       node_0_1$EN_channels_0_putNoCPacket_put,
       node_0_1$EN_channels_1_getNoCPacket_get,
       node_0_1$EN_channels_1_putNoCPacket_put,
       node_0_1$EN_channels_2_getNoCPacket_get,
       node_0_1$EN_channels_2_putNoCPacket_put,
       node_0_1$EN_channels_3_getNoCPacket_get,
       node_0_1$EN_channels_3_putNoCPacket_put,
       node_0_1$EN_channels_4_getNoCPacket_get,
       node_0_1$EN_channels_4_putNoCPacket_put;

  // ports of submodule node_0_2
  wire [47 : 0] node_0_2$channels_0_getNoCPacket_get,
		node_0_2$channels_0_putNoCPacket_put,
		node_0_2$channels_1_putNoCPacket_put,
		node_0_2$channels_2_putNoCPacket_put,
		node_0_2$channels_3_getNoCPacket_get,
		node_0_2$channels_3_putNoCPacket_put,
		node_0_2$channels_4_putNoCPacket_put;
  wire node_0_2$EN_channels_0_getNoCPacket_get,
       node_0_2$EN_channels_0_putNoCPacket_put,
       node_0_2$EN_channels_1_getNoCPacket_get,
       node_0_2$EN_channels_1_putNoCPacket_put,
       node_0_2$EN_channels_2_getNoCPacket_get,
       node_0_2$EN_channels_2_putNoCPacket_put,
       node_0_2$EN_channels_3_getNoCPacket_get,
       node_0_2$EN_channels_3_putNoCPacket_put,
       node_0_2$EN_channels_4_getNoCPacket_get,
       node_0_2$EN_channels_4_putNoCPacket_put,
       node_0_2$RDY_channels_0_getNoCPacket_get,
       node_0_2$RDY_channels_0_putNoCPacket_put,
       node_0_2$RDY_channels_2_getNoCPacket_get,
       node_0_2$RDY_channels_2_putNoCPacket_put,
       node_0_2$RDY_channels_3_getNoCPacket_get,
       node_0_2$RDY_channels_3_putNoCPacket_put;

  // ports of submodule node_1
  wire [47 : 0] node_1$channels_0_putNoCPacket_put,
		node_1$channels_1_putNoCPacket_put,
		node_1$channels_2_putNoCPacket_put,
		node_1$channels_3_putNoCPacket_put,
		node_1$channels_4_putNoCPacket_put;
  wire node_1$EN_channels_0_getNoCPacket_get,
       node_1$EN_channels_0_putNoCPacket_put,
       node_1$EN_channels_1_getNoCPacket_get,
       node_1$EN_channels_1_putNoCPacket_put,
       node_1$EN_channels_2_getNoCPacket_get,
       node_1$EN_channels_2_putNoCPacket_put,
       node_1$EN_channels_3_getNoCPacket_get,
       node_1$EN_channels_3_putNoCPacket_put,
       node_1$EN_channels_4_getNoCPacket_get,
       node_1$EN_channels_4_putNoCPacket_put;

  // ports of submodule node_1_1
  wire [47 : 0] node_1_1$channels_0_putNoCPacket_put,
		node_1_1$channels_1_putNoCPacket_put,
		node_1_1$channels_2_putNoCPacket_put,
		node_1_1$channels_3_putNoCPacket_put,
		node_1_1$channels_4_putNoCPacket_put;
  wire node_1_1$EN_channels_0_getNoCPacket_get,
       node_1_1$EN_channels_0_putNoCPacket_put,
       node_1_1$EN_channels_1_getNoCPacket_get,
       node_1_1$EN_channels_1_putNoCPacket_put,
       node_1_1$EN_channels_2_getNoCPacket_get,
       node_1_1$EN_channels_2_putNoCPacket_put,
       node_1_1$EN_channels_3_getNoCPacket_get,
       node_1_1$EN_channels_3_putNoCPacket_put,
       node_1_1$EN_channels_4_getNoCPacket_get,
       node_1_1$EN_channels_4_putNoCPacket_put;

  // ports of submodule node_1_2
  wire [47 : 0] node_1_2$channels_0_getNoCPacket_get,
		node_1_2$channels_0_putNoCPacket_put,
		node_1_2$channels_1_putNoCPacket_put,
		node_1_2$channels_2_putNoCPacket_put,
		node_1_2$channels_3_getNoCPacket_get,
		node_1_2$channels_3_putNoCPacket_put,
		node_1_2$channels_4_getNoCPacket_get,
		node_1_2$channels_4_putNoCPacket_put;
  wire node_1_2$EN_channels_0_getNoCPacket_get,
       node_1_2$EN_channels_0_putNoCPacket_put,
       node_1_2$EN_channels_1_getNoCPacket_get,
       node_1_2$EN_channels_1_putNoCPacket_put,
       node_1_2$EN_channels_2_getNoCPacket_get,
       node_1_2$EN_channels_2_putNoCPacket_put,
       node_1_2$EN_channels_3_getNoCPacket_get,
       node_1_2$EN_channels_3_putNoCPacket_put,
       node_1_2$EN_channels_4_getNoCPacket_get,
       node_1_2$EN_channels_4_putNoCPacket_put,
       node_1_2$RDY_channels_0_getNoCPacket_get,
       node_1_2$RDY_channels_0_putNoCPacket_put,
       node_1_2$RDY_channels_2_getNoCPacket_get,
       node_1_2$RDY_channels_2_putNoCPacket_put,
       node_1_2$RDY_channels_3_getNoCPacket_get,
       node_1_2$RDY_channels_3_putNoCPacket_put,
       node_1_2$RDY_channels_4_getNoCPacket_get,
       node_1_2$RDY_channels_4_putNoCPacket_put;

  // ports of submodule node_2
  wire [47 : 0] node_2$channels_0_putNoCPacket_put,
		node_2$channels_1_putNoCPacket_put,
		node_2$channels_2_putNoCPacket_put,
		node_2$channels_3_putNoCPacket_put,
		node_2$channels_4_putNoCPacket_put;
  wire node_2$EN_channels_0_getNoCPacket_get,
       node_2$EN_channels_0_putNoCPacket_put,
       node_2$EN_channels_1_getNoCPacket_get,
       node_2$EN_channels_1_putNoCPacket_put,
       node_2$EN_channels_2_getNoCPacket_get,
       node_2$EN_channels_2_putNoCPacket_put,
       node_2$EN_channels_3_getNoCPacket_get,
       node_2$EN_channels_3_putNoCPacket_put,
       node_2$EN_channels_4_getNoCPacket_get,
       node_2$EN_channels_4_putNoCPacket_put;

  // ports of submodule node_2_1
  wire [47 : 0] node_2_1$channels_0_putNoCPacket_put,
		node_2_1$channels_1_putNoCPacket_put,
		node_2_1$channels_2_putNoCPacket_put,
		node_2_1$channels_3_putNoCPacket_put,
		node_2_1$channels_4_putNoCPacket_put;
  wire node_2_1$EN_channels_0_getNoCPacket_get,
       node_2_1$EN_channels_0_putNoCPacket_put,
       node_2_1$EN_channels_1_getNoCPacket_get,
       node_2_1$EN_channels_1_putNoCPacket_put,
       node_2_1$EN_channels_2_getNoCPacket_get,
       node_2_1$EN_channels_2_putNoCPacket_put,
       node_2_1$EN_channels_3_getNoCPacket_get,
       node_2_1$EN_channels_3_putNoCPacket_put,
       node_2_1$EN_channels_4_getNoCPacket_get,
       node_2_1$EN_channels_4_putNoCPacket_put;

  // ports of submodule node_2_2
  wire [47 : 0] node_2_2$channels_0_getNoCPacket_get,
		node_2_2$channels_0_putNoCPacket_put,
		node_2_2$channels_1_putNoCPacket_put,
		node_2_2$channels_2_putNoCPacket_put,
		node_2_2$channels_3_putNoCPacket_put,
		node_2_2$channels_4_getNoCPacket_get,
		node_2_2$channels_4_putNoCPacket_put;
  wire node_2_2$EN_channels_0_getNoCPacket_get,
       node_2_2$EN_channels_0_putNoCPacket_put,
       node_2_2$EN_channels_1_getNoCPacket_get,
       node_2_2$EN_channels_1_putNoCPacket_put,
       node_2_2$EN_channels_2_getNoCPacket_get,
       node_2_2$EN_channels_2_putNoCPacket_put,
       node_2_2$EN_channels_3_getNoCPacket_get,
       node_2_2$EN_channels_3_putNoCPacket_put,
       node_2_2$EN_channels_4_getNoCPacket_get,
       node_2_2$EN_channels_4_putNoCPacket_put,
       node_2_2$RDY_channels_0_getNoCPacket_get,
       node_2_2$RDY_channels_0_putNoCPacket_put,
       node_2_2$RDY_channels_2_getNoCPacket_get,
       node_2_2$RDY_channels_2_putNoCPacket_put,
       node_2_2$RDY_channels_4_getNoCPacket_get,
       node_2_2$RDY_channels_4_putNoCPacket_put;

  // rule scheduling signals
  wire CAN_FIRE_RL_mkConnectionGetPut,
       CAN_FIRE_RL_mkConnectionGetPut_1,
       CAN_FIRE_RL_mkConnectionGetPut_12,
       CAN_FIRE_RL_mkConnectionGetPut_13,
       CAN_FIRE_RL_mkConnectionGetPut_14,
       CAN_FIRE_RL_mkConnectionGetPut_15,
       CAN_FIRE_RL_mkConnectionGetPut_16,
       CAN_FIRE_RL_mkConnectionGetPut_17,
       CAN_FIRE_RL_mkConnectionGetPut_2,
       CAN_FIRE_RL_mkConnectionGetPut_24,
       CAN_FIRE_RL_mkConnectionGetPut_25,
       CAN_FIRE_RL_mkConnectionGetPut_26,
       CAN_FIRE_RL_mkConnectionGetPut_27,
       CAN_FIRE_RL_mkConnectionGetPut_28,
       CAN_FIRE_RL_mkConnectionGetPut_29,
       CAN_FIRE_RL_mkConnectionGetPut_3,
       CAN_FIRE_RL_mkConnectionGetPut_30,
       CAN_FIRE_RL_mkConnectionGetPut_31,
       CAN_FIRE_RL_mkConnectionGetPut_32,
       CAN_FIRE_RL_mkConnectionGetPut_33,
       CAN_FIRE_RL_mkConnectionGetPut_34,
       CAN_FIRE_RL_mkConnectionGetPut_35,
       CAN_FIRE_RL_mkConnectionGetPut_36,
       CAN_FIRE_RL_mkConnectionGetPut_37,
       CAN_FIRE_dumpDataMem_0_startDump,
       CAN_FIRE_dumpDataMem_1_startDump,
       CAN_FIRE_dumpDataMem_2_startDump,
       CAN_FIRE_dumpDataMem_3_startDump,
       CAN_FIRE_dumpDataMem_4_startDump,
       CAN_FIRE_dumpDataMem_5_startDump,
       CAN_FIRE_dumpDataMem_6_startDump,
       WILL_FIRE_RL_mkConnectionGetPut,
       WILL_FIRE_RL_mkConnectionGetPut_1,
       WILL_FIRE_RL_mkConnectionGetPut_12,
       WILL_FIRE_RL_mkConnectionGetPut_13,
       WILL_FIRE_RL_mkConnectionGetPut_14,
       WILL_FIRE_RL_mkConnectionGetPut_15,
       WILL_FIRE_RL_mkConnectionGetPut_16,
       WILL_FIRE_RL_mkConnectionGetPut_17,
       WILL_FIRE_RL_mkConnectionGetPut_2,
       WILL_FIRE_RL_mkConnectionGetPut_24,
       WILL_FIRE_RL_mkConnectionGetPut_25,
       WILL_FIRE_RL_mkConnectionGetPut_26,
       WILL_FIRE_RL_mkConnectionGetPut_27,
       WILL_FIRE_RL_mkConnectionGetPut_28,
       WILL_FIRE_RL_mkConnectionGetPut_29,
       WILL_FIRE_RL_mkConnectionGetPut_3,
       WILL_FIRE_RL_mkConnectionGetPut_30,
       WILL_FIRE_RL_mkConnectionGetPut_31,
       WILL_FIRE_RL_mkConnectionGetPut_32,
       WILL_FIRE_RL_mkConnectionGetPut_33,
       WILL_FIRE_RL_mkConnectionGetPut_34,
       WILL_FIRE_RL_mkConnectionGetPut_35,
       WILL_FIRE_RL_mkConnectionGetPut_36,
       WILL_FIRE_RL_mkConnectionGetPut_37,
       WILL_FIRE_dumpDataMem_0_startDump,
       WILL_FIRE_dumpDataMem_1_startDump,
       WILL_FIRE_dumpDataMem_2_startDump,
       WILL_FIRE_dumpDataMem_3_startDump,
       WILL_FIRE_dumpDataMem_4_startDump,
       WILL_FIRE_dumpDataMem_5_startDump,
       WILL_FIRE_dumpDataMem_6_startDump;

  // value method coreStatus_0_getState
  assign coreStatus_0_getState = cores_0$checkStatus_getState ;
  assign RDY_coreStatus_0_getState = 1'd1 ;

  // value method coreStatus_1_getState
  assign coreStatus_1_getState = cores_1$checkStatus_getState ;
  assign RDY_coreStatus_1_getState = 1'd1 ;

  // value method coreStatus_2_getState
  assign coreStatus_2_getState = cores_2$checkStatus_getState ;
  assign RDY_coreStatus_2_getState = 1'd1 ;

  // value method coreStatus_3_getState
  assign coreStatus_3_getState = cores_3$checkStatus_getState ;
  assign RDY_coreStatus_3_getState = 1'd1 ;

  // value method coreStatus_4_getState
  assign coreStatus_4_getState = cores_4$checkStatus_getState ;
  assign RDY_coreStatus_4_getState = 1'd1 ;

  // value method coreStatus_5_getState
  assign coreStatus_5_getState = cores_5$checkStatus_getState ;
  assign RDY_coreStatus_5_getState = 1'd1 ;

  // value method coreStatus_6_getState
  assign coreStatus_6_getState = cores_6$checkStatus_getState ;
  assign RDY_coreStatus_6_getState = 1'd1 ;

  // action method dumpDataMem_0_startDump
  assign RDY_dumpDataMem_0_startDump = 1'd1 ;
  assign CAN_FIRE_dumpDataMem_0_startDump = 1'd1 ;
  assign WILL_FIRE_dumpDataMem_0_startDump = EN_dumpDataMem_0_startDump ;

  // value method dumpDataMem_0_doneDump
  assign dumpDataMem_0_doneDump = cores_0$dumpMem_doneDump ;
  assign RDY_dumpDataMem_0_doneDump = 1'd1 ;

  // action method dumpDataMem_1_startDump
  assign RDY_dumpDataMem_1_startDump = 1'd1 ;
  assign CAN_FIRE_dumpDataMem_1_startDump = 1'd1 ;
  assign WILL_FIRE_dumpDataMem_1_startDump = EN_dumpDataMem_1_startDump ;

  // value method dumpDataMem_1_doneDump
  assign dumpDataMem_1_doneDump = cores_1$dumpMem_doneDump ;
  assign RDY_dumpDataMem_1_doneDump = 1'd1 ;

  // action method dumpDataMem_2_startDump
  assign RDY_dumpDataMem_2_startDump = 1'd1 ;
  assign CAN_FIRE_dumpDataMem_2_startDump = 1'd1 ;
  assign WILL_FIRE_dumpDataMem_2_startDump = EN_dumpDataMem_2_startDump ;

  // value method dumpDataMem_2_doneDump
  assign dumpDataMem_2_doneDump = cores_2$dumpMem_doneDump ;
  assign RDY_dumpDataMem_2_doneDump = 1'd1 ;

  // action method dumpDataMem_3_startDump
  assign RDY_dumpDataMem_3_startDump = 1'd1 ;
  assign CAN_FIRE_dumpDataMem_3_startDump = 1'd1 ;
  assign WILL_FIRE_dumpDataMem_3_startDump = EN_dumpDataMem_3_startDump ;

  // value method dumpDataMem_3_doneDump
  assign dumpDataMem_3_doneDump = cores_3$dumpMem_doneDump ;
  assign RDY_dumpDataMem_3_doneDump = 1'd1 ;

  // action method dumpDataMem_4_startDump
  assign RDY_dumpDataMem_4_startDump = 1'd1 ;
  assign CAN_FIRE_dumpDataMem_4_startDump = 1'd1 ;
  assign WILL_FIRE_dumpDataMem_4_startDump = EN_dumpDataMem_4_startDump ;

  // value method dumpDataMem_4_doneDump
  assign dumpDataMem_4_doneDump = cores_4$dumpMem_doneDump ;
  assign RDY_dumpDataMem_4_doneDump = 1'd1 ;

  // action method dumpDataMem_5_startDump
  assign RDY_dumpDataMem_5_startDump = 1'd1 ;
  assign CAN_FIRE_dumpDataMem_5_startDump = 1'd1 ;
  assign WILL_FIRE_dumpDataMem_5_startDump = EN_dumpDataMem_5_startDump ;

  // value method dumpDataMem_5_doneDump
  assign dumpDataMem_5_doneDump = cores_5$dumpMem_doneDump ;
  assign RDY_dumpDataMem_5_doneDump = 1'd1 ;

  // action method dumpDataMem_6_startDump
  assign RDY_dumpDataMem_6_startDump = 1'd1 ;
  assign CAN_FIRE_dumpDataMem_6_startDump = 1'd1 ;
  assign WILL_FIRE_dumpDataMem_6_startDump = EN_dumpDataMem_6_startDump ;

  // value method dumpDataMem_6_doneDump
  assign dumpDataMem_6_doneDump = cores_6$dumpMem_doneDump ;
  assign RDY_dumpDataMem_6_doneDump = 1'd1 ;

  // submodule cores_0
  mkCore #(.procId(4'd0)) cores_0(.CLK(CLK),
				  .RST_N(RST_N),
				  .putNoCPacket_put(cores_0$putNoCPacket_put),
				  .EN_putNoCPacket_put(cores_0$EN_putNoCPacket_put),
				  .EN_getNoCPacket_get(cores_0$EN_getNoCPacket_get),
				  .EN_dumpMem_startDump(cores_0$EN_dumpMem_startDump),
				  .RDY_putNoCPacket_put(cores_0$RDY_putNoCPacket_put),
				  .getNoCPacket_get(cores_0$getNoCPacket_get),
				  .RDY_getNoCPacket_get(cores_0$RDY_getNoCPacket_get),
				  .checkStatus_getState(cores_0$checkStatus_getState),
				  .RDY_checkStatus_getState(),
				  .RDY_dumpMem_startDump(),
				  .dumpMem_doneDump(cores_0$dumpMem_doneDump),
				  .RDY_dumpMem_doneDump());

  // submodule cores_1
  mkCore #(.procId(4'd1)) cores_1(.CLK(CLK),
				  .RST_N(RST_N),
				  .putNoCPacket_put(cores_1$putNoCPacket_put),
				  .EN_putNoCPacket_put(cores_1$EN_putNoCPacket_put),
				  .EN_getNoCPacket_get(cores_1$EN_getNoCPacket_get),
				  .EN_dumpMem_startDump(cores_1$EN_dumpMem_startDump),
				  .RDY_putNoCPacket_put(cores_1$RDY_putNoCPacket_put),
				  .getNoCPacket_get(cores_1$getNoCPacket_get),
				  .RDY_getNoCPacket_get(cores_1$RDY_getNoCPacket_get),
				  .checkStatus_getState(cores_1$checkStatus_getState),
				  .RDY_checkStatus_getState(),
				  .RDY_dumpMem_startDump(),
				  .dumpMem_doneDump(cores_1$dumpMem_doneDump),
				  .RDY_dumpMem_doneDump());

  // submodule cores_2
  mkCore #(.procId(4'd2)) cores_2(.CLK(CLK),
				  .RST_N(RST_N),
				  .putNoCPacket_put(cores_2$putNoCPacket_put),
				  .EN_putNoCPacket_put(cores_2$EN_putNoCPacket_put),
				  .EN_getNoCPacket_get(cores_2$EN_getNoCPacket_get),
				  .EN_dumpMem_startDump(cores_2$EN_dumpMem_startDump),
				  .RDY_putNoCPacket_put(cores_2$RDY_putNoCPacket_put),
				  .getNoCPacket_get(cores_2$getNoCPacket_get),
				  .RDY_getNoCPacket_get(cores_2$RDY_getNoCPacket_get),
				  .checkStatus_getState(cores_2$checkStatus_getState),
				  .RDY_checkStatus_getState(),
				  .RDY_dumpMem_startDump(),
				  .dumpMem_doneDump(cores_2$dumpMem_doneDump),
				  .RDY_dumpMem_doneDump());

  // submodule cores_3
  mkCore #(.procId(4'd3)) cores_3(.CLK(CLK),
				  .RST_N(RST_N),
				  .putNoCPacket_put(cores_3$putNoCPacket_put),
				  .EN_putNoCPacket_put(cores_3$EN_putNoCPacket_put),
				  .EN_getNoCPacket_get(cores_3$EN_getNoCPacket_get),
				  .EN_dumpMem_startDump(cores_3$EN_dumpMem_startDump),
				  .RDY_putNoCPacket_put(cores_3$RDY_putNoCPacket_put),
				  .getNoCPacket_get(),
				  .RDY_getNoCPacket_get(cores_3$RDY_getNoCPacket_get),
				  .checkStatus_getState(cores_3$checkStatus_getState),
				  .RDY_checkStatus_getState(),
				  .RDY_dumpMem_startDump(),
				  .dumpMem_doneDump(cores_3$dumpMem_doneDump),
				  .RDY_dumpMem_doneDump());

  // submodule cores_4
  mkCore #(.procId(4'd4)) cores_4(.CLK(CLK),
				  .RST_N(RST_N),
				  .putNoCPacket_put(cores_4$putNoCPacket_put),
				  .EN_putNoCPacket_put(cores_4$EN_putNoCPacket_put),
				  .EN_getNoCPacket_get(cores_4$EN_getNoCPacket_get),
				  .EN_dumpMem_startDump(cores_4$EN_dumpMem_startDump),
				  .RDY_putNoCPacket_put(cores_4$RDY_putNoCPacket_put),
				  .getNoCPacket_get(cores_4$getNoCPacket_get),
				  .RDY_getNoCPacket_get(cores_4$RDY_getNoCPacket_get),
				  .checkStatus_getState(cores_4$checkStatus_getState),
				  .RDY_checkStatus_getState(),
				  .RDY_dumpMem_startDump(),
				  .dumpMem_doneDump(cores_4$dumpMem_doneDump),
				  .RDY_dumpMem_doneDump());

  // submodule cores_5
  mkCore #(.procId(4'd5)) cores_5(.CLK(CLK),
				  .RST_N(RST_N),
				  .putNoCPacket_put(cores_5$putNoCPacket_put),
				  .EN_putNoCPacket_put(cores_5$EN_putNoCPacket_put),
				  .EN_getNoCPacket_get(cores_5$EN_getNoCPacket_get),
				  .EN_dumpMem_startDump(cores_5$EN_dumpMem_startDump),
				  .RDY_putNoCPacket_put(cores_5$RDY_putNoCPacket_put),
				  .getNoCPacket_get(cores_5$getNoCPacket_get),
				  .RDY_getNoCPacket_get(cores_5$RDY_getNoCPacket_get),
				  .checkStatus_getState(cores_5$checkStatus_getState),
				  .RDY_checkStatus_getState(),
				  .RDY_dumpMem_startDump(),
				  .dumpMem_doneDump(cores_5$dumpMem_doneDump),
				  .RDY_dumpMem_doneDump());

  // submodule cores_6
  mkCore #(.procId(4'd6)) cores_6(.CLK(CLK),
				  .RST_N(RST_N),
				  .putNoCPacket_put(cores_6$putNoCPacket_put),
				  .EN_putNoCPacket_put(cores_6$EN_putNoCPacket_put),
				  .EN_getNoCPacket_get(cores_6$EN_getNoCPacket_get),
				  .EN_dumpMem_startDump(cores_6$EN_dumpMem_startDump),
				  .RDY_putNoCPacket_put(cores_6$RDY_putNoCPacket_put),
				  .getNoCPacket_get(cores_6$getNoCPacket_get),
				  .RDY_getNoCPacket_get(cores_6$RDY_getNoCPacket_get),
				  .checkStatus_getState(cores_6$checkStatus_getState),
				  .RDY_checkStatus_getState(),
				  .RDY_dumpMem_startDump(),
				  .dumpMem_doneDump(cores_6$dumpMem_doneDump),
				  .RDY_dumpMem_doneDump());

  // submodule node_0
  mkNode node_0(.thisRowAddr(2'd0),
		.thisColAddr(2'd0),
		.CLK(CLK),
		.RST_N(RST_N),
		.channels_0_putNoCPacket_put(node_0$channels_0_putNoCPacket_put),
		.channels_1_putNoCPacket_put(node_0$channels_1_putNoCPacket_put),
		.channels_2_putNoCPacket_put(node_0$channels_2_putNoCPacket_put),
		.channels_3_putNoCPacket_put(node_0$channels_3_putNoCPacket_put),
		.channels_4_putNoCPacket_put(node_0$channels_4_putNoCPacket_put),
		.EN_channels_0_putNoCPacket_put(node_0$EN_channels_0_putNoCPacket_put),
		.EN_channels_0_getNoCPacket_get(node_0$EN_channels_0_getNoCPacket_get),
		.EN_channels_1_putNoCPacket_put(node_0$EN_channels_1_putNoCPacket_put),
		.EN_channels_1_getNoCPacket_get(node_0$EN_channels_1_getNoCPacket_get),
		.EN_channels_2_putNoCPacket_put(node_0$EN_channels_2_putNoCPacket_put),
		.EN_channels_2_getNoCPacket_get(node_0$EN_channels_2_getNoCPacket_get),
		.EN_channels_3_putNoCPacket_put(node_0$EN_channels_3_putNoCPacket_put),
		.EN_channels_3_getNoCPacket_get(node_0$EN_channels_3_getNoCPacket_get),
		.EN_channels_4_putNoCPacket_put(node_0$EN_channels_4_putNoCPacket_put),
		.EN_channels_4_getNoCPacket_get(node_0$EN_channels_4_getNoCPacket_get),
		.RDY_channels_0_putNoCPacket_put(),
		.channels_0_getNoCPacket_get(),
		.RDY_channels_0_getNoCPacket_get(),
		.RDY_channels_1_putNoCPacket_put(),
		.channels_1_getNoCPacket_get(),
		.RDY_channels_1_getNoCPacket_get(),
		.RDY_channels_2_putNoCPacket_put(),
		.channels_2_getNoCPacket_get(),
		.RDY_channels_2_getNoCPacket_get(),
		.RDY_channels_3_putNoCPacket_put(),
		.channels_3_getNoCPacket_get(),
		.RDY_channels_3_getNoCPacket_get(),
		.RDY_channels_4_putNoCPacket_put(),
		.channels_4_getNoCPacket_get(),
		.RDY_channels_4_getNoCPacket_get());

  // submodule node_0_1
  mkNode node_0_1(.thisRowAddr(2'd0),
		  .thisColAddr(2'd1),
		  .CLK(CLK),
		  .RST_N(RST_N),
		  .channels_0_putNoCPacket_put(node_0_1$channels_0_putNoCPacket_put),
		  .channels_1_putNoCPacket_put(node_0_1$channels_1_putNoCPacket_put),
		  .channels_2_putNoCPacket_put(node_0_1$channels_2_putNoCPacket_put),
		  .channels_3_putNoCPacket_put(node_0_1$channels_3_putNoCPacket_put),
		  .channels_4_putNoCPacket_put(node_0_1$channels_4_putNoCPacket_put),
		  .EN_channels_0_putNoCPacket_put(node_0_1$EN_channels_0_putNoCPacket_put),
		  .EN_channels_0_getNoCPacket_get(node_0_1$EN_channels_0_getNoCPacket_get),
		  .EN_channels_1_putNoCPacket_put(node_0_1$EN_channels_1_putNoCPacket_put),
		  .EN_channels_1_getNoCPacket_get(node_0_1$EN_channels_1_getNoCPacket_get),
		  .EN_channels_2_putNoCPacket_put(node_0_1$EN_channels_2_putNoCPacket_put),
		  .EN_channels_2_getNoCPacket_get(node_0_1$EN_channels_2_getNoCPacket_get),
		  .EN_channels_3_putNoCPacket_put(node_0_1$EN_channels_3_putNoCPacket_put),
		  .EN_channels_3_getNoCPacket_get(node_0_1$EN_channels_3_getNoCPacket_get),
		  .EN_channels_4_putNoCPacket_put(node_0_1$EN_channels_4_putNoCPacket_put),
		  .EN_channels_4_getNoCPacket_get(node_0_1$EN_channels_4_getNoCPacket_get),
		  .RDY_channels_0_putNoCPacket_put(),
		  .channels_0_getNoCPacket_get(),
		  .RDY_channels_0_getNoCPacket_get(),
		  .RDY_channels_1_putNoCPacket_put(),
		  .channels_1_getNoCPacket_get(),
		  .RDY_channels_1_getNoCPacket_get(),
		  .RDY_channels_2_putNoCPacket_put(),
		  .channels_2_getNoCPacket_get(),
		  .RDY_channels_2_getNoCPacket_get(),
		  .RDY_channels_3_putNoCPacket_put(),
		  .channels_3_getNoCPacket_get(),
		  .RDY_channels_3_getNoCPacket_get(),
		  .RDY_channels_4_putNoCPacket_put(),
		  .channels_4_getNoCPacket_get(),
		  .RDY_channels_4_getNoCPacket_get());

  // submodule node_0_2
  mkNode node_0_2(.thisRowAddr(2'd0),
		  .thisColAddr(2'd2),
		  .CLK(CLK),
		  .RST_N(RST_N),
		  .channels_0_putNoCPacket_put(node_0_2$channels_0_putNoCPacket_put),
		  .channels_1_putNoCPacket_put(node_0_2$channels_1_putNoCPacket_put),
		  .channels_2_putNoCPacket_put(node_0_2$channels_2_putNoCPacket_put),
		  .channels_3_putNoCPacket_put(node_0_2$channels_3_putNoCPacket_put),
		  .channels_4_putNoCPacket_put(node_0_2$channels_4_putNoCPacket_put),
		  .EN_channels_0_putNoCPacket_put(node_0_2$EN_channels_0_putNoCPacket_put),
		  .EN_channels_0_getNoCPacket_get(node_0_2$EN_channels_0_getNoCPacket_get),
		  .EN_channels_1_putNoCPacket_put(node_0_2$EN_channels_1_putNoCPacket_put),
		  .EN_channels_1_getNoCPacket_get(node_0_2$EN_channels_1_getNoCPacket_get),
		  .EN_channels_2_putNoCPacket_put(node_0_2$EN_channels_2_putNoCPacket_put),
		  .EN_channels_2_getNoCPacket_get(node_0_2$EN_channels_2_getNoCPacket_get),
		  .EN_channels_3_putNoCPacket_put(node_0_2$EN_channels_3_putNoCPacket_put),
		  .EN_channels_3_getNoCPacket_get(node_0_2$EN_channels_3_getNoCPacket_get),
		  .EN_channels_4_putNoCPacket_put(node_0_2$EN_channels_4_putNoCPacket_put),
		  .EN_channels_4_getNoCPacket_get(node_0_2$EN_channels_4_getNoCPacket_get),
		  .RDY_channels_0_putNoCPacket_put(node_0_2$RDY_channels_0_putNoCPacket_put),
		  .channels_0_getNoCPacket_get(node_0_2$channels_0_getNoCPacket_get),
		  .RDY_channels_0_getNoCPacket_get(node_0_2$RDY_channels_0_getNoCPacket_get),
		  .RDY_channels_1_putNoCPacket_put(),
		  .channels_1_getNoCPacket_get(),
		  .RDY_channels_1_getNoCPacket_get(),
		  .RDY_channels_2_putNoCPacket_put(node_0_2$RDY_channels_2_putNoCPacket_put),
		  .channels_2_getNoCPacket_get(),
		  .RDY_channels_2_getNoCPacket_get(node_0_2$RDY_channels_2_getNoCPacket_get),
		  .RDY_channels_3_putNoCPacket_put(node_0_2$RDY_channels_3_putNoCPacket_put),
		  .channels_3_getNoCPacket_get(node_0_2$channels_3_getNoCPacket_get),
		  .RDY_channels_3_getNoCPacket_get(node_0_2$RDY_channels_3_getNoCPacket_get),
		  .RDY_channels_4_putNoCPacket_put(),
		  .channels_4_getNoCPacket_get(),
		  .RDY_channels_4_getNoCPacket_get());

  // submodule node_1
  mkNode node_1(.thisRowAddr(2'd1),
		.thisColAddr(2'd0),
		.CLK(CLK),
		.RST_N(RST_N),
		.channels_0_putNoCPacket_put(node_1$channels_0_putNoCPacket_put),
		.channels_1_putNoCPacket_put(node_1$channels_1_putNoCPacket_put),
		.channels_2_putNoCPacket_put(node_1$channels_2_putNoCPacket_put),
		.channels_3_putNoCPacket_put(node_1$channels_3_putNoCPacket_put),
		.channels_4_putNoCPacket_put(node_1$channels_4_putNoCPacket_put),
		.EN_channels_0_putNoCPacket_put(node_1$EN_channels_0_putNoCPacket_put),
		.EN_channels_0_getNoCPacket_get(node_1$EN_channels_0_getNoCPacket_get),
		.EN_channels_1_putNoCPacket_put(node_1$EN_channels_1_putNoCPacket_put),
		.EN_channels_1_getNoCPacket_get(node_1$EN_channels_1_getNoCPacket_get),
		.EN_channels_2_putNoCPacket_put(node_1$EN_channels_2_putNoCPacket_put),
		.EN_channels_2_getNoCPacket_get(node_1$EN_channels_2_getNoCPacket_get),
		.EN_channels_3_putNoCPacket_put(node_1$EN_channels_3_putNoCPacket_put),
		.EN_channels_3_getNoCPacket_get(node_1$EN_channels_3_getNoCPacket_get),
		.EN_channels_4_putNoCPacket_put(node_1$EN_channels_4_putNoCPacket_put),
		.EN_channels_4_getNoCPacket_get(node_1$EN_channels_4_getNoCPacket_get),
		.RDY_channels_0_putNoCPacket_put(),
		.channels_0_getNoCPacket_get(),
		.RDY_channels_0_getNoCPacket_get(),
		.RDY_channels_1_putNoCPacket_put(),
		.channels_1_getNoCPacket_get(),
		.RDY_channels_1_getNoCPacket_get(),
		.RDY_channels_2_putNoCPacket_put(),
		.channels_2_getNoCPacket_get(),
		.RDY_channels_2_getNoCPacket_get(),
		.RDY_channels_3_putNoCPacket_put(),
		.channels_3_getNoCPacket_get(),
		.RDY_channels_3_getNoCPacket_get(),
		.RDY_channels_4_putNoCPacket_put(),
		.channels_4_getNoCPacket_get(),
		.RDY_channels_4_getNoCPacket_get());

  // submodule node_1_1
  mkNode node_1_1(.thisRowAddr(2'd1),
		  .thisColAddr(2'd1),
		  .CLK(CLK),
		  .RST_N(RST_N),
		  .channels_0_putNoCPacket_put(node_1_1$channels_0_putNoCPacket_put),
		  .channels_1_putNoCPacket_put(node_1_1$channels_1_putNoCPacket_put),
		  .channels_2_putNoCPacket_put(node_1_1$channels_2_putNoCPacket_put),
		  .channels_3_putNoCPacket_put(node_1_1$channels_3_putNoCPacket_put),
		  .channels_4_putNoCPacket_put(node_1_1$channels_4_putNoCPacket_put),
		  .EN_channels_0_putNoCPacket_put(node_1_1$EN_channels_0_putNoCPacket_put),
		  .EN_channels_0_getNoCPacket_get(node_1_1$EN_channels_0_getNoCPacket_get),
		  .EN_channels_1_putNoCPacket_put(node_1_1$EN_channels_1_putNoCPacket_put),
		  .EN_channels_1_getNoCPacket_get(node_1_1$EN_channels_1_getNoCPacket_get),
		  .EN_channels_2_putNoCPacket_put(node_1_1$EN_channels_2_putNoCPacket_put),
		  .EN_channels_2_getNoCPacket_get(node_1_1$EN_channels_2_getNoCPacket_get),
		  .EN_channels_3_putNoCPacket_put(node_1_1$EN_channels_3_putNoCPacket_put),
		  .EN_channels_3_getNoCPacket_get(node_1_1$EN_channels_3_getNoCPacket_get),
		  .EN_channels_4_putNoCPacket_put(node_1_1$EN_channels_4_putNoCPacket_put),
		  .EN_channels_4_getNoCPacket_get(node_1_1$EN_channels_4_getNoCPacket_get),
		  .RDY_channels_0_putNoCPacket_put(),
		  .channels_0_getNoCPacket_get(),
		  .RDY_channels_0_getNoCPacket_get(),
		  .RDY_channels_1_putNoCPacket_put(),
		  .channels_1_getNoCPacket_get(),
		  .RDY_channels_1_getNoCPacket_get(),
		  .RDY_channels_2_putNoCPacket_put(),
		  .channels_2_getNoCPacket_get(),
		  .RDY_channels_2_getNoCPacket_get(),
		  .RDY_channels_3_putNoCPacket_put(),
		  .channels_3_getNoCPacket_get(),
		  .RDY_channels_3_getNoCPacket_get(),
		  .RDY_channels_4_putNoCPacket_put(),
		  .channels_4_getNoCPacket_get(),
		  .RDY_channels_4_getNoCPacket_get());

  // submodule node_1_2
  mkNode node_1_2(.thisRowAddr(2'd1),
		  .thisColAddr(2'd2),
		  .CLK(CLK),
		  .RST_N(RST_N),
		  .channels_0_putNoCPacket_put(node_1_2$channels_0_putNoCPacket_put),
		  .channels_1_putNoCPacket_put(node_1_2$channels_1_putNoCPacket_put),
		  .channels_2_putNoCPacket_put(node_1_2$channels_2_putNoCPacket_put),
		  .channels_3_putNoCPacket_put(node_1_2$channels_3_putNoCPacket_put),
		  .channels_4_putNoCPacket_put(node_1_2$channels_4_putNoCPacket_put),
		  .EN_channels_0_putNoCPacket_put(node_1_2$EN_channels_0_putNoCPacket_put),
		  .EN_channels_0_getNoCPacket_get(node_1_2$EN_channels_0_getNoCPacket_get),
		  .EN_channels_1_putNoCPacket_put(node_1_2$EN_channels_1_putNoCPacket_put),
		  .EN_channels_1_getNoCPacket_get(node_1_2$EN_channels_1_getNoCPacket_get),
		  .EN_channels_2_putNoCPacket_put(node_1_2$EN_channels_2_putNoCPacket_put),
		  .EN_channels_2_getNoCPacket_get(node_1_2$EN_channels_2_getNoCPacket_get),
		  .EN_channels_3_putNoCPacket_put(node_1_2$EN_channels_3_putNoCPacket_put),
		  .EN_channels_3_getNoCPacket_get(node_1_2$EN_channels_3_getNoCPacket_get),
		  .EN_channels_4_putNoCPacket_put(node_1_2$EN_channels_4_putNoCPacket_put),
		  .EN_channels_4_getNoCPacket_get(node_1_2$EN_channels_4_getNoCPacket_get),
		  .RDY_channels_0_putNoCPacket_put(node_1_2$RDY_channels_0_putNoCPacket_put),
		  .channels_0_getNoCPacket_get(node_1_2$channels_0_getNoCPacket_get),
		  .RDY_channels_0_getNoCPacket_get(node_1_2$RDY_channels_0_getNoCPacket_get),
		  .RDY_channels_1_putNoCPacket_put(),
		  .channels_1_getNoCPacket_get(),
		  .RDY_channels_1_getNoCPacket_get(),
		  .RDY_channels_2_putNoCPacket_put(node_1_2$RDY_channels_2_putNoCPacket_put),
		  .channels_2_getNoCPacket_get(),
		  .RDY_channels_2_getNoCPacket_get(node_1_2$RDY_channels_2_getNoCPacket_get),
		  .RDY_channels_3_putNoCPacket_put(node_1_2$RDY_channels_3_putNoCPacket_put),
		  .channels_3_getNoCPacket_get(node_1_2$channels_3_getNoCPacket_get),
		  .RDY_channels_3_getNoCPacket_get(node_1_2$RDY_channels_3_getNoCPacket_get),
		  .RDY_channels_4_putNoCPacket_put(node_1_2$RDY_channels_4_putNoCPacket_put),
		  .channels_4_getNoCPacket_get(node_1_2$channels_4_getNoCPacket_get),
		  .RDY_channels_4_getNoCPacket_get(node_1_2$RDY_channels_4_getNoCPacket_get));

  // submodule node_2
  mkNode node_2(.thisRowAddr(2'd2),
		.thisColAddr(2'd0),
		.CLK(CLK),
		.RST_N(RST_N),
		.channels_0_putNoCPacket_put(node_2$channels_0_putNoCPacket_put),
		.channels_1_putNoCPacket_put(node_2$channels_1_putNoCPacket_put),
		.channels_2_putNoCPacket_put(node_2$channels_2_putNoCPacket_put),
		.channels_3_putNoCPacket_put(node_2$channels_3_putNoCPacket_put),
		.channels_4_putNoCPacket_put(node_2$channels_4_putNoCPacket_put),
		.EN_channels_0_putNoCPacket_put(node_2$EN_channels_0_putNoCPacket_put),
		.EN_channels_0_getNoCPacket_get(node_2$EN_channels_0_getNoCPacket_get),
		.EN_channels_1_putNoCPacket_put(node_2$EN_channels_1_putNoCPacket_put),
		.EN_channels_1_getNoCPacket_get(node_2$EN_channels_1_getNoCPacket_get),
		.EN_channels_2_putNoCPacket_put(node_2$EN_channels_2_putNoCPacket_put),
		.EN_channels_2_getNoCPacket_get(node_2$EN_channels_2_getNoCPacket_get),
		.EN_channels_3_putNoCPacket_put(node_2$EN_channels_3_putNoCPacket_put),
		.EN_channels_3_getNoCPacket_get(node_2$EN_channels_3_getNoCPacket_get),
		.EN_channels_4_putNoCPacket_put(node_2$EN_channels_4_putNoCPacket_put),
		.EN_channels_4_getNoCPacket_get(node_2$EN_channels_4_getNoCPacket_get),
		.RDY_channels_0_putNoCPacket_put(),
		.channels_0_getNoCPacket_get(),
		.RDY_channels_0_getNoCPacket_get(),
		.RDY_channels_1_putNoCPacket_put(),
		.channels_1_getNoCPacket_get(),
		.RDY_channels_1_getNoCPacket_get(),
		.RDY_channels_2_putNoCPacket_put(),
		.channels_2_getNoCPacket_get(),
		.RDY_channels_2_getNoCPacket_get(),
		.RDY_channels_3_putNoCPacket_put(),
		.channels_3_getNoCPacket_get(),
		.RDY_channels_3_getNoCPacket_get(),
		.RDY_channels_4_putNoCPacket_put(),
		.channels_4_getNoCPacket_get(),
		.RDY_channels_4_getNoCPacket_get());

  // submodule node_2_1
  mkNode node_2_1(.thisRowAddr(2'd2),
		  .thisColAddr(2'd1),
		  .CLK(CLK),
		  .RST_N(RST_N),
		  .channels_0_putNoCPacket_put(node_2_1$channels_0_putNoCPacket_put),
		  .channels_1_putNoCPacket_put(node_2_1$channels_1_putNoCPacket_put),
		  .channels_2_putNoCPacket_put(node_2_1$channels_2_putNoCPacket_put),
		  .channels_3_putNoCPacket_put(node_2_1$channels_3_putNoCPacket_put),
		  .channels_4_putNoCPacket_put(node_2_1$channels_4_putNoCPacket_put),
		  .EN_channels_0_putNoCPacket_put(node_2_1$EN_channels_0_putNoCPacket_put),
		  .EN_channels_0_getNoCPacket_get(node_2_1$EN_channels_0_getNoCPacket_get),
		  .EN_channels_1_putNoCPacket_put(node_2_1$EN_channels_1_putNoCPacket_put),
		  .EN_channels_1_getNoCPacket_get(node_2_1$EN_channels_1_getNoCPacket_get),
		  .EN_channels_2_putNoCPacket_put(node_2_1$EN_channels_2_putNoCPacket_put),
		  .EN_channels_2_getNoCPacket_get(node_2_1$EN_channels_2_getNoCPacket_get),
		  .EN_channels_3_putNoCPacket_put(node_2_1$EN_channels_3_putNoCPacket_put),
		  .EN_channels_3_getNoCPacket_get(node_2_1$EN_channels_3_getNoCPacket_get),
		  .EN_channels_4_putNoCPacket_put(node_2_1$EN_channels_4_putNoCPacket_put),
		  .EN_channels_4_getNoCPacket_get(node_2_1$EN_channels_4_getNoCPacket_get),
		  .RDY_channels_0_putNoCPacket_put(),
		  .channels_0_getNoCPacket_get(),
		  .RDY_channels_0_getNoCPacket_get(),
		  .RDY_channels_1_putNoCPacket_put(),
		  .channels_1_getNoCPacket_get(),
		  .RDY_channels_1_getNoCPacket_get(),
		  .RDY_channels_2_putNoCPacket_put(),
		  .channels_2_getNoCPacket_get(),
		  .RDY_channels_2_getNoCPacket_get(),
		  .RDY_channels_3_putNoCPacket_put(),
		  .channels_3_getNoCPacket_get(),
		  .RDY_channels_3_getNoCPacket_get(),
		  .RDY_channels_4_putNoCPacket_put(),
		  .channels_4_getNoCPacket_get(),
		  .RDY_channels_4_getNoCPacket_get());

  // submodule node_2_2
  mkNode node_2_2(.thisRowAddr(2'd2),
		  .thisColAddr(2'd2),
		  .CLK(CLK),
		  .RST_N(RST_N),
		  .channels_0_putNoCPacket_put(node_2_2$channels_0_putNoCPacket_put),
		  .channels_1_putNoCPacket_put(node_2_2$channels_1_putNoCPacket_put),
		  .channels_2_putNoCPacket_put(node_2_2$channels_2_putNoCPacket_put),
		  .channels_3_putNoCPacket_put(node_2_2$channels_3_putNoCPacket_put),
		  .channels_4_putNoCPacket_put(node_2_2$channels_4_putNoCPacket_put),
		  .EN_channels_0_putNoCPacket_put(node_2_2$EN_channels_0_putNoCPacket_put),
		  .EN_channels_0_getNoCPacket_get(node_2_2$EN_channels_0_getNoCPacket_get),
		  .EN_channels_1_putNoCPacket_put(node_2_2$EN_channels_1_putNoCPacket_put),
		  .EN_channels_1_getNoCPacket_get(node_2_2$EN_channels_1_getNoCPacket_get),
		  .EN_channels_2_putNoCPacket_put(node_2_2$EN_channels_2_putNoCPacket_put),
		  .EN_channels_2_getNoCPacket_get(node_2_2$EN_channels_2_getNoCPacket_get),
		  .EN_channels_3_putNoCPacket_put(node_2_2$EN_channels_3_putNoCPacket_put),
		  .EN_channels_3_getNoCPacket_get(node_2_2$EN_channels_3_getNoCPacket_get),
		  .EN_channels_4_putNoCPacket_put(node_2_2$EN_channels_4_putNoCPacket_put),
		  .EN_channels_4_getNoCPacket_get(node_2_2$EN_channels_4_getNoCPacket_get),
		  .RDY_channels_0_putNoCPacket_put(node_2_2$RDY_channels_0_putNoCPacket_put),
		  .channels_0_getNoCPacket_get(node_2_2$channels_0_getNoCPacket_get),
		  .RDY_channels_0_getNoCPacket_get(node_2_2$RDY_channels_0_getNoCPacket_get),
		  .RDY_channels_1_putNoCPacket_put(),
		  .channels_1_getNoCPacket_get(),
		  .RDY_channels_1_getNoCPacket_get(),
		  .RDY_channels_2_putNoCPacket_put(node_2_2$RDY_channels_2_putNoCPacket_put),
		  .channels_2_getNoCPacket_get(),
		  .RDY_channels_2_getNoCPacket_get(node_2_2$RDY_channels_2_getNoCPacket_get),
		  .RDY_channels_3_putNoCPacket_put(),
		  .channels_3_getNoCPacket_get(),
		  .RDY_channels_3_getNoCPacket_get(),
		  .RDY_channels_4_putNoCPacket_put(node_2_2$RDY_channels_4_putNoCPacket_put),
		  .channels_4_getNoCPacket_get(node_2_2$channels_4_getNoCPacket_get),
		  .RDY_channels_4_getNoCPacket_get(node_2_2$RDY_channels_4_getNoCPacket_get));

  // rule RL_mkConnectionGetPut
  assign CAN_FIRE_RL_mkConnectionGetPut =
	     node_0_2$RDY_channels_3_getNoCPacket_get &&
	     node_1_2$RDY_channels_4_putNoCPacket_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut = CAN_FIRE_RL_mkConnectionGetPut ;

  // rule RL_mkConnectionGetPut_1
  assign CAN_FIRE_RL_mkConnectionGetPut_1 =
	     node_0_2$RDY_channels_3_putNoCPacket_put &&
	     node_1_2$RDY_channels_4_getNoCPacket_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_1 =
	     CAN_FIRE_RL_mkConnectionGetPut_1 ;

  // rule RL_mkConnectionGetPut_2
  assign CAN_FIRE_RL_mkConnectionGetPut_2 =
	     node_1_2$RDY_channels_3_getNoCPacket_get &&
	     node_2_2$RDY_channels_4_putNoCPacket_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut_2 =
	     CAN_FIRE_RL_mkConnectionGetPut_2 ;

  // rule RL_mkConnectionGetPut_3
  assign CAN_FIRE_RL_mkConnectionGetPut_3 =
	     node_1_2$RDY_channels_3_putNoCPacket_put &&
	     node_2_2$RDY_channels_4_getNoCPacket_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_3 =
	     CAN_FIRE_RL_mkConnectionGetPut_3 ;

  // rule RL_mkConnectionGetPut_12
  assign CAN_FIRE_RL_mkConnectionGetPut_12 =
	     node_0_2$RDY_channels_2_getNoCPacket_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_12 =
	     node_0_2$RDY_channels_2_getNoCPacket_get ;

  // rule RL_mkConnectionGetPut_13
  assign CAN_FIRE_RL_mkConnectionGetPut_13 =
	     node_0_2$RDY_channels_2_putNoCPacket_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut_13 =
	     node_0_2$RDY_channels_2_putNoCPacket_put ;

  // rule RL_mkConnectionGetPut_14
  assign CAN_FIRE_RL_mkConnectionGetPut_14 =
	     node_1_2$RDY_channels_2_getNoCPacket_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_14 =
	     node_1_2$RDY_channels_2_getNoCPacket_get ;

  // rule RL_mkConnectionGetPut_15
  assign CAN_FIRE_RL_mkConnectionGetPut_15 =
	     node_1_2$RDY_channels_2_putNoCPacket_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut_15 =
	     node_1_2$RDY_channels_2_putNoCPacket_put ;

  // rule RL_mkConnectionGetPut_16
  assign CAN_FIRE_RL_mkConnectionGetPut_16 =
	     node_2_2$RDY_channels_2_getNoCPacket_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_16 =
	     node_2_2$RDY_channels_2_getNoCPacket_get ;

  // rule RL_mkConnectionGetPut_17
  assign CAN_FIRE_RL_mkConnectionGetPut_17 =
	     node_2_2$RDY_channels_2_putNoCPacket_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut_17 =
	     node_2_2$RDY_channels_2_putNoCPacket_put ;

  // rule RL_mkConnectionGetPut_24
  assign CAN_FIRE_RL_mkConnectionGetPut_24 =
	     cores_0$RDY_getNoCPacket_get &&
	     node_0_2$RDY_channels_0_putNoCPacket_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut_24 =
	     CAN_FIRE_RL_mkConnectionGetPut_24 ;

  // rule RL_mkConnectionGetPut_25
  assign CAN_FIRE_RL_mkConnectionGetPut_25 =
	     cores_0$RDY_putNoCPacket_put &&
	     node_0_2$RDY_channels_0_getNoCPacket_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_25 =
	     CAN_FIRE_RL_mkConnectionGetPut_25 ;

  // rule RL_mkConnectionGetPut_26
  assign CAN_FIRE_RL_mkConnectionGetPut_26 =
	     cores_1$RDY_getNoCPacket_get &&
	     node_1_2$RDY_channels_0_putNoCPacket_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut_26 =
	     CAN_FIRE_RL_mkConnectionGetPut_26 ;

  // rule RL_mkConnectionGetPut_27
  assign CAN_FIRE_RL_mkConnectionGetPut_27 =
	     cores_1$RDY_putNoCPacket_put &&
	     node_1_2$RDY_channels_0_getNoCPacket_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_27 =
	     CAN_FIRE_RL_mkConnectionGetPut_27 ;

  // rule RL_mkConnectionGetPut_28
  assign CAN_FIRE_RL_mkConnectionGetPut_28 =
	     cores_2$RDY_getNoCPacket_get &&
	     node_2_2$RDY_channels_0_putNoCPacket_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut_28 =
	     CAN_FIRE_RL_mkConnectionGetPut_28 ;

  // rule RL_mkConnectionGetPut_29
  assign CAN_FIRE_RL_mkConnectionGetPut_29 =
	     cores_2$RDY_putNoCPacket_put &&
	     node_2_2$RDY_channels_0_getNoCPacket_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_29 =
	     CAN_FIRE_RL_mkConnectionGetPut_29 ;

  // rule RL_mkConnectionGetPut_30
  assign CAN_FIRE_RL_mkConnectionGetPut_30 = cores_3$RDY_getNoCPacket_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_30 = cores_3$RDY_getNoCPacket_get ;

  // rule RL_mkConnectionGetPut_31
  assign CAN_FIRE_RL_mkConnectionGetPut_31 = cores_3$RDY_putNoCPacket_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut_31 = cores_3$RDY_putNoCPacket_put ;

  // rule RL_mkConnectionGetPut_32
  assign CAN_FIRE_RL_mkConnectionGetPut_32 =
	     cores_4$RDY_getNoCPacket_get &&
	     node_0_2$RDY_channels_0_putNoCPacket_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut_32 =
	     CAN_FIRE_RL_mkConnectionGetPut_32 &&
	     !WILL_FIRE_RL_mkConnectionGetPut_24 ;

  // rule RL_mkConnectionGetPut_33
  assign CAN_FIRE_RL_mkConnectionGetPut_33 =
	     cores_4$RDY_putNoCPacket_put &&
	     node_0_2$RDY_channels_0_getNoCPacket_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_33 =
	     CAN_FIRE_RL_mkConnectionGetPut_33 &&
	     !WILL_FIRE_RL_mkConnectionGetPut_25 ;

  // rule RL_mkConnectionGetPut_34
  assign CAN_FIRE_RL_mkConnectionGetPut_34 =
	     cores_5$RDY_getNoCPacket_get &&
	     node_1_2$RDY_channels_0_putNoCPacket_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut_34 =
	     CAN_FIRE_RL_mkConnectionGetPut_34 &&
	     !WILL_FIRE_RL_mkConnectionGetPut_26 ;

  // rule RL_mkConnectionGetPut_35
  assign CAN_FIRE_RL_mkConnectionGetPut_35 =
	     cores_5$RDY_putNoCPacket_put &&
	     node_1_2$RDY_channels_0_getNoCPacket_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_35 =
	     CAN_FIRE_RL_mkConnectionGetPut_35 &&
	     !WILL_FIRE_RL_mkConnectionGetPut_27 ;

  // rule RL_mkConnectionGetPut_36
  assign CAN_FIRE_RL_mkConnectionGetPut_36 =
	     cores_6$RDY_getNoCPacket_get &&
	     node_2_2$RDY_channels_0_putNoCPacket_put ;
  assign WILL_FIRE_RL_mkConnectionGetPut_36 =
	     CAN_FIRE_RL_mkConnectionGetPut_36 &&
	     !WILL_FIRE_RL_mkConnectionGetPut_28 ;

  // rule RL_mkConnectionGetPut_37
  assign CAN_FIRE_RL_mkConnectionGetPut_37 =
	     cores_6$RDY_putNoCPacket_put &&
	     node_2_2$RDY_channels_0_getNoCPacket_get ;
  assign WILL_FIRE_RL_mkConnectionGetPut_37 =
	     CAN_FIRE_RL_mkConnectionGetPut_37 &&
	     !WILL_FIRE_RL_mkConnectionGetPut_29 ;

  // submodule cores_0
  assign cores_0$putNoCPacket_put = node_0_2$channels_0_getNoCPacket_get ;
  assign cores_0$EN_putNoCPacket_put = CAN_FIRE_RL_mkConnectionGetPut_25 ;
  assign cores_0$EN_getNoCPacket_get = CAN_FIRE_RL_mkConnectionGetPut_24 ;
  assign cores_0$EN_dumpMem_startDump = EN_dumpDataMem_0_startDump ;

  // submodule cores_1
  assign cores_1$putNoCPacket_put = node_1_2$channels_0_getNoCPacket_get ;
  assign cores_1$EN_putNoCPacket_put = CAN_FIRE_RL_mkConnectionGetPut_27 ;
  assign cores_1$EN_getNoCPacket_get = CAN_FIRE_RL_mkConnectionGetPut_26 ;
  assign cores_1$EN_dumpMem_startDump = EN_dumpDataMem_1_startDump ;

  // submodule cores_2
  assign cores_2$putNoCPacket_put = node_2_2$channels_0_getNoCPacket_get ;
  assign cores_2$EN_putNoCPacket_put = CAN_FIRE_RL_mkConnectionGetPut_29 ;
  assign cores_2$EN_getNoCPacket_get = CAN_FIRE_RL_mkConnectionGetPut_28 ;
  assign cores_2$EN_dumpMem_startDump = EN_dumpDataMem_2_startDump ;

  // submodule cores_3
  assign cores_3$putNoCPacket_put =
	     48'hAAAAAAAAAAAA /* unspecified value */  ;
  assign cores_3$EN_putNoCPacket_put = cores_3$RDY_putNoCPacket_put ;
  assign cores_3$EN_getNoCPacket_get = cores_3$RDY_getNoCPacket_get ;
  assign cores_3$EN_dumpMem_startDump = EN_dumpDataMem_3_startDump ;

  // submodule cores_4
  assign cores_4$putNoCPacket_put = node_0_2$channels_0_getNoCPacket_get ;
  assign cores_4$EN_putNoCPacket_put = WILL_FIRE_RL_mkConnectionGetPut_33 ;
  assign cores_4$EN_getNoCPacket_get = WILL_FIRE_RL_mkConnectionGetPut_32 ;
  assign cores_4$EN_dumpMem_startDump = EN_dumpDataMem_4_startDump ;

  // submodule cores_5
  assign cores_5$putNoCPacket_put = node_1_2$channels_0_getNoCPacket_get ;
  assign cores_5$EN_putNoCPacket_put = WILL_FIRE_RL_mkConnectionGetPut_35 ;
  assign cores_5$EN_getNoCPacket_get = WILL_FIRE_RL_mkConnectionGetPut_34 ;
  assign cores_5$EN_dumpMem_startDump = EN_dumpDataMem_5_startDump ;

  // submodule cores_6
  assign cores_6$putNoCPacket_put = node_2_2$channels_0_getNoCPacket_get ;
  assign cores_6$EN_putNoCPacket_put = WILL_FIRE_RL_mkConnectionGetPut_37 ;
  assign cores_6$EN_getNoCPacket_get = WILL_FIRE_RL_mkConnectionGetPut_36 ;
  assign cores_6$EN_dumpMem_startDump = EN_dumpDataMem_6_startDump ;

  // submodule node_0
  assign node_0$channels_0_putNoCPacket_put = 48'h0 ;
  assign node_0$channels_1_putNoCPacket_put = 48'h0 ;
  assign node_0$channels_2_putNoCPacket_put = 48'h0 ;
  assign node_0$channels_3_putNoCPacket_put = 48'h0 ;
  assign node_0$channels_4_putNoCPacket_put = 48'h0 ;
  assign node_0$EN_channels_0_putNoCPacket_put = 1'b0 ;
  assign node_0$EN_channels_0_getNoCPacket_get = 1'b0 ;
  assign node_0$EN_channels_1_putNoCPacket_put = 1'b0 ;
  assign node_0$EN_channels_1_getNoCPacket_get = 1'b0 ;
  assign node_0$EN_channels_2_putNoCPacket_put = 1'b0 ;
  assign node_0$EN_channels_2_getNoCPacket_get = 1'b0 ;
  assign node_0$EN_channels_3_putNoCPacket_put = 1'b0 ;
  assign node_0$EN_channels_3_getNoCPacket_get = 1'b0 ;
  assign node_0$EN_channels_4_putNoCPacket_put = 1'b0 ;
  assign node_0$EN_channels_4_getNoCPacket_get = 1'b0 ;

  // submodule node_0_1
  assign node_0_1$channels_0_putNoCPacket_put = 48'h0 ;
  assign node_0_1$channels_1_putNoCPacket_put = 48'h0 ;
  assign node_0_1$channels_2_putNoCPacket_put = 48'h0 ;
  assign node_0_1$channels_3_putNoCPacket_put = 48'h0 ;
  assign node_0_1$channels_4_putNoCPacket_put = 48'h0 ;
  assign node_0_1$EN_channels_0_putNoCPacket_put = 1'b0 ;
  assign node_0_1$EN_channels_0_getNoCPacket_get = 1'b0 ;
  assign node_0_1$EN_channels_1_putNoCPacket_put = 1'b0 ;
  assign node_0_1$EN_channels_1_getNoCPacket_get = 1'b0 ;
  assign node_0_1$EN_channels_2_putNoCPacket_put = 1'b0 ;
  assign node_0_1$EN_channels_2_getNoCPacket_get = 1'b0 ;
  assign node_0_1$EN_channels_3_putNoCPacket_put = 1'b0 ;
  assign node_0_1$EN_channels_3_getNoCPacket_get = 1'b0 ;
  assign node_0_1$EN_channels_4_putNoCPacket_put = 1'b0 ;
  assign node_0_1$EN_channels_4_getNoCPacket_get = 1'b0 ;

  // submodule node_0_2
  assign node_0_2$channels_0_putNoCPacket_put =
	     WILL_FIRE_RL_mkConnectionGetPut_24 ?
	       cores_0$getNoCPacket_get :
	       cores_4$getNoCPacket_get ;
  assign node_0_2$channels_1_putNoCPacket_put = 48'h0 ;
  assign node_0_2$channels_2_putNoCPacket_put =
	     48'hAAAAAAAAAAAA /* unspecified value */  ;
  assign node_0_2$channels_3_putNoCPacket_put =
	     node_1_2$channels_4_getNoCPacket_get ;
  assign node_0_2$channels_4_putNoCPacket_put = 48'h0 ;
  assign node_0_2$EN_channels_0_putNoCPacket_put =
	     WILL_FIRE_RL_mkConnectionGetPut_24 ||
	     WILL_FIRE_RL_mkConnectionGetPut_32 ;
  assign node_0_2$EN_channels_0_getNoCPacket_get =
	     WILL_FIRE_RL_mkConnectionGetPut_33 ||
	     WILL_FIRE_RL_mkConnectionGetPut_25 ;
  assign node_0_2$EN_channels_1_putNoCPacket_put = 1'b0 ;
  assign node_0_2$EN_channels_1_getNoCPacket_get = 1'b0 ;
  assign node_0_2$EN_channels_2_putNoCPacket_put =
	     node_0_2$RDY_channels_2_putNoCPacket_put ;
  assign node_0_2$EN_channels_2_getNoCPacket_get =
	     node_0_2$RDY_channels_2_getNoCPacket_get ;
  assign node_0_2$EN_channels_3_putNoCPacket_put =
	     CAN_FIRE_RL_mkConnectionGetPut_1 ;
  assign node_0_2$EN_channels_3_getNoCPacket_get =
	     CAN_FIRE_RL_mkConnectionGetPut ;
  assign node_0_2$EN_channels_4_putNoCPacket_put = 1'b0 ;
  assign node_0_2$EN_channels_4_getNoCPacket_get = 1'b0 ;

  // submodule node_1
  assign node_1$channels_0_putNoCPacket_put = 48'h0 ;
  assign node_1$channels_1_putNoCPacket_put = 48'h0 ;
  assign node_1$channels_2_putNoCPacket_put = 48'h0 ;
  assign node_1$channels_3_putNoCPacket_put = 48'h0 ;
  assign node_1$channels_4_putNoCPacket_put = 48'h0 ;
  assign node_1$EN_channels_0_putNoCPacket_put = 1'b0 ;
  assign node_1$EN_channels_0_getNoCPacket_get = 1'b0 ;
  assign node_1$EN_channels_1_putNoCPacket_put = 1'b0 ;
  assign node_1$EN_channels_1_getNoCPacket_get = 1'b0 ;
  assign node_1$EN_channels_2_putNoCPacket_put = 1'b0 ;
  assign node_1$EN_channels_2_getNoCPacket_get = 1'b0 ;
  assign node_1$EN_channels_3_putNoCPacket_put = 1'b0 ;
  assign node_1$EN_channels_3_getNoCPacket_get = 1'b0 ;
  assign node_1$EN_channels_4_putNoCPacket_put = 1'b0 ;
  assign node_1$EN_channels_4_getNoCPacket_get = 1'b0 ;

  // submodule node_1_1
  assign node_1_1$channels_0_putNoCPacket_put = 48'h0 ;
  assign node_1_1$channels_1_putNoCPacket_put = 48'h0 ;
  assign node_1_1$channels_2_putNoCPacket_put = 48'h0 ;
  assign node_1_1$channels_3_putNoCPacket_put = 48'h0 ;
  assign node_1_1$channels_4_putNoCPacket_put = 48'h0 ;
  assign node_1_1$EN_channels_0_putNoCPacket_put = 1'b0 ;
  assign node_1_1$EN_channels_0_getNoCPacket_get = 1'b0 ;
  assign node_1_1$EN_channels_1_putNoCPacket_put = 1'b0 ;
  assign node_1_1$EN_channels_1_getNoCPacket_get = 1'b0 ;
  assign node_1_1$EN_channels_2_putNoCPacket_put = 1'b0 ;
  assign node_1_1$EN_channels_2_getNoCPacket_get = 1'b0 ;
  assign node_1_1$EN_channels_3_putNoCPacket_put = 1'b0 ;
  assign node_1_1$EN_channels_3_getNoCPacket_get = 1'b0 ;
  assign node_1_1$EN_channels_4_putNoCPacket_put = 1'b0 ;
  assign node_1_1$EN_channels_4_getNoCPacket_get = 1'b0 ;

  // submodule node_1_2
  assign node_1_2$channels_0_putNoCPacket_put =
	     WILL_FIRE_RL_mkConnectionGetPut_26 ?
	       cores_1$getNoCPacket_get :
	       cores_5$getNoCPacket_get ;
  assign node_1_2$channels_1_putNoCPacket_put = 48'h0 ;
  assign node_1_2$channels_2_putNoCPacket_put =
	     48'hAAAAAAAAAAAA /* unspecified value */  ;
  assign node_1_2$channels_3_putNoCPacket_put =
	     node_2_2$channels_4_getNoCPacket_get ;
  assign node_1_2$channels_4_putNoCPacket_put =
	     node_0_2$channels_3_getNoCPacket_get ;
  assign node_1_2$EN_channels_0_putNoCPacket_put =
	     WILL_FIRE_RL_mkConnectionGetPut_26 ||
	     WILL_FIRE_RL_mkConnectionGetPut_34 ;
  assign node_1_2$EN_channels_0_getNoCPacket_get =
	     WILL_FIRE_RL_mkConnectionGetPut_35 ||
	     WILL_FIRE_RL_mkConnectionGetPut_27 ;
  assign node_1_2$EN_channels_1_putNoCPacket_put = 1'b0 ;
  assign node_1_2$EN_channels_1_getNoCPacket_get = 1'b0 ;
  assign node_1_2$EN_channels_2_putNoCPacket_put =
	     node_1_2$RDY_channels_2_putNoCPacket_put ;
  assign node_1_2$EN_channels_2_getNoCPacket_get =
	     node_1_2$RDY_channels_2_getNoCPacket_get ;
  assign node_1_2$EN_channels_3_putNoCPacket_put =
	     CAN_FIRE_RL_mkConnectionGetPut_3 ;
  assign node_1_2$EN_channels_3_getNoCPacket_get =
	     CAN_FIRE_RL_mkConnectionGetPut_2 ;
  assign node_1_2$EN_channels_4_putNoCPacket_put =
	     CAN_FIRE_RL_mkConnectionGetPut ;
  assign node_1_2$EN_channels_4_getNoCPacket_get =
	     CAN_FIRE_RL_mkConnectionGetPut_1 ;

  // submodule node_2
  assign node_2$channels_0_putNoCPacket_put = 48'h0 ;
  assign node_2$channels_1_putNoCPacket_put = 48'h0 ;
  assign node_2$channels_2_putNoCPacket_put = 48'h0 ;
  assign node_2$channels_3_putNoCPacket_put = 48'h0 ;
  assign node_2$channels_4_putNoCPacket_put = 48'h0 ;
  assign node_2$EN_channels_0_putNoCPacket_put = 1'b0 ;
  assign node_2$EN_channels_0_getNoCPacket_get = 1'b0 ;
  assign node_2$EN_channels_1_putNoCPacket_put = 1'b0 ;
  assign node_2$EN_channels_1_getNoCPacket_get = 1'b0 ;
  assign node_2$EN_channels_2_putNoCPacket_put = 1'b0 ;
  assign node_2$EN_channels_2_getNoCPacket_get = 1'b0 ;
  assign node_2$EN_channels_3_putNoCPacket_put = 1'b0 ;
  assign node_2$EN_channels_3_getNoCPacket_get = 1'b0 ;
  assign node_2$EN_channels_4_putNoCPacket_put = 1'b0 ;
  assign node_2$EN_channels_4_getNoCPacket_get = 1'b0 ;

  // submodule node_2_1
  assign node_2_1$channels_0_putNoCPacket_put = 48'h0 ;
  assign node_2_1$channels_1_putNoCPacket_put = 48'h0 ;
  assign node_2_1$channels_2_putNoCPacket_put = 48'h0 ;
  assign node_2_1$channels_3_putNoCPacket_put = 48'h0 ;
  assign node_2_1$channels_4_putNoCPacket_put = 48'h0 ;
  assign node_2_1$EN_channels_0_putNoCPacket_put = 1'b0 ;
  assign node_2_1$EN_channels_0_getNoCPacket_get = 1'b0 ;
  assign node_2_1$EN_channels_1_putNoCPacket_put = 1'b0 ;
  assign node_2_1$EN_channels_1_getNoCPacket_get = 1'b0 ;
  assign node_2_1$EN_channels_2_putNoCPacket_put = 1'b0 ;
  assign node_2_1$EN_channels_2_getNoCPacket_get = 1'b0 ;
  assign node_2_1$EN_channels_3_putNoCPacket_put = 1'b0 ;
  assign node_2_1$EN_channels_3_getNoCPacket_get = 1'b0 ;
  assign node_2_1$EN_channels_4_putNoCPacket_put = 1'b0 ;
  assign node_2_1$EN_channels_4_getNoCPacket_get = 1'b0 ;

  // submodule node_2_2
  assign node_2_2$channels_0_putNoCPacket_put =
	     WILL_FIRE_RL_mkConnectionGetPut_28 ?
	       cores_2$getNoCPacket_get :
	       cores_6$getNoCPacket_get ;
  assign node_2_2$channels_1_putNoCPacket_put = 48'h0 ;
  assign node_2_2$channels_2_putNoCPacket_put =
	     48'hAAAAAAAAAAAA /* unspecified value */  ;
  assign node_2_2$channels_3_putNoCPacket_put = 48'h0 ;
  assign node_2_2$channels_4_putNoCPacket_put =
	     node_1_2$channels_3_getNoCPacket_get ;
  assign node_2_2$EN_channels_0_putNoCPacket_put =
	     WILL_FIRE_RL_mkConnectionGetPut_28 ||
	     WILL_FIRE_RL_mkConnectionGetPut_36 ;
  assign node_2_2$EN_channels_0_getNoCPacket_get =
	     WILL_FIRE_RL_mkConnectionGetPut_37 ||
	     WILL_FIRE_RL_mkConnectionGetPut_29 ;
  assign node_2_2$EN_channels_1_putNoCPacket_put = 1'b0 ;
  assign node_2_2$EN_channels_1_getNoCPacket_get = 1'b0 ;
  assign node_2_2$EN_channels_2_putNoCPacket_put =
	     node_2_2$RDY_channels_2_putNoCPacket_put ;
  assign node_2_2$EN_channels_2_getNoCPacket_get =
	     node_2_2$RDY_channels_2_getNoCPacket_get ;
  assign node_2_2$EN_channels_3_putNoCPacket_put = 1'b0 ;
  assign node_2_2$EN_channels_3_getNoCPacket_get = 1'b0 ;
  assign node_2_2$EN_channels_4_putNoCPacket_put =
	     CAN_FIRE_RL_mkConnectionGetPut_2 ;
  assign node_2_2$EN_channels_4_getNoCPacket_get =
	     CAN_FIRE_RL_mkConnectionGetPut_3 ;
endmodule  // mkSystem

