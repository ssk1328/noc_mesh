/*
 * Generated by Bluespec Compiler, version 2014.05.C (build 33930, 2014-05-28)
 * 
 * On Tue Jun  6 22:50:48 IST 2017
 * 
 */
#include "bluesim_primitives.h"
#include "mkNetConnect.h"


/* Constructor */
MOD_mkNetConnect::MOD_mkNetConnect(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_dataPacketInQ_rv(simHdl, "dataPacketInQ_rv", this, 42u, 733007751850llu, (tUInt8)0u),
    INST_dataPacketOutQ_rv(simHdl, "dataPacketOutQ_rv", this, 42u, 733007751850llu, (tUInt8)0u),
    INST_nocPacketInQ_rv(simHdl, "nocPacketInQ_rv", this, 48u, 46912496118442llu, (tUInt8)0u),
    INST_nocPacketOutQ_rv(simHdl, "nocPacketOutQ_rv", this, 48u, 46912496118442llu, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u)
{
  PORT_EN_putNoCPacket_put = false;
  PORT_EN_getNoCPacket_get = false;
  PORT_EN_putDataPacket_put = false;
  PORT_EN_getDataPacket_get = false;
  PORT_putNoCPacket_put = 0llu;
  PORT_putDataPacket_put = 0llu;
  PORT_RDY_putNoCPacket_put = false;
  PORT_getNoCPacket_get = 0llu;
  PORT_RDY_getNoCPacket_get = false;
  PORT_RDY_putDataPacket_put = false;
  PORT_getDataPacket_get = 0llu;
  PORT_RDY_getDataPacket_get = false;
  symbol_count = 30u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkNetConnect::init_symbols_0()
{
  init_symbol(&symbols[0u],
	      "CAN_FIRE_getDataPacket_get",
	      SYM_DEF,
	      &DEF_CAN_FIRE_getDataPacket_get,
	      1u);
  init_symbol(&symbols[1u], "CAN_FIRE_getNoCPacket_get", SYM_DEF, &DEF_CAN_FIRE_getNoCPacket_get, 1u);
  init_symbol(&symbols[2u],
	      "CAN_FIRE_putDataPacket_put",
	      SYM_DEF,
	      &DEF_CAN_FIRE_putDataPacket_put,
	      1u);
  init_symbol(&symbols[3u], "CAN_FIRE_putNoCPacket_put", SYM_DEF, &DEF_CAN_FIRE_putNoCPacket_put, 1u);
  init_symbol(&symbols[4u], "CAN_FIRE_RL_addLayer", SYM_DEF, &DEF_CAN_FIRE_RL_addLayer, 1u);
  init_symbol(&symbols[5u], "CAN_FIRE_RL_removeLayer", SYM_DEF, &DEF_CAN_FIRE_RL_removeLayer, 1u);
  init_symbol(&symbols[6u], "dataPacketInQ_rv", SYM_MODULE, &INST_dataPacketInQ_rv);
  init_symbol(&symbols[7u], "dataPacketOutQ_rv", SYM_MODULE, &INST_dataPacketOutQ_rv);
  init_symbol(&symbols[8u], "EN_getDataPacket_get", SYM_PORT, &PORT_EN_getDataPacket_get, 1u);
  init_symbol(&symbols[9u], "EN_getNoCPacket_get", SYM_PORT, &PORT_EN_getNoCPacket_get, 1u);
  init_symbol(&symbols[10u], "EN_putDataPacket_put", SYM_PORT, &PORT_EN_putDataPacket_put, 1u);
  init_symbol(&symbols[11u], "EN_putNoCPacket_put", SYM_PORT, &PORT_EN_putNoCPacket_put, 1u);
  init_symbol(&symbols[12u], "getDataPacket_get", SYM_PORT, &PORT_getDataPacket_get, 41u);
  init_symbol(&symbols[13u], "getNoCPacket_get", SYM_PORT, &PORT_getNoCPacket_get, 47u);
  init_symbol(&symbols[14u], "nocPacketInQ_rv", SYM_MODULE, &INST_nocPacketInQ_rv);
  init_symbol(&symbols[15u], "nocPacketOutQ_rv", SYM_MODULE, &INST_nocPacketOutQ_rv);
  init_symbol(&symbols[16u], "putDataPacket_put", SYM_PORT, &PORT_putDataPacket_put, 41u);
  init_symbol(&symbols[17u], "putNoCPacket_put", SYM_PORT, &PORT_putNoCPacket_put, 47u);
  init_symbol(&symbols[18u], "RDY_getDataPacket_get", SYM_PORT, &PORT_RDY_getDataPacket_get, 1u);
  init_symbol(&symbols[19u], "RDY_getNoCPacket_get", SYM_PORT, &PORT_RDY_getNoCPacket_get, 1u);
  init_symbol(&symbols[20u], "RDY_putDataPacket_put", SYM_PORT, &PORT_RDY_putDataPacket_put, 1u);
  init_symbol(&symbols[21u], "RDY_putNoCPacket_put", SYM_PORT, &PORT_RDY_putNoCPacket_put, 1u);
  init_symbol(&symbols[22u], "RL_addLayer", SYM_RULE);
  init_symbol(&symbols[23u], "RL_removeLayer", SYM_RULE);
  init_symbol(&symbols[24u],
	      "WILL_FIRE_getDataPacket_get",
	      SYM_DEF,
	      &DEF_WILL_FIRE_getDataPacket_get,
	      1u);
  init_symbol(&symbols[25u],
	      "WILL_FIRE_getNoCPacket_get",
	      SYM_DEF,
	      &DEF_WILL_FIRE_getNoCPacket_get,
	      1u);
  init_symbol(&symbols[26u],
	      "WILL_FIRE_putDataPacket_put",
	      SYM_DEF,
	      &DEF_WILL_FIRE_putDataPacket_put,
	      1u);
  init_symbol(&symbols[27u],
	      "WILL_FIRE_putNoCPacket_put",
	      SYM_DEF,
	      &DEF_WILL_FIRE_putNoCPacket_put,
	      1u);
  init_symbol(&symbols[28u], "WILL_FIRE_RL_addLayer", SYM_DEF, &DEF_WILL_FIRE_RL_addLayer, 1u);
  init_symbol(&symbols[29u], "WILL_FIRE_RL_removeLayer", SYM_DEF, &DEF_WILL_FIRE_RL_removeLayer, 1u);
}


/* Rule actions */

void MOD_mkNetConnect::RL_addLayer()
{
  tUInt64 DEF__1_CONCAT_IF_dataPacketInQ_rv_port1__read_BITS__ETC___d54;
  tUInt8 DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d30;
  tUInt8 DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d25;
  tUInt8 DEF__theResult____h1142;
  tUInt8 DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d36;
  tUInt8 DEF__theResult_____7__h1143;
  tUInt8 DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d41;
  tUInt8 DEF__theResult_____6__h1144;
  tUInt8 DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d46;
  tUInt8 DEF__theResult_____5__h1145;
  tUInt8 DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d51;
  tUInt8 DEF_v_arcid__h1138;
  tUInt8 DEF_destProcID__h1140;
  tUInt8 DEF_srcProcId__h1139;
  DEF_dataPacketInQ_rv_port1__read____d1 = INST_dataPacketInQ_rv.METH_port1__read();
  DEF_srcProcId__h1139 = (tUInt8)((tUInt8)15u & (DEF_dataPacketInQ_rv_port1__read____d1 >> 37u));
  DEF_destProcID__h1140 = (tUInt8)((tUInt8)15u & (DEF_dataPacketInQ_rv_port1__read____d1 >> 33u));
  switch (DEF_destProcID__h1140) {
  case (tUInt8)5u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d25 = (tUInt8)16u;
    break;
  case (tUInt8)0u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d25 = (tUInt8)17u;
    break;
  case (tUInt8)3u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d25 = (tUInt8)18u;
    break;
  case (tUInt8)1u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d25 = (tUInt8)19u;
    break;
  default:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d25 = (tUInt8)0u;
  }
  switch (DEF_destProcID__h1140) {
  case (tUInt8)5u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d30 = (tUInt8)7u;
    break;
  case (tUInt8)0u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d30 = (tUInt8)6u;
    break;
  case (tUInt8)4u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d30 = (tUInt8)5u;
    break;
  case (tUInt8)2u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d30 = (tUInt8)4u;
    break;
  default:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d30 = (tUInt8)0u;
  }
  switch (DEF_srcProcId__h1139) {
  case (tUInt8)4u:
    DEF__theResult____h1142 = DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d25;
    break;
  case (tUInt8)1u:
    DEF__theResult____h1142 = DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d30;
    break;
  default:
    DEF__theResult____h1142 = (tUInt8)0u;
  }
  switch (DEF_destProcID__h1140) {
  case (tUInt8)2u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d36 = (tUInt8)23u;
    break;
  case (tUInt8)4u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d36 = (tUInt8)22u;
    break;
  case (tUInt8)1u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d36 = (tUInt8)21u;
    break;
  case (tUInt8)6u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d36 = (tUInt8)20u;
    break;
  default:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d36 = DEF__theResult____h1142;
  }
  switch (DEF_srcProcId__h1139) {
  case (tUInt8)5u:
    DEF__theResult_____7__h1143 = DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d36;
    break;
  case (tUInt8)4u:
    DEF__theResult_____7__h1143 = DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d25;
    break;
  case (tUInt8)1u:
    DEF__theResult_____7__h1143 = DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d30;
    break;
  default:
    DEF__theResult_____7__h1143 = (tUInt8)0u;
  }
  switch (DEF_destProcID__h1140) {
  case (tUInt8)6u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d41 = (tUInt8)11u;
    break;
  case (tUInt8)1u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d41 = (tUInt8)10u;
    break;
  case (tUInt8)5u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d41 = (tUInt8)9u;
    break;
  case (tUInt8)3u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d41 = (tUInt8)8u;
    break;
  default:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d41 = DEF__theResult_____7__h1143;
  }
  switch (DEF_srcProcId__h1139) {
  case (tUInt8)2u:
    DEF__theResult_____6__h1144 = DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d41;
    break;
  case (tUInt8)5u:
    DEF__theResult_____6__h1144 = DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d36;
    break;
  case (tUInt8)4u:
    DEF__theResult_____6__h1144 = DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d25;
    break;
  case (tUInt8)1u:
    DEF__theResult_____6__h1144 = DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d30;
    break;
  default:
    DEF__theResult_____6__h1144 = (tUInt8)0u;
  }
  switch (DEF_destProcID__h1140) {
  case (tUInt8)4u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d46 = (tUInt8)3u;
    break;
  case (tUInt8)6u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d46 = (tUInt8)2u;
    break;
  case (tUInt8)3u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d46 = (tUInt8)1u;
    break;
  case (tUInt8)1u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d46 = (tUInt8)0u;
    break;
  default:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d46 = DEF__theResult_____6__h1144;
  }
  switch (DEF_srcProcId__h1139) {
  case (tUInt8)0u:
    DEF__theResult_____5__h1145 = DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d46;
    break;
  case (tUInt8)2u:
    DEF__theResult_____5__h1145 = DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d41;
    break;
  case (tUInt8)5u:
    DEF__theResult_____5__h1145 = DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d36;
    break;
  case (tUInt8)4u:
    DEF__theResult_____5__h1145 = DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d25;
    break;
  case (tUInt8)1u:
    DEF__theResult_____5__h1145 = DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d30;
    break;
  default:
    DEF__theResult_____5__h1145 = (tUInt8)0u;
  }
  switch (DEF_destProcID__h1140) {
  case (tUInt8)0u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d51 = (tUInt8)15u;
    break;
  case (tUInt8)2u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d51 = (tUInt8)14u;
    break;
  case (tUInt8)6u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d51 = (tUInt8)13u;
    break;
  case (tUInt8)4u:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d51 = (tUInt8)12u;
    break;
  default:
    DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d51 = DEF__theResult_____5__h1145;
  }
  DEF_v_arcid__h1138 = DEF_srcProcId__h1139 == (tUInt8)3u ? DEF_IF_dataPacketInQ_rv_port1__read_BITS_36_TO_33__ETC___d51 : (tUInt8)0u;
  DEF__1_CONCAT_IF_dataPacketInQ_rv_port1__read_BITS__ETC___d54 = 281474976710655llu & (((((tUInt64)((tUInt8)1u)) << 47u) | (((tUInt64)(DEF_v_arcid__h1138)) << 41u)) | (tUInt64)(2199023255551llu & DEF_dataPacketInQ_rv_port1__read____d1));
  DEF__0_CONCAT_DONTCARE___d7 = 733007751850llu;
  INST_dataPacketInQ_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d7);
  INST_nocPacketOutQ_rv.METH_port0__write(DEF__1_CONCAT_IF_dataPacketInQ_rv_port1__read_BITS__ETC___d54);
}

void MOD_mkNetConnect::RL_removeLayer()
{
  tUInt64 DEF__1_CONCAT_nocPacketInQ_rv_port1__read__5_BITS_4_ETC___d63;
  DEF_nocPacketInQ_rv_port1__read____d55 = INST_nocPacketInQ_rv.METH_port1__read();
  DEF__0_CONCAT_DONTCARE___d61 = 46912496118442llu;
  DEF__1_CONCAT_nocPacketInQ_rv_port1__read__5_BITS_4_ETC___d63 = 4398046511103llu & ((((tUInt64)((tUInt8)1u)) << 41u) | (tUInt64)(2199023255551llu & DEF_nocPacketInQ_rv_port1__read____d55));
  INST_nocPacketInQ_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d61);
  INST_dataPacketOutQ_rv.METH_port0__write(DEF__1_CONCAT_nocPacketInQ_rv_port1__read__5_BITS_4_ETC___d63);
}


/* Methods */

void MOD_mkNetConnect::METH_putDataPacket_put(tUInt64 ARG_putDataPacket_put)
{
  tUInt64 DEF__1_CONCAT_putDataPacket_put___d64;
  PORT_EN_putDataPacket_put = (tUInt8)1u;
  DEF_WILL_FIRE_putDataPacket_put = (tUInt8)1u;
  PORT_putDataPacket_put = ARG_putDataPacket_put;
  DEF__1_CONCAT_putDataPacket_put___d64 = 4398046511103llu & ((((tUInt64)((tUInt8)1u)) << 41u) | ARG_putDataPacket_put);
  INST_dataPacketInQ_rv.METH_port0__write(DEF__1_CONCAT_putDataPacket_put___d64);
}

tUInt8 MOD_mkNetConnect::METH_RDY_putDataPacket_put()
{
  DEF_CAN_FIRE_putDataPacket_put = !((tUInt8)(INST_dataPacketInQ_rv.METH_port0__read() >> 41u));
  PORT_RDY_putDataPacket_put = DEF_CAN_FIRE_putDataPacket_put;
  return PORT_RDY_putDataPacket_put;
}

tUInt64 MOD_mkNetConnect::METH_getDataPacket_get()
{
  PORT_EN_getDataPacket_get = (tUInt8)1u;
  DEF_WILL_FIRE_getDataPacket_get = (tUInt8)1u;
  DEF_dataPacketOutQ_rv_port1__read____d67 = INST_dataPacketOutQ_rv.METH_port1__read();
  PORT_getDataPacket_get = (tUInt64)(2199023255551llu & DEF_dataPacketOutQ_rv_port1__read____d67);
  DEF__0_CONCAT_DONTCARE___d7 = 733007751850llu;
  INST_dataPacketOutQ_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d7);
  return PORT_getDataPacket_get;
}

tUInt8 MOD_mkNetConnect::METH_RDY_getDataPacket_get()
{
  DEF_dataPacketOutQ_rv_port1__read____d67 = INST_dataPacketOutQ_rv.METH_port1__read();
  DEF_CAN_FIRE_getDataPacket_get = (tUInt8)(DEF_dataPacketOutQ_rv_port1__read____d67 >> 41u);
  PORT_RDY_getDataPacket_get = DEF_CAN_FIRE_getDataPacket_get;
  return PORT_RDY_getDataPacket_get;
}

void MOD_mkNetConnect::METH_putNoCPacket_put(tUInt64 ARG_putNoCPacket_put)
{
  tUInt64 DEF__1_CONCAT_putNoCPacket_put___d68;
  PORT_EN_putNoCPacket_put = (tUInt8)1u;
  DEF_WILL_FIRE_putNoCPacket_put = (tUInt8)1u;
  PORT_putNoCPacket_put = ARG_putNoCPacket_put;
  DEF__1_CONCAT_putNoCPacket_put___d68 = 281474976710655llu & ((((tUInt64)((tUInt8)1u)) << 47u) | ARG_putNoCPacket_put);
  INST_nocPacketInQ_rv.METH_port0__write(DEF__1_CONCAT_putNoCPacket_put___d68);
}

tUInt8 MOD_mkNetConnect::METH_RDY_putNoCPacket_put()
{
  DEF_CAN_FIRE_putNoCPacket_put = !((tUInt8)(INST_nocPacketInQ_rv.METH_port0__read() >> 47u));
  PORT_RDY_putNoCPacket_put = DEF_CAN_FIRE_putNoCPacket_put;
  return PORT_RDY_putNoCPacket_put;
}

tUInt64 MOD_mkNetConnect::METH_getNoCPacket_get()
{
  PORT_EN_getNoCPacket_get = (tUInt8)1u;
  DEF_WILL_FIRE_getNoCPacket_get = (tUInt8)1u;
  DEF_nocPacketOutQ_rv_port1__read____d71 = INST_nocPacketOutQ_rv.METH_port1__read();
  PORT_getNoCPacket_get = (tUInt64)(140737488355327llu & DEF_nocPacketOutQ_rv_port1__read____d71);
  DEF__0_CONCAT_DONTCARE___d61 = 46912496118442llu;
  INST_nocPacketOutQ_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d61);
  return PORT_getNoCPacket_get;
}

tUInt8 MOD_mkNetConnect::METH_RDY_getNoCPacket_get()
{
  DEF_nocPacketOutQ_rv_port1__read____d71 = INST_nocPacketOutQ_rv.METH_port1__read();
  DEF_CAN_FIRE_getNoCPacket_get = (tUInt8)(DEF_nocPacketOutQ_rv_port1__read____d71 >> 47u);
  PORT_RDY_getNoCPacket_get = DEF_CAN_FIRE_getNoCPacket_get;
  return PORT_RDY_getNoCPacket_get;
}


/* Reset routines */

void MOD_mkNetConnect::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_nocPacketOutQ_rv.reset_RST(ARG_rst_in);
  INST_nocPacketInQ_rv.reset_RST(ARG_rst_in);
  INST_dataPacketOutQ_rv.reset_RST(ARG_rst_in);
  INST_dataPacketInQ_rv.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkNetConnect::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkNetConnect::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_dataPacketInQ_rv.dump_state(indent + 2u);
  INST_dataPacketOutQ_rv.dump_state(indent + 2u);
  INST_nocPacketInQ_rv.dump_state(indent + 2u);
  INST_nocPacketOutQ_rv.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkNetConnect::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 35u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_addLayer", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_removeLayer", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_getDataPacket_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_getNoCPacket_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_putDataPacket_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_putNoCPacket_put", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_addLayer", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_removeLayer", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_getDataPacket_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_getNoCPacket_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_putDataPacket_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_putNoCPacket_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0_CONCAT_DONTCARE___d61", 48u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0_CONCAT_DONTCARE___d7", 42u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dataPacketInQ_rv_port1__read____d1", 42u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dataPacketOutQ_rv_port1__read____d67", 42u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "nocPacketInQ_rv_port1__read____d55", 48u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "nocPacketOutQ_rv_port1__read____d71", 48u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_getDataPacket_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_getNoCPacket_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_putDataPacket_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_putNoCPacket_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_getDataPacket_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_getNoCPacket_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_putDataPacket_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_putNoCPacket_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "getDataPacket_get", 41u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "getNoCPacket_get", 47u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "putDataPacket_put", 41u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "putNoCPacket_put", 47u);
  num = INST_dataPacketInQ_rv.dump_VCD_defs(num);
  num = INST_dataPacketOutQ_rv.dump_VCD_defs(num);
  num = INST_nocPacketInQ_rv.dump_VCD_defs(num);
  num = INST_nocPacketOutQ_rv.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkNetConnect::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkNetConnect &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkNetConnect::vcd_defs(tVCDDumpType dt, MOD_mkNetConnect &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 48u);
    vcd_write_x(sim_hdl, num++, 42u);
    vcd_write_x(sim_hdl, num++, 42u);
    vcd_write_x(sim_hdl, num++, 42u);
    vcd_write_x(sim_hdl, num++, 48u);
    vcd_write_x(sim_hdl, num++, 48u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 41u);
    vcd_write_x(sim_hdl, num++, 47u);
    vcd_write_x(sim_hdl, num++, 41u);
    vcd_write_x(sim_hdl, num++, 47u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_RL_addLayer) != DEF_CAN_FIRE_RL_addLayer)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_addLayer, 1u);
	backing.DEF_CAN_FIRE_RL_addLayer = DEF_CAN_FIRE_RL_addLayer;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_removeLayer) != DEF_CAN_FIRE_RL_removeLayer)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_removeLayer, 1u);
	backing.DEF_CAN_FIRE_RL_removeLayer = DEF_CAN_FIRE_RL_removeLayer;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_getDataPacket_get) != DEF_CAN_FIRE_getDataPacket_get)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_getDataPacket_get, 1u);
	backing.DEF_CAN_FIRE_getDataPacket_get = DEF_CAN_FIRE_getDataPacket_get;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_getNoCPacket_get) != DEF_CAN_FIRE_getNoCPacket_get)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_getNoCPacket_get, 1u);
	backing.DEF_CAN_FIRE_getNoCPacket_get = DEF_CAN_FIRE_getNoCPacket_get;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_putDataPacket_put) != DEF_CAN_FIRE_putDataPacket_put)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_putDataPacket_put, 1u);
	backing.DEF_CAN_FIRE_putDataPacket_put = DEF_CAN_FIRE_putDataPacket_put;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_putNoCPacket_put) != DEF_CAN_FIRE_putNoCPacket_put)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_putNoCPacket_put, 1u);
	backing.DEF_CAN_FIRE_putNoCPacket_put = DEF_CAN_FIRE_putNoCPacket_put;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_addLayer) != DEF_WILL_FIRE_RL_addLayer)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_addLayer, 1u);
	backing.DEF_WILL_FIRE_RL_addLayer = DEF_WILL_FIRE_RL_addLayer;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_removeLayer) != DEF_WILL_FIRE_RL_removeLayer)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_removeLayer, 1u);
	backing.DEF_WILL_FIRE_RL_removeLayer = DEF_WILL_FIRE_RL_removeLayer;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_getDataPacket_get) != DEF_WILL_FIRE_getDataPacket_get)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_getDataPacket_get, 1u);
	backing.DEF_WILL_FIRE_getDataPacket_get = DEF_WILL_FIRE_getDataPacket_get;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_getNoCPacket_get) != DEF_WILL_FIRE_getNoCPacket_get)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_getNoCPacket_get, 1u);
	backing.DEF_WILL_FIRE_getNoCPacket_get = DEF_WILL_FIRE_getNoCPacket_get;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_putDataPacket_put) != DEF_WILL_FIRE_putDataPacket_put)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_putDataPacket_put, 1u);
	backing.DEF_WILL_FIRE_putDataPacket_put = DEF_WILL_FIRE_putDataPacket_put;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_putNoCPacket_put) != DEF_WILL_FIRE_putNoCPacket_put)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_putNoCPacket_put, 1u);
	backing.DEF_WILL_FIRE_putNoCPacket_put = DEF_WILL_FIRE_putNoCPacket_put;
      }
      ++num;
      if ((backing.DEF__0_CONCAT_DONTCARE___d61) != DEF__0_CONCAT_DONTCARE___d61)
      {
	vcd_write_val(sim_hdl, num, DEF__0_CONCAT_DONTCARE___d61, 48u);
	backing.DEF__0_CONCAT_DONTCARE___d61 = DEF__0_CONCAT_DONTCARE___d61;
      }
      ++num;
      if ((backing.DEF__0_CONCAT_DONTCARE___d7) != DEF__0_CONCAT_DONTCARE___d7)
      {
	vcd_write_val(sim_hdl, num, DEF__0_CONCAT_DONTCARE___d7, 42u);
	backing.DEF__0_CONCAT_DONTCARE___d7 = DEF__0_CONCAT_DONTCARE___d7;
      }
      ++num;
      if ((backing.DEF_dataPacketInQ_rv_port1__read____d1) != DEF_dataPacketInQ_rv_port1__read____d1)
      {
	vcd_write_val(sim_hdl, num, DEF_dataPacketInQ_rv_port1__read____d1, 42u);
	backing.DEF_dataPacketInQ_rv_port1__read____d1 = DEF_dataPacketInQ_rv_port1__read____d1;
      }
      ++num;
      if ((backing.DEF_dataPacketOutQ_rv_port1__read____d67) != DEF_dataPacketOutQ_rv_port1__read____d67)
      {
	vcd_write_val(sim_hdl, num, DEF_dataPacketOutQ_rv_port1__read____d67, 42u);
	backing.DEF_dataPacketOutQ_rv_port1__read____d67 = DEF_dataPacketOutQ_rv_port1__read____d67;
      }
      ++num;
      if ((backing.DEF_nocPacketInQ_rv_port1__read____d55) != DEF_nocPacketInQ_rv_port1__read____d55)
      {
	vcd_write_val(sim_hdl, num, DEF_nocPacketInQ_rv_port1__read____d55, 48u);
	backing.DEF_nocPacketInQ_rv_port1__read____d55 = DEF_nocPacketInQ_rv_port1__read____d55;
      }
      ++num;
      if ((backing.DEF_nocPacketOutQ_rv_port1__read____d71) != DEF_nocPacketOutQ_rv_port1__read____d71)
      {
	vcd_write_val(sim_hdl, num, DEF_nocPacketOutQ_rv_port1__read____d71, 48u);
	backing.DEF_nocPacketOutQ_rv_port1__read____d71 = DEF_nocPacketOutQ_rv_port1__read____d71;
      }
      ++num;
      if ((backing.PORT_EN_getDataPacket_get) != PORT_EN_getDataPacket_get)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_getDataPacket_get, 1u);
	backing.PORT_EN_getDataPacket_get = PORT_EN_getDataPacket_get;
      }
      ++num;
      if ((backing.PORT_EN_getNoCPacket_get) != PORT_EN_getNoCPacket_get)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_getNoCPacket_get, 1u);
	backing.PORT_EN_getNoCPacket_get = PORT_EN_getNoCPacket_get;
      }
      ++num;
      if ((backing.PORT_EN_putDataPacket_put) != PORT_EN_putDataPacket_put)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_putDataPacket_put, 1u);
	backing.PORT_EN_putDataPacket_put = PORT_EN_putDataPacket_put;
      }
      ++num;
      if ((backing.PORT_EN_putNoCPacket_put) != PORT_EN_putNoCPacket_put)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_putNoCPacket_put, 1u);
	backing.PORT_EN_putNoCPacket_put = PORT_EN_putNoCPacket_put;
      }
      ++num;
      if ((backing.PORT_RDY_getDataPacket_get) != PORT_RDY_getDataPacket_get)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_getDataPacket_get, 1u);
	backing.PORT_RDY_getDataPacket_get = PORT_RDY_getDataPacket_get;
      }
      ++num;
      if ((backing.PORT_RDY_getNoCPacket_get) != PORT_RDY_getNoCPacket_get)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_getNoCPacket_get, 1u);
	backing.PORT_RDY_getNoCPacket_get = PORT_RDY_getNoCPacket_get;
      }
      ++num;
      if ((backing.PORT_RDY_putDataPacket_put) != PORT_RDY_putDataPacket_put)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_putDataPacket_put, 1u);
	backing.PORT_RDY_putDataPacket_put = PORT_RDY_putDataPacket_put;
      }
      ++num;
      if ((backing.PORT_RDY_putNoCPacket_put) != PORT_RDY_putNoCPacket_put)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_putNoCPacket_put, 1u);
	backing.PORT_RDY_putNoCPacket_put = PORT_RDY_putNoCPacket_put;
      }
      ++num;
      if ((backing.PORT_getDataPacket_get) != PORT_getDataPacket_get)
      {
	vcd_write_val(sim_hdl, num, PORT_getDataPacket_get, 41u);
	backing.PORT_getDataPacket_get = PORT_getDataPacket_get;
      }
      ++num;
      if ((backing.PORT_getNoCPacket_get) != PORT_getNoCPacket_get)
      {
	vcd_write_val(sim_hdl, num, PORT_getNoCPacket_get, 47u);
	backing.PORT_getNoCPacket_get = PORT_getNoCPacket_get;
      }
      ++num;
      if ((backing.PORT_putDataPacket_put) != PORT_putDataPacket_put)
      {
	vcd_write_val(sim_hdl, num, PORT_putDataPacket_put, 41u);
	backing.PORT_putDataPacket_put = PORT_putDataPacket_put;
      }
      ++num;
      if ((backing.PORT_putNoCPacket_put) != PORT_putNoCPacket_put)
      {
	vcd_write_val(sim_hdl, num, PORT_putNoCPacket_put, 47u);
	backing.PORT_putNoCPacket_put = PORT_putNoCPacket_put;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_addLayer, 1u);
      backing.DEF_CAN_FIRE_RL_addLayer = DEF_CAN_FIRE_RL_addLayer;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_removeLayer, 1u);
      backing.DEF_CAN_FIRE_RL_removeLayer = DEF_CAN_FIRE_RL_removeLayer;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_getDataPacket_get, 1u);
      backing.DEF_CAN_FIRE_getDataPacket_get = DEF_CAN_FIRE_getDataPacket_get;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_getNoCPacket_get, 1u);
      backing.DEF_CAN_FIRE_getNoCPacket_get = DEF_CAN_FIRE_getNoCPacket_get;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_putDataPacket_put, 1u);
      backing.DEF_CAN_FIRE_putDataPacket_put = DEF_CAN_FIRE_putDataPacket_put;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_putNoCPacket_put, 1u);
      backing.DEF_CAN_FIRE_putNoCPacket_put = DEF_CAN_FIRE_putNoCPacket_put;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_addLayer, 1u);
      backing.DEF_WILL_FIRE_RL_addLayer = DEF_WILL_FIRE_RL_addLayer;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_removeLayer, 1u);
      backing.DEF_WILL_FIRE_RL_removeLayer = DEF_WILL_FIRE_RL_removeLayer;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_getDataPacket_get, 1u);
      backing.DEF_WILL_FIRE_getDataPacket_get = DEF_WILL_FIRE_getDataPacket_get;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_getNoCPacket_get, 1u);
      backing.DEF_WILL_FIRE_getNoCPacket_get = DEF_WILL_FIRE_getNoCPacket_get;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_putDataPacket_put, 1u);
      backing.DEF_WILL_FIRE_putDataPacket_put = DEF_WILL_FIRE_putDataPacket_put;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_putNoCPacket_put, 1u);
      backing.DEF_WILL_FIRE_putNoCPacket_put = DEF_WILL_FIRE_putNoCPacket_put;
      vcd_write_val(sim_hdl, num++, DEF__0_CONCAT_DONTCARE___d61, 48u);
      backing.DEF__0_CONCAT_DONTCARE___d61 = DEF__0_CONCAT_DONTCARE___d61;
      vcd_write_val(sim_hdl, num++, DEF__0_CONCAT_DONTCARE___d7, 42u);
      backing.DEF__0_CONCAT_DONTCARE___d7 = DEF__0_CONCAT_DONTCARE___d7;
      vcd_write_val(sim_hdl, num++, DEF_dataPacketInQ_rv_port1__read____d1, 42u);
      backing.DEF_dataPacketInQ_rv_port1__read____d1 = DEF_dataPacketInQ_rv_port1__read____d1;
      vcd_write_val(sim_hdl, num++, DEF_dataPacketOutQ_rv_port1__read____d67, 42u);
      backing.DEF_dataPacketOutQ_rv_port1__read____d67 = DEF_dataPacketOutQ_rv_port1__read____d67;
      vcd_write_val(sim_hdl, num++, DEF_nocPacketInQ_rv_port1__read____d55, 48u);
      backing.DEF_nocPacketInQ_rv_port1__read____d55 = DEF_nocPacketInQ_rv_port1__read____d55;
      vcd_write_val(sim_hdl, num++, DEF_nocPacketOutQ_rv_port1__read____d71, 48u);
      backing.DEF_nocPacketOutQ_rv_port1__read____d71 = DEF_nocPacketOutQ_rv_port1__read____d71;
      vcd_write_val(sim_hdl, num++, PORT_EN_getDataPacket_get, 1u);
      backing.PORT_EN_getDataPacket_get = PORT_EN_getDataPacket_get;
      vcd_write_val(sim_hdl, num++, PORT_EN_getNoCPacket_get, 1u);
      backing.PORT_EN_getNoCPacket_get = PORT_EN_getNoCPacket_get;
      vcd_write_val(sim_hdl, num++, PORT_EN_putDataPacket_put, 1u);
      backing.PORT_EN_putDataPacket_put = PORT_EN_putDataPacket_put;
      vcd_write_val(sim_hdl, num++, PORT_EN_putNoCPacket_put, 1u);
      backing.PORT_EN_putNoCPacket_put = PORT_EN_putNoCPacket_put;
      vcd_write_val(sim_hdl, num++, PORT_RDY_getDataPacket_get, 1u);
      backing.PORT_RDY_getDataPacket_get = PORT_RDY_getDataPacket_get;
      vcd_write_val(sim_hdl, num++, PORT_RDY_getNoCPacket_get, 1u);
      backing.PORT_RDY_getNoCPacket_get = PORT_RDY_getNoCPacket_get;
      vcd_write_val(sim_hdl, num++, PORT_RDY_putDataPacket_put, 1u);
      backing.PORT_RDY_putDataPacket_put = PORT_RDY_putDataPacket_put;
      vcd_write_val(sim_hdl, num++, PORT_RDY_putNoCPacket_put, 1u);
      backing.PORT_RDY_putNoCPacket_put = PORT_RDY_putNoCPacket_put;
      vcd_write_val(sim_hdl, num++, PORT_getDataPacket_get, 41u);
      backing.PORT_getDataPacket_get = PORT_getDataPacket_get;
      vcd_write_val(sim_hdl, num++, PORT_getNoCPacket_get, 47u);
      backing.PORT_getNoCPacket_get = PORT_getNoCPacket_get;
      vcd_write_val(sim_hdl, num++, PORT_putDataPacket_put, 41u);
      backing.PORT_putDataPacket_put = PORT_putDataPacket_put;
      vcd_write_val(sim_hdl, num++, PORT_putNoCPacket_put, 47u);
      backing.PORT_putNoCPacket_put = PORT_putNoCPacket_put;
    }
}

void MOD_mkNetConnect::vcd_prims(tVCDDumpType dt, MOD_mkNetConnect &backing)
{
  INST_dataPacketInQ_rv.dump_VCD(dt, backing.INST_dataPacketInQ_rv);
  INST_dataPacketOutQ_rv.dump_VCD(dt, backing.INST_dataPacketOutQ_rv);
  INST_nocPacketInQ_rv.dump_VCD(dt, backing.INST_nocPacketInQ_rv);
  INST_nocPacketOutQ_rv.dump_VCD(dt, backing.INST_nocPacketOutQ_rv);
}
