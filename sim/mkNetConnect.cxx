/*
 * Generated by Bluespec Compiler, version 2012.01.A (build 26572, 2012-01-17)
 * 
 * On Sat Jun 28 05:29:27 IST 2014
 * 
 */
#include "bluesim_primitives.h"
#include "mkNetConnect.h"

namespace bluesim
{
  
  /* String declarations */
  static std::string const __str_literal_1("Broadcast Packet (%d,%d) Sending at network interface:  %d ",
					   59u);
  
  
  /* Constructor */
  MOD_mkNetConnect::MOD_mkNetConnect(char const *name, Module *parent)
    : Module(name, parent),
      __clk_handle_0(BAD_CLOCK_HANDLE),
      INST_dataPacketInQ_pw_deq("dataPacketInQ_pw_deq", this, 0u),
      INST_dataPacketInQ_rw_enq("dataPacketInQ_rw_enq", this, 41u, (tUInt8)0u),
      INST_dataPacketInQ_taggedReg("dataPacketInQ_taggedReg",
				   this,
				   42u,
				   4398046511103llu & ((((tUInt64)((tUInt8)0u)) << 41u) | 733007751850llu),
				   (tUInt8)0u),
      INST_dataPacketOutQ_pw_deq("dataPacketOutQ_pw_deq", this, 0u),
      INST_dataPacketOutQ_rw_enq("dataPacketOutQ_rw_enq", this, 41u, (tUInt8)0u),
      INST_dataPacketOutQ_taggedReg("dataPacketOutQ_taggedReg",
				    this,
				    42u,
				    4398046511103llu & ((((tUInt64)((tUInt8)0u)) << 41u) | 733007751850llu),
				    (tUInt8)0u),
      INST_nocPacketInQ_pw_deq("nocPacketInQ_pw_deq", this, 0u),
      INST_nocPacketInQ_rw_enq("nocPacketInQ_rw_enq", this, 51u, (tUInt8)0u),
      INST_nocPacketInQ_taggedReg("nocPacketInQ_taggedReg",
				  this,
				  52u,
				  4503599627370495llu & ((((tUInt64)((tUInt8)0u)) << 51u) | 750599937895082llu),
				  (tUInt8)0u),
      INST_nocPacketOutQ_pw_deq("nocPacketOutQ_pw_deq", this, 0u),
      INST_nocPacketOutQ_rw_enq("nocPacketOutQ_rw_enq", this, 51u, (tUInt8)0u),
      INST_nocPacketOutQ_taggedReg("nocPacketOutQ_taggedReg",
				   this,
				   52u,
				   4503599627370495llu & ((((tUInt64)((tUInt8)0u)) << 51u) | 750599937895082llu),
				   (tUInt8)0u),
      PORT_RST_N((tUInt8)1u)
  {
    PORT_EN_putNoCPacket_put = false;
    PORT_EN_getNoCPacket_get = false;
    PORT_EN_putDataPacket_put = false;
    PORT_EN_getDataPacket_get = false;
    PORT_putNoCPacket_put = 0llu;
    PORT_putDataPacket_put = 0llu;
    PORT_RDY_putNoCPacket_put = false;
    PORT_getNoCPacket_get = 0llu;
    PORT_RDY_getNoCPacket_get = false;
    PORT_RDY_putDataPacket_put = false;
    PORT_getDataPacket_get = 0llu;
    PORT_RDY_getDataPacket_get = false;
    symbol_count = 62u;
    symbols = new tSym[symbol_count];
    init_symbols_0();
  }
  
  
  /* Symbol init fns */
  
  void MOD_mkNetConnect::init_symbols_0()
  {
    init_symbol(&symbols[0u],
		"CAN_FIRE_getDataPacket_get",
		SYM_DEF,
		&DEF_CAN_FIRE_getDataPacket_get,
		1u);
    init_symbol(&symbols[1u], "CAN_FIRE_getNoCPacket_get", SYM_DEF, &DEF_CAN_FIRE_getNoCPacket_get, 1u);
    init_symbol(&symbols[2u],
		"CAN_FIRE_putDataPacket_put",
		SYM_DEF,
		&DEF_CAN_FIRE_putDataPacket_put,
		1u);
    init_symbol(&symbols[3u], "CAN_FIRE_putNoCPacket_put", SYM_DEF, &DEF_CAN_FIRE_putNoCPacket_put, 1u);
    init_symbol(&symbols[4u], "CAN_FIRE_RL_addLayer", SYM_DEF, &DEF_CAN_FIRE_RL_addLayer, 1u);
    init_symbol(&symbols[5u],
		"CAN_FIRE_RL_dataPacketInQ_rule_deq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_dataPacketInQ_rule_deq,
		1u);
    init_symbol(&symbols[6u],
		"CAN_FIRE_RL_dataPacketInQ_rule_enq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_dataPacketInQ_rule_enq,
		1u);
    init_symbol(&symbols[7u],
		"CAN_FIRE_RL_dataPacketOutQ_rule_deq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_dataPacketOutQ_rule_deq,
		1u);
    init_symbol(&symbols[8u],
		"CAN_FIRE_RL_dataPacketOutQ_rule_enq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_dataPacketOutQ_rule_enq,
		1u);
    init_symbol(&symbols[9u],
		"CAN_FIRE_RL_nocPacketInQ_rule_deq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_nocPacketInQ_rule_deq,
		1u);
    init_symbol(&symbols[10u],
		"CAN_FIRE_RL_nocPacketInQ_rule_enq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_nocPacketInQ_rule_enq,
		1u);
    init_symbol(&symbols[11u],
		"CAN_FIRE_RL_nocPacketOutQ_rule_deq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_nocPacketOutQ_rule_deq,
		1u);
    init_symbol(&symbols[12u],
		"CAN_FIRE_RL_nocPacketOutQ_rule_enq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_nocPacketOutQ_rule_enq,
		1u);
    init_symbol(&symbols[13u], "CAN_FIRE_RL_removeLayer", SYM_DEF, &DEF_CAN_FIRE_RL_removeLayer, 1u);
    init_symbol(&symbols[14u], "dataPacketInQ_pw_deq", SYM_MODULE, &INST_dataPacketInQ_pw_deq);
    init_symbol(&symbols[15u], "dataPacketInQ_rw_enq", SYM_MODULE, &INST_dataPacketInQ_rw_enq);
    init_symbol(&symbols[16u], "dataPacketInQ_taggedReg", SYM_MODULE, &INST_dataPacketInQ_taggedReg);
    init_symbol(&symbols[17u], "dataPacketOutQ_pw_deq", SYM_MODULE, &INST_dataPacketOutQ_pw_deq);
    init_symbol(&symbols[18u], "dataPacketOutQ_rw_enq", SYM_MODULE, &INST_dataPacketOutQ_rw_enq);
    init_symbol(&symbols[19u], "dataPacketOutQ_taggedReg", SYM_MODULE, &INST_dataPacketOutQ_taggedReg);
    init_symbol(&symbols[20u], "EN_getDataPacket_get", SYM_PORT, &PORT_EN_getDataPacket_get, 1u);
    init_symbol(&symbols[21u], "EN_getNoCPacket_get", SYM_PORT, &PORT_EN_getNoCPacket_get, 1u);
    init_symbol(&symbols[22u], "EN_putDataPacket_put", SYM_PORT, &PORT_EN_putDataPacket_put, 1u);
    init_symbol(&symbols[23u], "EN_putNoCPacket_put", SYM_PORT, &PORT_EN_putNoCPacket_put, 1u);
    init_symbol(&symbols[24u], "getDataPacket_get", SYM_PORT, &PORT_getDataPacket_get, 41u);
    init_symbol(&symbols[25u], "getNoCPacket_get", SYM_PORT, &PORT_getNoCPacket_get, 51u);
    init_symbol(&symbols[26u], "nocPacketInQ_pw_deq", SYM_MODULE, &INST_nocPacketInQ_pw_deq);
    init_symbol(&symbols[27u], "nocPacketInQ_rw_enq", SYM_MODULE, &INST_nocPacketInQ_rw_enq);
    init_symbol(&symbols[28u], "nocPacketInQ_taggedReg", SYM_MODULE, &INST_nocPacketInQ_taggedReg);
    init_symbol(&symbols[29u], "nocPacketOutQ_pw_deq", SYM_MODULE, &INST_nocPacketOutQ_pw_deq);
    init_symbol(&symbols[30u], "nocPacketOutQ_rw_enq", SYM_MODULE, &INST_nocPacketOutQ_rw_enq);
    init_symbol(&symbols[31u], "nocPacketOutQ_taggedReg", SYM_MODULE, &INST_nocPacketOutQ_taggedReg);
    init_symbol(&symbols[32u], "putDataPacket_put", SYM_PORT, &PORT_putDataPacket_put, 41u);
    init_symbol(&symbols[33u], "putNoCPacket_put", SYM_PORT, &PORT_putNoCPacket_put, 51u);
    init_symbol(&symbols[34u], "RDY_getDataPacket_get", SYM_PORT, &PORT_RDY_getDataPacket_get, 1u);
    init_symbol(&symbols[35u], "RDY_getNoCPacket_get", SYM_PORT, &PORT_RDY_getNoCPacket_get, 1u);
    init_symbol(&symbols[36u], "RDY_putDataPacket_put", SYM_PORT, &PORT_RDY_putDataPacket_put, 1u);
    init_symbol(&symbols[37u], "RDY_putNoCPacket_put", SYM_PORT, &PORT_RDY_putNoCPacket_put, 1u);
    init_symbol(&symbols[38u], "RL_addLayer", SYM_RULE);
    init_symbol(&symbols[39u], "RL_dataPacketInQ_rule_deq", SYM_RULE);
    init_symbol(&symbols[40u], "RL_dataPacketInQ_rule_enq", SYM_RULE);
    init_symbol(&symbols[41u], "RL_dataPacketOutQ_rule_deq", SYM_RULE);
    init_symbol(&symbols[42u], "RL_dataPacketOutQ_rule_enq", SYM_RULE);
    init_symbol(&symbols[43u], "RL_nocPacketInQ_rule_deq", SYM_RULE);
    init_symbol(&symbols[44u], "RL_nocPacketInQ_rule_enq", SYM_RULE);
    init_symbol(&symbols[45u], "RL_nocPacketOutQ_rule_deq", SYM_RULE);
    init_symbol(&symbols[46u], "RL_nocPacketOutQ_rule_enq", SYM_RULE);
    init_symbol(&symbols[47u], "RL_removeLayer", SYM_RULE);
    init_symbol(&symbols[48u],
		"WILL_FIRE_getDataPacket_get",
		SYM_DEF,
		&DEF_WILL_FIRE_getDataPacket_get,
		1u);
    init_symbol(&symbols[49u],
		"WILL_FIRE_getNoCPacket_get",
		SYM_DEF,
		&DEF_WILL_FIRE_getNoCPacket_get,
		1u);
    init_symbol(&symbols[50u],
		"WILL_FIRE_putDataPacket_put",
		SYM_DEF,
		&DEF_WILL_FIRE_putDataPacket_put,
		1u);
    init_symbol(&symbols[51u],
		"WILL_FIRE_putNoCPacket_put",
		SYM_DEF,
		&DEF_WILL_FIRE_putNoCPacket_put,
		1u);
    init_symbol(&symbols[52u], "WILL_FIRE_RL_addLayer", SYM_DEF, &DEF_WILL_FIRE_RL_addLayer, 1u);
    init_symbol(&symbols[53u],
		"WILL_FIRE_RL_dataPacketInQ_rule_deq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_dataPacketInQ_rule_deq,
		1u);
    init_symbol(&symbols[54u],
		"WILL_FIRE_RL_dataPacketInQ_rule_enq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_dataPacketInQ_rule_enq,
		1u);
    init_symbol(&symbols[55u],
		"WILL_FIRE_RL_dataPacketOutQ_rule_deq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_dataPacketOutQ_rule_deq,
		1u);
    init_symbol(&symbols[56u],
		"WILL_FIRE_RL_dataPacketOutQ_rule_enq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_dataPacketOutQ_rule_enq,
		1u);
    init_symbol(&symbols[57u],
		"WILL_FIRE_RL_nocPacketInQ_rule_deq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_nocPacketInQ_rule_deq,
		1u);
    init_symbol(&symbols[58u],
		"WILL_FIRE_RL_nocPacketInQ_rule_enq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_nocPacketInQ_rule_enq,
		1u);
    init_symbol(&symbols[59u],
		"WILL_FIRE_RL_nocPacketOutQ_rule_deq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_nocPacketOutQ_rule_deq,
		1u);
    init_symbol(&symbols[60u],
		"WILL_FIRE_RL_nocPacketOutQ_rule_enq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_nocPacketOutQ_rule_enq,
		1u);
    init_symbol(&symbols[61u], "WILL_FIRE_RL_removeLayer", SYM_DEF, &DEF_WILL_FIRE_RL_removeLayer, 1u);
  }
  
  
  /* Rule actions */
  
  void MOD_mkNetConnect::RL_dataPacketInQ_rule_enq()
  {
    tUInt64 DEF__1_CONCAT_dataPacketInQ_rw_enq_wget___d6;
    DEF_dataPacketInQ_rw_enq_wget____d138 = INST_dataPacketInQ_rw_enq.METH_wget();
    DEF__1_CONCAT_dataPacketInQ_rw_enq_wget___d6 = 4398046511103llu & ((((tUInt64)((tUInt8)1u)) << 41u) | DEF_dataPacketInQ_rw_enq_wget____d138);
    INST_dataPacketInQ_taggedReg.METH_write(DEF__1_CONCAT_dataPacketInQ_rw_enq_wget___d6);
  }
  
  void MOD_mkNetConnect::RL_dataPacketInQ_rule_deq()
  {
    DEF__0_CONCAT_DONTCARE___d136 = 4398046511103llu & ((((tUInt64)((tUInt8)0u)) << 41u) | 733007751850llu);
    INST_dataPacketInQ_taggedReg.METH_write(DEF__0_CONCAT_DONTCARE___d136);
  }
  
  void MOD_mkNetConnect::RL_dataPacketOutQ_rule_enq()
  {
    tUInt64 DEF__1_CONCAT_dataPacketOutQ_rw_enq_wget__2___d13;
    DEF_dataPacketOutQ_rw_enq_wget____d139 = INST_dataPacketOutQ_rw_enq.METH_wget();
    DEF__1_CONCAT_dataPacketOutQ_rw_enq_wget__2___d13 = 4398046511103llu & ((((tUInt64)((tUInt8)1u)) << 41u) | DEF_dataPacketOutQ_rw_enq_wget____d139);
    INST_dataPacketOutQ_taggedReg.METH_write(DEF__1_CONCAT_dataPacketOutQ_rw_enq_wget__2___d13);
  }
  
  void MOD_mkNetConnect::RL_dataPacketOutQ_rule_deq()
  {
    DEF__0_CONCAT_DONTCARE___d136 = 4398046511103llu & ((((tUInt64)((tUInt8)0u)) << 41u) | 733007751850llu);
    INST_dataPacketOutQ_taggedReg.METH_write(DEF__0_CONCAT_DONTCARE___d136);
  }
  
  void MOD_mkNetConnect::RL_nocPacketInQ_rule_enq()
  {
    tUInt64 DEF__1_CONCAT_nocPacketInQ_rw_enq_wget__8___d19;
    DEF_nocPacketInQ_rw_enq_wget____d140 = INST_nocPacketInQ_rw_enq.METH_wget();
    DEF__1_CONCAT_nocPacketInQ_rw_enq_wget__8___d19 = 4503599627370495llu & ((((tUInt64)((tUInt8)1u)) << 51u) | DEF_nocPacketInQ_rw_enq_wget____d140);
    INST_nocPacketInQ_taggedReg.METH_write(DEF__1_CONCAT_nocPacketInQ_rw_enq_wget__8___d19);
  }
  
  void MOD_mkNetConnect::RL_nocPacketInQ_rule_deq()
  {
    DEF__0_CONCAT_DONTCARE___d137 = 4503599627370495llu & ((((tUInt64)((tUInt8)0u)) << 51u) | 750599937895082llu);
    INST_nocPacketInQ_taggedReg.METH_write(DEF__0_CONCAT_DONTCARE___d137);
  }
  
  void MOD_mkNetConnect::RL_nocPacketOutQ_rule_enq()
  {
    tUInt64 DEF__1_CONCAT_nocPacketOutQ_rw_enq_wget__5___d26;
    DEF_nocPacketOutQ_rw_enq_wget____d141 = INST_nocPacketOutQ_rw_enq.METH_wget();
    DEF__1_CONCAT_nocPacketOutQ_rw_enq_wget__5___d26 = 4503599627370495llu & ((((tUInt64)((tUInt8)1u)) << 51u) | DEF_nocPacketOutQ_rw_enq_wget____d141);
    INST_nocPacketOutQ_taggedReg.METH_write(DEF__1_CONCAT_nocPacketOutQ_rw_enq_wget__5___d26);
  }
  
  void MOD_mkNetConnect::RL_nocPacketOutQ_rule_deq()
  {
    DEF__0_CONCAT_DONTCARE___d137 = 4503599627370495llu & ((((tUInt64)((tUInt8)0u)) << 51u) | 750599937895082llu);
    INST_nocPacketOutQ_taggedReg.METH_write(DEF__0_CONCAT_DONTCARE___d137);
  }
  
  void MOD_mkNetConnect::RL_addLayer()
  {
    tUInt64 DEF_IF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacke_ETC___d92;
    tUInt8 DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d142;
    tUInt8 DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d156;
    tUInt8 DEF_x__h1540;
    tUInt8 DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d158;
    tUInt8 DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d159;
    tUInt8 DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d166;
    tUInt8 DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d157;
    tUInt8 DEF_x__h1482;
    tUInt8 DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d160;
    tUInt8 DEF_x__h1608;
    tUInt8 DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d163;
    tUInt8 DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d162;
    tUInt8 DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d167;
    tUInt8 DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d161;
    tUInt8 DEF_x__h1552;
    tUInt8 DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d134;
    tUInt8 DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d133;
    tUInt8 DEF_dataPacketInQ_taggedReg_7_BIT_0___d169;
    tUInt8 DEF_x_wget_dest__h225;
    tUInt8 DEF_x_wget_src__h224;
    tUInt8 DEF_dataPacketInQ_taggedReg_7_BITS_36_TO_33___d171;
    tUInt8 DEF_dataPacketInQ_taggedReg_7_BITS_40_TO_37___d170;
    DEF_dataPacketInQ_taggedReg___d164 = INST_dataPacketInQ_taggedReg.METH_read();
    DEF_dataPacketInQ_taggedReg_7_BIT_41___d148 = (tUInt8)(DEF_dataPacketInQ_taggedReg___d164 >> 41u);
    DEF_dataPacketInQ_rw_enq_wget____d138 = INST_dataPacketInQ_rw_enq.METH_wget();
    DEF_dataPacketInQ_rw_enq_whas____d152 = INST_dataPacketInQ_rw_enq.METH_whas();
    DEF_dataPacketInQ_taggedReg_7_BITS_40_TO_37___d170 = (tUInt8)((tUInt8)15u & (DEF_dataPacketInQ_taggedReg___d164 >> 37u));
    DEF_dataPacketInQ_taggedReg_7_BITS_36_TO_33___d171 = (tUInt8)((tUInt8)15u & (DEF_dataPacketInQ_taggedReg___d164 >> 33u));
    DEF_x_wget_src__h224 = (tUInt8)(DEF_dataPacketInQ_rw_enq_wget____d138 >> 37u);
    DEF_x_wget_dest__h225 = (tUInt8)((tUInt8)15u & (DEF_dataPacketInQ_rw_enq_wget____d138 >> 33u));
    DEF_dataPacketInQ_taggedReg_7_BIT_0___d169 = (tUInt8)((tUInt8)1u & DEF_dataPacketInQ_taggedReg___d164);
    DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d133 = DEF_dataPacketInQ_rw_enq_whas____d152 ? DEF_x_wget_src__h224 : (DEF_dataPacketInQ_taggedReg_7_BIT_41___d148 ? DEF_dataPacketInQ_taggedReg_7_BITS_40_TO_37___d170 : DEF_dataPacketInQ_taggedReg_7_BITS_40_TO_37___d170);
    DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d134 = DEF_dataPacketInQ_rw_enq_whas____d152 ? DEF_x_wget_dest__h225 : (DEF_dataPacketInQ_taggedReg_7_BIT_41___d148 ? DEF_dataPacketInQ_taggedReg_7_BITS_36_TO_33___d171 : DEF_dataPacketInQ_taggedReg_7_BITS_36_TO_33___d171);
    DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d161 = DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d134 == (tUInt8)1u;
    DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d167 = DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d134 == (tUInt8)2u;
    DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d162 = DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d134 == (tUInt8)3u;
    DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d163 = DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d134 == (tUInt8)4u;
    DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d160 = DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d134 == (tUInt8)0u;
    DEF_x__h1552 = DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d160 || DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d161 ? (tUInt8)1u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d167 ? (tUInt8)0u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d162 ? (tUInt8)2u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d163 ? (tUInt8)1u : (tUInt8)0u)));
    DEF_x__h1608 = DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d160 ? (tUInt8)2u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d161 ? (tUInt8)0u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d167 ? (tUInt8)2u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d162 || DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d163 ? (tUInt8)1u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d134 == (tUInt8)5u ? (tUInt8)0u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d134 == (tUInt8)6u ? (tUInt8)1u : (tUInt8)0u)))));
    DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d157 = DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d133 == (tUInt8)1u;
    DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d166 = DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d133 == (tUInt8)2u;
    DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d159 = DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d133 == (tUInt8)4u;
    DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d158 = DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d133 == (tUInt8)3u;
    DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d156 = DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d133 == (tUInt8)0u;
    DEF_x__h1482 = DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d156 || DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d157 ? (tUInt8)1u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d166 ? (tUInt8)0u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d158 ? (tUInt8)2u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d159 ? (tUInt8)1u : (tUInt8)0u)));
    DEF_x__h1540 = DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d156 ? (tUInt8)2u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d157 ? (tUInt8)0u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d166 ? (tUInt8)2u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d158 || DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d159 ? (tUInt8)1u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d133 == (tUInt8)5u ? (tUInt8)0u : (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d133 == (tUInt8)6u ? (tUInt8)1u : (tUInt8)0u)))));
    DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d142 = DEF_dataPacketInQ_rw_enq_whas____d152 ? (tUInt8)((tUInt8)1u & DEF_dataPacketInQ_rw_enq_wget____d138) : (DEF_dataPacketInQ_taggedReg_7_BIT_41___d148 ? DEF_dataPacketInQ_taggedReg_7_BIT_0___d169 : DEF_dataPacketInQ_taggedReg_7_BIT_0___d169);
    DEF_IF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacke_ETC___d92 = 2251799813685247llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)15u & ((DEF_x__h1482 << 2u) | DEF_x__h1540)) << 4u) | ((tUInt8)15u & ((DEF_x__h1552 << 2u) | DEF_x__h1608))))) << 43u) | (8796093022207llu & (((4398046511103llu & (((DEF_dataPacketInQ_rw_enq_whas____d152 ? DEF_dataPacketInQ_rw_enq_wget____d138 : (DEF_dataPacketInQ_taggedReg_7_BIT_41___d148 ? (tUInt64)(2199023255551llu & DEF_dataPacketInQ_taggedReg___d164) : 2199023255551llu & ((((tUInt64)((tUInt8)255u & ((DEF_dataPacketInQ_taggedReg_7_BITS_40_TO_37___d170 << 4u) | DEF_dataPacketInQ_taggedReg_7_BITS_36_TO_33___d171))) << 33u) | (8589934591llu & ((((tUInt64)((tUInt32)(DEF_dataPacketInQ_taggedReg___d164 >> 1u))) << 1u) | (tUInt64)(DEF_dataPacketInQ_taggedReg_7_BIT_0___d169)))))) << 1u) | (tUInt64)(DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d142))) << 1u) | (tUInt64)((tUInt8)0u))));
    INST_dataPacketInQ_pw_deq.METH_wset();
    if (!(PORT_RST_N == (tUInt8)0u))
      if (DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d142)
	dollar_display(this,
		       "s,4,4,4",
		       &__str_literal_1,
		       DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d133,
		       DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d134,
		       DEF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacketIn_ETC___d133);
    INST_nocPacketOutQ_rw_enq.METH_wset(DEF_IF_IF_dataPacketInQ_rw_enq_whas_THEN_dataPacke_ETC___d92);
  }
  
  void MOD_mkNetConnect::RL_removeLayer()
  {
    tUInt64 DEF_IF_nocPacketInQ_rw_enq_whas__4_THEN_nocPacketI_ETC___d109;
    DEF_nocPacketInQ_taggedReg___d165 = INST_nocPacketInQ_taggedReg.METH_read();
    DEF_nocPacketInQ_taggedReg_3_BIT_51___d150 = (tUInt8)(DEF_nocPacketInQ_taggedReg___d165 >> 51u);
    DEF_nocPacketInQ_rw_enq_wget____d140 = INST_nocPacketInQ_rw_enq.METH_wget();
    DEF_nocPacketInQ_rw_enq_whas____d154 = INST_nocPacketInQ_rw_enq.METH_whas();
    DEF_IF_nocPacketInQ_rw_enq_whas__4_THEN_nocPacketI_ETC___d109 = DEF_nocPacketInQ_rw_enq_whas____d154 ? (tUInt64)(2199023255551llu & (DEF_nocPacketInQ_rw_enq_wget____d140 >> 2u)) : (DEF_nocPacketInQ_taggedReg_3_BIT_51___d150 ? (tUInt64)(2199023255551llu & (DEF_nocPacketInQ_taggedReg___d165 >> 2u)) : 2199023255551llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)((tUInt8)15u & (DEF_nocPacketInQ_taggedReg___d165 >> 39u))) << 4u) | (tUInt8)((tUInt8)15u & (DEF_nocPacketInQ_taggedReg___d165 >> 35u))))) << 33u) | (8589934591llu & ((((tUInt64)((tUInt32)(DEF_nocPacketInQ_taggedReg___d165 >> 3u))) << 1u) | (tUInt64)((tUInt8)((tUInt8)1u & (DEF_nocPacketInQ_taggedReg___d165 >> 2u)))))));
    INST_nocPacketInQ_pw_deq.METH_wset();
    INST_dataPacketOutQ_rw_enq.METH_wset(DEF_IF_nocPacketInQ_rw_enq_whas__4_THEN_nocPacketI_ETC___d109);
  }
  
  
  /* Methods */
  
  void MOD_mkNetConnect::METH_putDataPacket_put(tUInt64 ARG_putDataPacket_put)
  {
    PORT_EN_putDataPacket_put = (tUInt8)1u;
    DEF_WILL_FIRE_putDataPacket_put = (tUInt8)1u;
    PORT_putDataPacket_put = ARG_putDataPacket_put;
    INST_dataPacketInQ_rw_enq.METH_wset(ARG_putDataPacket_put);
  }
  
  tUInt8 MOD_mkNetConnect::METH_RDY_putDataPacket_put()
  {
    DEF_dataPacketInQ_taggedReg___d164 = INST_dataPacketInQ_taggedReg.METH_read();
    DEF_dataPacketInQ_taggedReg_7_BIT_41___d148 = (tUInt8)(DEF_dataPacketInQ_taggedReg___d164 >> 41u);
    DEF_CAN_FIRE_putDataPacket_put = !DEF_dataPacketInQ_taggedReg_7_BIT_41___d148;
    PORT_RDY_putDataPacket_put = DEF_CAN_FIRE_putDataPacket_put;
    return PORT_RDY_putDataPacket_put;
  }
  
  tUInt64 MOD_mkNetConnect::METH_getDataPacket_get()
  {
    tUInt64 DEF_IF_dataPacketOutQ_taggedReg_6_BIT_41_7_THEN_da_ETC___d117;
    PORT_EN_getDataPacket_get = (tUInt8)1u;
    DEF_WILL_FIRE_getDataPacket_get = (tUInt8)1u;
    DEF_dataPacketOutQ_rw_enq_whas____d153 = INST_dataPacketOutQ_rw_enq.METH_whas();
    DEF_dataPacketOutQ_taggedReg___d143 = INST_dataPacketOutQ_taggedReg.METH_read();
    DEF_dataPacketOutQ_taggedReg_6_BIT_41___d151 = (tUInt8)(DEF_dataPacketOutQ_taggedReg___d143 >> 41u);
    DEF_dataPacketOutQ_rw_enq_wget____d139 = INST_dataPacketOutQ_rw_enq.METH_wget();
    DEF_IF_dataPacketOutQ_taggedReg_6_BIT_41_7_THEN_da_ETC___d117 = DEF_dataPacketOutQ_taggedReg_6_BIT_41___d151 ? (tUInt64)(2199023255551llu & DEF_dataPacketOutQ_taggedReg___d143) : 2199023255551llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)((tUInt8)15u & (DEF_dataPacketOutQ_taggedReg___d143 >> 37u))) << 4u) | (tUInt8)((tUInt8)15u & (DEF_dataPacketOutQ_taggedReg___d143 >> 33u))))) << 33u) | (8589934591llu & ((((tUInt64)((tUInt32)(DEF_dataPacketOutQ_taggedReg___d143 >> 1u))) << 1u) | (tUInt64)((tUInt8)((tUInt8)1u & DEF_dataPacketOutQ_taggedReg___d143)))));
    INST_dataPacketOutQ_pw_deq.METH_wset();
    PORT_getDataPacket_get = DEF_dataPacketOutQ_rw_enq_whas____d153 ? DEF_dataPacketOutQ_rw_enq_wget____d139 : DEF_IF_dataPacketOutQ_taggedReg_6_BIT_41_7_THEN_da_ETC___d117;
    return PORT_getDataPacket_get;
  }
  
  tUInt8 MOD_mkNetConnect::METH_RDY_getDataPacket_get()
  {
    DEF_dataPacketOutQ_rw_enq_whas____d153 = INST_dataPacketOutQ_rw_enq.METH_whas();
    DEF_dataPacketOutQ_taggedReg___d143 = INST_dataPacketOutQ_taggedReg.METH_read();
    DEF_dataPacketOutQ_taggedReg_6_BIT_41___d151 = (tUInt8)(DEF_dataPacketOutQ_taggedReg___d143 >> 41u);
    DEF_CAN_FIRE_getDataPacket_get = DEF_dataPacketOutQ_taggedReg_6_BIT_41___d151 || DEF_dataPacketOutQ_rw_enq_whas____d153;
    PORT_RDY_getDataPacket_get = DEF_CAN_FIRE_getDataPacket_get;
    return PORT_RDY_getDataPacket_get;
  }
  
  void MOD_mkNetConnect::METH_putNoCPacket_put(tUInt64 ARG_putNoCPacket_put)
  {
    PORT_EN_putNoCPacket_put = (tUInt8)1u;
    DEF_WILL_FIRE_putNoCPacket_put = (tUInt8)1u;
    PORT_putNoCPacket_put = ARG_putNoCPacket_put;
    INST_nocPacketInQ_rw_enq.METH_wset(ARG_putNoCPacket_put);
  }
  
  tUInt8 MOD_mkNetConnect::METH_RDY_putNoCPacket_put()
  {
    DEF_nocPacketInQ_taggedReg___d165 = INST_nocPacketInQ_taggedReg.METH_read();
    DEF_nocPacketInQ_taggedReg_3_BIT_51___d150 = (tUInt8)(DEF_nocPacketInQ_taggedReg___d165 >> 51u);
    DEF_CAN_FIRE_putNoCPacket_put = !DEF_nocPacketInQ_taggedReg_3_BIT_51___d150;
    PORT_RDY_putNoCPacket_put = DEF_CAN_FIRE_putNoCPacket_put;
    return PORT_RDY_putNoCPacket_put;
  }
  
  tUInt64 MOD_mkNetConnect::METH_getNoCPacket_get()
  {
    tUInt64 DEF_IF_nocPacketOutQ_taggedReg_0_BIT_51_1_THEN_noc_ETC___d132;
    PORT_EN_getNoCPacket_get = (tUInt8)1u;
    DEF_WILL_FIRE_getNoCPacket_get = (tUInt8)1u;
    DEF_nocPacketOutQ_rw_enq_whas____d155 = INST_nocPacketOutQ_rw_enq.METH_whas();
    DEF_nocPacketOutQ_taggedReg___d135 = INST_nocPacketOutQ_taggedReg.METH_read();
    DEF_nocPacketOutQ_taggedReg_0_BIT_51___d149 = (tUInt8)(DEF_nocPacketOutQ_taggedReg___d135 >> 51u);
    DEF_nocPacketOutQ_rw_enq_wget____d141 = INST_nocPacketOutQ_rw_enq.METH_wget();
    DEF_IF_nocPacketOutQ_taggedReg_0_BIT_51_1_THEN_noc_ETC___d132 = DEF_nocPacketOutQ_taggedReg_0_BIT_51___d149 ? (tUInt64)(2251799813685247llu & DEF_nocPacketOutQ_taggedReg___d135) : 2251799813685247llu & (((562949953421311llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)15u & ((((tUInt8)((tUInt8)3u & (DEF_nocPacketOutQ_taggedReg___d135 >> 49u))) << 2u) | (tUInt8)((tUInt8)3u & (DEF_nocPacketOutQ_taggedReg___d135 >> 47u)))) << 4u) | ((tUInt8)15u & ((((tUInt8)((tUInt8)3u & (DEF_nocPacketOutQ_taggedReg___d135 >> 45u))) << 2u) | (tUInt8)((tUInt8)3u & (DEF_nocPacketOutQ_taggedReg___d135 >> 43u))))))) << 41u) | (2199023255551llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)((tUInt8)15u & (DEF_nocPacketOutQ_taggedReg___d135 >> 39u))) << 4u) | (tUInt8)((tUInt8)15u & (DEF_nocPacketOutQ_taggedReg___d135 >> 35u))))) << 33u) | (8589934591llu & ((((tUInt64)((tUInt32)(DEF_nocPacketOutQ_taggedReg___d135 >> 3u))) << 1u) | (tUInt64)((tUInt8)((tUInt8)1u & (DEF_nocPacketOutQ_taggedReg___d135 >> 2u))))))))) << 2u) | (tUInt64)((tUInt8)((tUInt8)3u & DEF_nocPacketOutQ_taggedReg___d135)));
    INST_nocPacketOutQ_pw_deq.METH_wset();
    PORT_getNoCPacket_get = DEF_nocPacketOutQ_rw_enq_whas____d155 ? DEF_nocPacketOutQ_rw_enq_wget____d141 : DEF_IF_nocPacketOutQ_taggedReg_0_BIT_51_1_THEN_noc_ETC___d132;
    return PORT_getNoCPacket_get;
  }
  
  tUInt8 MOD_mkNetConnect::METH_RDY_getNoCPacket_get()
  {
    DEF_nocPacketOutQ_rw_enq_whas____d155 = INST_nocPacketOutQ_rw_enq.METH_whas();
    DEF_nocPacketOutQ_taggedReg___d135 = INST_nocPacketOutQ_taggedReg.METH_read();
    DEF_nocPacketOutQ_taggedReg_0_BIT_51___d149 = (tUInt8)(DEF_nocPacketOutQ_taggedReg___d135 >> 51u);
    DEF_CAN_FIRE_getNoCPacket_get = DEF_nocPacketOutQ_taggedReg_0_BIT_51___d149 || DEF_nocPacketOutQ_rw_enq_whas____d155;
    PORT_RDY_getNoCPacket_get = DEF_CAN_FIRE_getNoCPacket_get;
    return PORT_RDY_getNoCPacket_get;
  }
  
  
  /* Reset routines */
  
  void MOD_mkNetConnect::reset_RST_N(tUInt8 ARG_rst_in)
  {
    PORT_RST_N = ARG_rst_in;
    INST_nocPacketOutQ_taggedReg.reset_RST_N(ARG_rst_in);
    INST_nocPacketInQ_taggedReg.reset_RST_N(ARG_rst_in);
    INST_dataPacketOutQ_taggedReg.reset_RST_N(ARG_rst_in);
    INST_dataPacketInQ_taggedReg.reset_RST_N(ARG_rst_in);
  }
  
  
  /* Static handles to reset routines */
  
  
  /* Functions for the parent module to register its reset fns */
  
  
  /* Functions to set the elaborated clock id */
  
  void MOD_mkNetConnect::set_clk_0(char const *s)
  {
    __clk_handle_0 = bk_get_or_define_clock(s);
  }
  
  
  /* State dumping routine */
  void MOD_mkNetConnect::dump_state(unsigned int indent)
  {
    printf("%*s%s:\n", indent, "", inst_name);
    INST_dataPacketInQ_pw_deq.dump_state(indent + 2u);
    INST_dataPacketInQ_rw_enq.dump_state(indent + 2u);
    INST_dataPacketInQ_taggedReg.dump_state(indent + 2u);
    INST_dataPacketOutQ_pw_deq.dump_state(indent + 2u);
    INST_dataPacketOutQ_rw_enq.dump_state(indent + 2u);
    INST_dataPacketOutQ_taggedReg.dump_state(indent + 2u);
    INST_nocPacketInQ_pw_deq.dump_state(indent + 2u);
    INST_nocPacketInQ_rw_enq.dump_state(indent + 2u);
    INST_nocPacketInQ_taggedReg.dump_state(indent + 2u);
    INST_nocPacketOutQ_pw_deq.dump_state(indent + 2u);
    INST_nocPacketOutQ_rw_enq.dump_state(indent + 2u);
    INST_nocPacketOutQ_taggedReg.dump_state(indent + 2u);
  }
  
  
  /* VCD dumping routines */
  
  unsigned int MOD_mkNetConnect::dump_VCD_defs(unsigned int levels)
  {
    fprintf(vcd_file, "$scope module %s $end\n", inst_name);
    vcd_num = vcd_reserve_ids(71u);
    unsigned int num = vcd_num;
    for (unsigned int hdl = 0u; hdl < bk_num_clocks(); ++hdl)
      vcd_add_clock_def(this, bk_clock_name(hdl), bk_clock_vcd_num(hdl));
    vcd_write_def(bk_clock_vcd_num(__clk_handle_0), "CLK", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_addLayer", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_dataPacketInQ_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_dataPacketInQ_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_dataPacketOutQ_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_dataPacketOutQ_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_nocPacketInQ_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_nocPacketInQ_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_nocPacketOutQ_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_nocPacketOutQ_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_removeLayer", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_getDataPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_putDataPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_putNoCPacket_put", 1u);
    vcd_write_def(num++, "RST_N", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_addLayer", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_dataPacketInQ_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_dataPacketInQ_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_dataPacketOutQ_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_dataPacketOutQ_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_nocPacketInQ_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_nocPacketInQ_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_nocPacketOutQ_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_nocPacketOutQ_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_removeLayer", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_getDataPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_putDataPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "_0_CONCAT_DONTCARE___d136", 42u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "_0_CONCAT_DONTCARE___d137", 52u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "dataPacketInQ_rw_enq_wget____d138", 41u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "dataPacketInQ_rw_enq_whas____d152", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "dataPacketInQ_taggedReg_7_BIT_41___d148", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "dataPacketInQ_taggedReg___d164", 42u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "dataPacketOutQ_rw_enq_wget____d139", 41u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "dataPacketOutQ_rw_enq_whas____d153", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "dataPacketOutQ_taggedReg_6_BIT_41___d151", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "dataPacketOutQ_taggedReg___d143", 42u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "nocPacketInQ_rw_enq_wget____d140", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "nocPacketInQ_rw_enq_whas____d154", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "nocPacketInQ_taggedReg_3_BIT_51___d150", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "nocPacketInQ_taggedReg___d165", 52u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "nocPacketOutQ_rw_enq_wget____d141", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "nocPacketOutQ_rw_enq_whas____d155", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "nocPacketOutQ_taggedReg_0_BIT_51___d149", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "nocPacketOutQ_taggedReg___d135", 52u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "EN_getDataPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "EN_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "EN_putDataPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "EN_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "RDY_getDataPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "RDY_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "RDY_putDataPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "RDY_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "getDataPacket_get", 41u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "getNoCPacket_get", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "putDataPacket_put", 41u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "putNoCPacket_put", 51u);
    num = INST_dataPacketInQ_pw_deq.dump_VCD_defs(num);
    num = INST_dataPacketInQ_rw_enq.dump_VCD_defs(num);
    num = INST_dataPacketInQ_taggedReg.dump_VCD_defs(num);
    num = INST_dataPacketOutQ_pw_deq.dump_VCD_defs(num);
    num = INST_dataPacketOutQ_rw_enq.dump_VCD_defs(num);
    num = INST_dataPacketOutQ_taggedReg.dump_VCD_defs(num);
    num = INST_nocPacketInQ_pw_deq.dump_VCD_defs(num);
    num = INST_nocPacketInQ_rw_enq.dump_VCD_defs(num);
    num = INST_nocPacketInQ_taggedReg.dump_VCD_defs(num);
    num = INST_nocPacketOutQ_pw_deq.dump_VCD_defs(num);
    num = INST_nocPacketOutQ_rw_enq.dump_VCD_defs(num);
    num = INST_nocPacketOutQ_taggedReg.dump_VCD_defs(num);
    fprintf(vcd_file, "$upscope $end\n");
    return num;
  }
  
  void MOD_mkNetConnect::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkNetConnect &backing)
  {
    vcd_defs(dt, backing);
    vcd_prims(dt, backing);
  }
  
  void MOD_mkNetConnect::vcd_defs(tVCDDumpType dt, MOD_mkNetConnect &backing)
  {
    unsigned int num = vcd_num;
    if (dt == VCD_DUMP_XS)
    {
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 42u);
      vcd_write_x(num++, 52u);
      vcd_write_x(num++, 41u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 42u);
      vcd_write_x(num++, 41u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 42u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 52u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 52u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 41u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 41u);
      vcd_write_x(num++, 51u);
    }
    else
      if (dt == VCD_DUMP_CHANGES)
      {
	if ((backing.DEF_CAN_FIRE_RL_addLayer) != DEF_CAN_FIRE_RL_addLayer)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_addLayer, 1u);
	  backing.DEF_CAN_FIRE_RL_addLayer = DEF_CAN_FIRE_RL_addLayer;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_dataPacketInQ_rule_deq) != DEF_CAN_FIRE_RL_dataPacketInQ_rule_deq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_dataPacketInQ_rule_deq, 1u);
	  backing.DEF_CAN_FIRE_RL_dataPacketInQ_rule_deq = DEF_CAN_FIRE_RL_dataPacketInQ_rule_deq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_dataPacketInQ_rule_enq) != DEF_CAN_FIRE_RL_dataPacketInQ_rule_enq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_dataPacketInQ_rule_enq, 1u);
	  backing.DEF_CAN_FIRE_RL_dataPacketInQ_rule_enq = DEF_CAN_FIRE_RL_dataPacketInQ_rule_enq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_dataPacketOutQ_rule_deq) != DEF_CAN_FIRE_RL_dataPacketOutQ_rule_deq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_dataPacketOutQ_rule_deq, 1u);
	  backing.DEF_CAN_FIRE_RL_dataPacketOutQ_rule_deq = DEF_CAN_FIRE_RL_dataPacketOutQ_rule_deq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_dataPacketOutQ_rule_enq) != DEF_CAN_FIRE_RL_dataPacketOutQ_rule_enq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_dataPacketOutQ_rule_enq, 1u);
	  backing.DEF_CAN_FIRE_RL_dataPacketOutQ_rule_enq = DEF_CAN_FIRE_RL_dataPacketOutQ_rule_enq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_nocPacketInQ_rule_deq) != DEF_CAN_FIRE_RL_nocPacketInQ_rule_deq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_nocPacketInQ_rule_deq, 1u);
	  backing.DEF_CAN_FIRE_RL_nocPacketInQ_rule_deq = DEF_CAN_FIRE_RL_nocPacketInQ_rule_deq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_nocPacketInQ_rule_enq) != DEF_CAN_FIRE_RL_nocPacketInQ_rule_enq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_nocPacketInQ_rule_enq, 1u);
	  backing.DEF_CAN_FIRE_RL_nocPacketInQ_rule_enq = DEF_CAN_FIRE_RL_nocPacketInQ_rule_enq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_nocPacketOutQ_rule_deq) != DEF_CAN_FIRE_RL_nocPacketOutQ_rule_deq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_nocPacketOutQ_rule_deq, 1u);
	  backing.DEF_CAN_FIRE_RL_nocPacketOutQ_rule_deq = DEF_CAN_FIRE_RL_nocPacketOutQ_rule_deq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_nocPacketOutQ_rule_enq) != DEF_CAN_FIRE_RL_nocPacketOutQ_rule_enq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_nocPacketOutQ_rule_enq, 1u);
	  backing.DEF_CAN_FIRE_RL_nocPacketOutQ_rule_enq = DEF_CAN_FIRE_RL_nocPacketOutQ_rule_enq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_removeLayer) != DEF_CAN_FIRE_RL_removeLayer)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_removeLayer, 1u);
	  backing.DEF_CAN_FIRE_RL_removeLayer = DEF_CAN_FIRE_RL_removeLayer;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_getDataPacket_get) != DEF_CAN_FIRE_getDataPacket_get)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_getDataPacket_get, 1u);
	  backing.DEF_CAN_FIRE_getDataPacket_get = DEF_CAN_FIRE_getDataPacket_get;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_getNoCPacket_get) != DEF_CAN_FIRE_getNoCPacket_get)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_getNoCPacket_get, 1u);
	  backing.DEF_CAN_FIRE_getNoCPacket_get = DEF_CAN_FIRE_getNoCPacket_get;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_putDataPacket_put) != DEF_CAN_FIRE_putDataPacket_put)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_putDataPacket_put, 1u);
	  backing.DEF_CAN_FIRE_putDataPacket_put = DEF_CAN_FIRE_putDataPacket_put;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_putNoCPacket_put) != DEF_CAN_FIRE_putNoCPacket_put)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_putNoCPacket_put, 1u);
	  backing.DEF_CAN_FIRE_putNoCPacket_put = DEF_CAN_FIRE_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_RST_N) != PORT_RST_N)
	{
	  vcd_write_val(num, PORT_RST_N, 1u);
	  backing.PORT_RST_N = PORT_RST_N;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_addLayer) != DEF_WILL_FIRE_RL_addLayer)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_addLayer, 1u);
	  backing.DEF_WILL_FIRE_RL_addLayer = DEF_WILL_FIRE_RL_addLayer;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_dataPacketInQ_rule_deq) != DEF_WILL_FIRE_RL_dataPacketInQ_rule_deq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_dataPacketInQ_rule_deq, 1u);
	  backing.DEF_WILL_FIRE_RL_dataPacketInQ_rule_deq = DEF_WILL_FIRE_RL_dataPacketInQ_rule_deq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_dataPacketInQ_rule_enq) != DEF_WILL_FIRE_RL_dataPacketInQ_rule_enq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_dataPacketInQ_rule_enq, 1u);
	  backing.DEF_WILL_FIRE_RL_dataPacketInQ_rule_enq = DEF_WILL_FIRE_RL_dataPacketInQ_rule_enq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_dataPacketOutQ_rule_deq) != DEF_WILL_FIRE_RL_dataPacketOutQ_rule_deq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_dataPacketOutQ_rule_deq, 1u);
	  backing.DEF_WILL_FIRE_RL_dataPacketOutQ_rule_deq = DEF_WILL_FIRE_RL_dataPacketOutQ_rule_deq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_dataPacketOutQ_rule_enq) != DEF_WILL_FIRE_RL_dataPacketOutQ_rule_enq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_dataPacketOutQ_rule_enq, 1u);
	  backing.DEF_WILL_FIRE_RL_dataPacketOutQ_rule_enq = DEF_WILL_FIRE_RL_dataPacketOutQ_rule_enq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_nocPacketInQ_rule_deq) != DEF_WILL_FIRE_RL_nocPacketInQ_rule_deq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_nocPacketInQ_rule_deq, 1u);
	  backing.DEF_WILL_FIRE_RL_nocPacketInQ_rule_deq = DEF_WILL_FIRE_RL_nocPacketInQ_rule_deq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_nocPacketInQ_rule_enq) != DEF_WILL_FIRE_RL_nocPacketInQ_rule_enq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_nocPacketInQ_rule_enq, 1u);
	  backing.DEF_WILL_FIRE_RL_nocPacketInQ_rule_enq = DEF_WILL_FIRE_RL_nocPacketInQ_rule_enq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_nocPacketOutQ_rule_deq) != DEF_WILL_FIRE_RL_nocPacketOutQ_rule_deq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_nocPacketOutQ_rule_deq, 1u);
	  backing.DEF_WILL_FIRE_RL_nocPacketOutQ_rule_deq = DEF_WILL_FIRE_RL_nocPacketOutQ_rule_deq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_nocPacketOutQ_rule_enq) != DEF_WILL_FIRE_RL_nocPacketOutQ_rule_enq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_nocPacketOutQ_rule_enq, 1u);
	  backing.DEF_WILL_FIRE_RL_nocPacketOutQ_rule_enq = DEF_WILL_FIRE_RL_nocPacketOutQ_rule_enq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_removeLayer) != DEF_WILL_FIRE_RL_removeLayer)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_removeLayer, 1u);
	  backing.DEF_WILL_FIRE_RL_removeLayer = DEF_WILL_FIRE_RL_removeLayer;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_getDataPacket_get) != DEF_WILL_FIRE_getDataPacket_get)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_getDataPacket_get, 1u);
	  backing.DEF_WILL_FIRE_getDataPacket_get = DEF_WILL_FIRE_getDataPacket_get;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_getNoCPacket_get) != DEF_WILL_FIRE_getNoCPacket_get)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_getNoCPacket_get, 1u);
	  backing.DEF_WILL_FIRE_getNoCPacket_get = DEF_WILL_FIRE_getNoCPacket_get;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_putDataPacket_put) != DEF_WILL_FIRE_putDataPacket_put)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_putDataPacket_put, 1u);
	  backing.DEF_WILL_FIRE_putDataPacket_put = DEF_WILL_FIRE_putDataPacket_put;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_putNoCPacket_put) != DEF_WILL_FIRE_putNoCPacket_put)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_putNoCPacket_put, 1u);
	  backing.DEF_WILL_FIRE_putNoCPacket_put = DEF_WILL_FIRE_putNoCPacket_put;
	}
	++num;
	if ((backing.DEF__0_CONCAT_DONTCARE___d136) != DEF__0_CONCAT_DONTCARE___d136)
	{
	  vcd_write_val(num, DEF__0_CONCAT_DONTCARE___d136, 42u);
	  backing.DEF__0_CONCAT_DONTCARE___d136 = DEF__0_CONCAT_DONTCARE___d136;
	}
	++num;
	if ((backing.DEF__0_CONCAT_DONTCARE___d137) != DEF__0_CONCAT_DONTCARE___d137)
	{
	  vcd_write_val(num, DEF__0_CONCAT_DONTCARE___d137, 52u);
	  backing.DEF__0_CONCAT_DONTCARE___d137 = DEF__0_CONCAT_DONTCARE___d137;
	}
	++num;
	if ((backing.DEF_dataPacketInQ_rw_enq_wget____d138) != DEF_dataPacketInQ_rw_enq_wget____d138)
	{
	  vcd_write_val(num, DEF_dataPacketInQ_rw_enq_wget____d138, 41u);
	  backing.DEF_dataPacketInQ_rw_enq_wget____d138 = DEF_dataPacketInQ_rw_enq_wget____d138;
	}
	++num;
	if ((backing.DEF_dataPacketInQ_rw_enq_whas____d152) != DEF_dataPacketInQ_rw_enq_whas____d152)
	{
	  vcd_write_val(num, DEF_dataPacketInQ_rw_enq_whas____d152, 1u);
	  backing.DEF_dataPacketInQ_rw_enq_whas____d152 = DEF_dataPacketInQ_rw_enq_whas____d152;
	}
	++num;
	if ((backing.DEF_dataPacketInQ_taggedReg_7_BIT_41___d148) != DEF_dataPacketInQ_taggedReg_7_BIT_41___d148)
	{
	  vcd_write_val(num, DEF_dataPacketInQ_taggedReg_7_BIT_41___d148, 1u);
	  backing.DEF_dataPacketInQ_taggedReg_7_BIT_41___d148 = DEF_dataPacketInQ_taggedReg_7_BIT_41___d148;
	}
	++num;
	if ((backing.DEF_dataPacketInQ_taggedReg___d164) != DEF_dataPacketInQ_taggedReg___d164)
	{
	  vcd_write_val(num, DEF_dataPacketInQ_taggedReg___d164, 42u);
	  backing.DEF_dataPacketInQ_taggedReg___d164 = DEF_dataPacketInQ_taggedReg___d164;
	}
	++num;
	if ((backing.DEF_dataPacketOutQ_rw_enq_wget____d139) != DEF_dataPacketOutQ_rw_enq_wget____d139)
	{
	  vcd_write_val(num, DEF_dataPacketOutQ_rw_enq_wget____d139, 41u);
	  backing.DEF_dataPacketOutQ_rw_enq_wget____d139 = DEF_dataPacketOutQ_rw_enq_wget____d139;
	}
	++num;
	if ((backing.DEF_dataPacketOutQ_rw_enq_whas____d153) != DEF_dataPacketOutQ_rw_enq_whas____d153)
	{
	  vcd_write_val(num, DEF_dataPacketOutQ_rw_enq_whas____d153, 1u);
	  backing.DEF_dataPacketOutQ_rw_enq_whas____d153 = DEF_dataPacketOutQ_rw_enq_whas____d153;
	}
	++num;
	if ((backing.DEF_dataPacketOutQ_taggedReg_6_BIT_41___d151) != DEF_dataPacketOutQ_taggedReg_6_BIT_41___d151)
	{
	  vcd_write_val(num, DEF_dataPacketOutQ_taggedReg_6_BIT_41___d151, 1u);
	  backing.DEF_dataPacketOutQ_taggedReg_6_BIT_41___d151 = DEF_dataPacketOutQ_taggedReg_6_BIT_41___d151;
	}
	++num;
	if ((backing.DEF_dataPacketOutQ_taggedReg___d143) != DEF_dataPacketOutQ_taggedReg___d143)
	{
	  vcd_write_val(num, DEF_dataPacketOutQ_taggedReg___d143, 42u);
	  backing.DEF_dataPacketOutQ_taggedReg___d143 = DEF_dataPacketOutQ_taggedReg___d143;
	}
	++num;
	if ((backing.DEF_nocPacketInQ_rw_enq_wget____d140) != DEF_nocPacketInQ_rw_enq_wget____d140)
	{
	  vcd_write_val(num, DEF_nocPacketInQ_rw_enq_wget____d140, 51u);
	  backing.DEF_nocPacketInQ_rw_enq_wget____d140 = DEF_nocPacketInQ_rw_enq_wget____d140;
	}
	++num;
	if ((backing.DEF_nocPacketInQ_rw_enq_whas____d154) != DEF_nocPacketInQ_rw_enq_whas____d154)
	{
	  vcd_write_val(num, DEF_nocPacketInQ_rw_enq_whas____d154, 1u);
	  backing.DEF_nocPacketInQ_rw_enq_whas____d154 = DEF_nocPacketInQ_rw_enq_whas____d154;
	}
	++num;
	if ((backing.DEF_nocPacketInQ_taggedReg_3_BIT_51___d150) != DEF_nocPacketInQ_taggedReg_3_BIT_51___d150)
	{
	  vcd_write_val(num, DEF_nocPacketInQ_taggedReg_3_BIT_51___d150, 1u);
	  backing.DEF_nocPacketInQ_taggedReg_3_BIT_51___d150 = DEF_nocPacketInQ_taggedReg_3_BIT_51___d150;
	}
	++num;
	if ((backing.DEF_nocPacketInQ_taggedReg___d165) != DEF_nocPacketInQ_taggedReg___d165)
	{
	  vcd_write_val(num, DEF_nocPacketInQ_taggedReg___d165, 52u);
	  backing.DEF_nocPacketInQ_taggedReg___d165 = DEF_nocPacketInQ_taggedReg___d165;
	}
	++num;
	if ((backing.DEF_nocPacketOutQ_rw_enq_wget____d141) != DEF_nocPacketOutQ_rw_enq_wget____d141)
	{
	  vcd_write_val(num, DEF_nocPacketOutQ_rw_enq_wget____d141, 51u);
	  backing.DEF_nocPacketOutQ_rw_enq_wget____d141 = DEF_nocPacketOutQ_rw_enq_wget____d141;
	}
	++num;
	if ((backing.DEF_nocPacketOutQ_rw_enq_whas____d155) != DEF_nocPacketOutQ_rw_enq_whas____d155)
	{
	  vcd_write_val(num, DEF_nocPacketOutQ_rw_enq_whas____d155, 1u);
	  backing.DEF_nocPacketOutQ_rw_enq_whas____d155 = DEF_nocPacketOutQ_rw_enq_whas____d155;
	}
	++num;
	if ((backing.DEF_nocPacketOutQ_taggedReg_0_BIT_51___d149) != DEF_nocPacketOutQ_taggedReg_0_BIT_51___d149)
	{
	  vcd_write_val(num, DEF_nocPacketOutQ_taggedReg_0_BIT_51___d149, 1u);
	  backing.DEF_nocPacketOutQ_taggedReg_0_BIT_51___d149 = DEF_nocPacketOutQ_taggedReg_0_BIT_51___d149;
	}
	++num;
	if ((backing.DEF_nocPacketOutQ_taggedReg___d135) != DEF_nocPacketOutQ_taggedReg___d135)
	{
	  vcd_write_val(num, DEF_nocPacketOutQ_taggedReg___d135, 52u);
	  backing.DEF_nocPacketOutQ_taggedReg___d135 = DEF_nocPacketOutQ_taggedReg___d135;
	}
	++num;
	if ((backing.PORT_EN_getDataPacket_get) != PORT_EN_getDataPacket_get)
	{
	  vcd_write_val(num, PORT_EN_getDataPacket_get, 1u);
	  backing.PORT_EN_getDataPacket_get = PORT_EN_getDataPacket_get;
	}
	++num;
	if ((backing.PORT_EN_getNoCPacket_get) != PORT_EN_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_EN_getNoCPacket_get, 1u);
	  backing.PORT_EN_getNoCPacket_get = PORT_EN_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_EN_putDataPacket_put) != PORT_EN_putDataPacket_put)
	{
	  vcd_write_val(num, PORT_EN_putDataPacket_put, 1u);
	  backing.PORT_EN_putDataPacket_put = PORT_EN_putDataPacket_put;
	}
	++num;
	if ((backing.PORT_EN_putNoCPacket_put) != PORT_EN_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_EN_putNoCPacket_put, 1u);
	  backing.PORT_EN_putNoCPacket_put = PORT_EN_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_RDY_getDataPacket_get) != PORT_RDY_getDataPacket_get)
	{
	  vcd_write_val(num, PORT_RDY_getDataPacket_get, 1u);
	  backing.PORT_RDY_getDataPacket_get = PORT_RDY_getDataPacket_get;
	}
	++num;
	if ((backing.PORT_RDY_getNoCPacket_get) != PORT_RDY_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_RDY_getNoCPacket_get, 1u);
	  backing.PORT_RDY_getNoCPacket_get = PORT_RDY_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_RDY_putDataPacket_put) != PORT_RDY_putDataPacket_put)
	{
	  vcd_write_val(num, PORT_RDY_putDataPacket_put, 1u);
	  backing.PORT_RDY_putDataPacket_put = PORT_RDY_putDataPacket_put;
	}
	++num;
	if ((backing.PORT_RDY_putNoCPacket_put) != PORT_RDY_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_RDY_putNoCPacket_put, 1u);
	  backing.PORT_RDY_putNoCPacket_put = PORT_RDY_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_getDataPacket_get) != PORT_getDataPacket_get)
	{
	  vcd_write_val(num, PORT_getDataPacket_get, 41u);
	  backing.PORT_getDataPacket_get = PORT_getDataPacket_get;
	}
	++num;
	if ((backing.PORT_getNoCPacket_get) != PORT_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_getNoCPacket_get, 51u);
	  backing.PORT_getNoCPacket_get = PORT_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_putDataPacket_put) != PORT_putDataPacket_put)
	{
	  vcd_write_val(num, PORT_putDataPacket_put, 41u);
	  backing.PORT_putDataPacket_put = PORT_putDataPacket_put;
	}
	++num;
	if ((backing.PORT_putNoCPacket_put) != PORT_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_putNoCPacket_put, 51u);
	  backing.PORT_putNoCPacket_put = PORT_putNoCPacket_put;
	}
	++num;
      }
      else
      {
	vcd_write_val(num++, DEF_CAN_FIRE_RL_addLayer, 1u);
	backing.DEF_CAN_FIRE_RL_addLayer = DEF_CAN_FIRE_RL_addLayer;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_dataPacketInQ_rule_deq, 1u);
	backing.DEF_CAN_FIRE_RL_dataPacketInQ_rule_deq = DEF_CAN_FIRE_RL_dataPacketInQ_rule_deq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_dataPacketInQ_rule_enq, 1u);
	backing.DEF_CAN_FIRE_RL_dataPacketInQ_rule_enq = DEF_CAN_FIRE_RL_dataPacketInQ_rule_enq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_dataPacketOutQ_rule_deq, 1u);
	backing.DEF_CAN_FIRE_RL_dataPacketOutQ_rule_deq = DEF_CAN_FIRE_RL_dataPacketOutQ_rule_deq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_dataPacketOutQ_rule_enq, 1u);
	backing.DEF_CAN_FIRE_RL_dataPacketOutQ_rule_enq = DEF_CAN_FIRE_RL_dataPacketOutQ_rule_enq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_nocPacketInQ_rule_deq, 1u);
	backing.DEF_CAN_FIRE_RL_nocPacketInQ_rule_deq = DEF_CAN_FIRE_RL_nocPacketInQ_rule_deq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_nocPacketInQ_rule_enq, 1u);
	backing.DEF_CAN_FIRE_RL_nocPacketInQ_rule_enq = DEF_CAN_FIRE_RL_nocPacketInQ_rule_enq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_nocPacketOutQ_rule_deq, 1u);
	backing.DEF_CAN_FIRE_RL_nocPacketOutQ_rule_deq = DEF_CAN_FIRE_RL_nocPacketOutQ_rule_deq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_nocPacketOutQ_rule_enq, 1u);
	backing.DEF_CAN_FIRE_RL_nocPacketOutQ_rule_enq = DEF_CAN_FIRE_RL_nocPacketOutQ_rule_enq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_removeLayer, 1u);
	backing.DEF_CAN_FIRE_RL_removeLayer = DEF_CAN_FIRE_RL_removeLayer;
	vcd_write_val(num++, DEF_CAN_FIRE_getDataPacket_get, 1u);
	backing.DEF_CAN_FIRE_getDataPacket_get = DEF_CAN_FIRE_getDataPacket_get;
	vcd_write_val(num++, DEF_CAN_FIRE_getNoCPacket_get, 1u);
	backing.DEF_CAN_FIRE_getNoCPacket_get = DEF_CAN_FIRE_getNoCPacket_get;
	vcd_write_val(num++, DEF_CAN_FIRE_putDataPacket_put, 1u);
	backing.DEF_CAN_FIRE_putDataPacket_put = DEF_CAN_FIRE_putDataPacket_put;
	vcd_write_val(num++, DEF_CAN_FIRE_putNoCPacket_put, 1u);
	backing.DEF_CAN_FIRE_putNoCPacket_put = DEF_CAN_FIRE_putNoCPacket_put;
	vcd_write_val(num++, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_addLayer, 1u);
	backing.DEF_WILL_FIRE_RL_addLayer = DEF_WILL_FIRE_RL_addLayer;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_dataPacketInQ_rule_deq, 1u);
	backing.DEF_WILL_FIRE_RL_dataPacketInQ_rule_deq = DEF_WILL_FIRE_RL_dataPacketInQ_rule_deq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_dataPacketInQ_rule_enq, 1u);
	backing.DEF_WILL_FIRE_RL_dataPacketInQ_rule_enq = DEF_WILL_FIRE_RL_dataPacketInQ_rule_enq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_dataPacketOutQ_rule_deq, 1u);
	backing.DEF_WILL_FIRE_RL_dataPacketOutQ_rule_deq = DEF_WILL_FIRE_RL_dataPacketOutQ_rule_deq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_dataPacketOutQ_rule_enq, 1u);
	backing.DEF_WILL_FIRE_RL_dataPacketOutQ_rule_enq = DEF_WILL_FIRE_RL_dataPacketOutQ_rule_enq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_nocPacketInQ_rule_deq, 1u);
	backing.DEF_WILL_FIRE_RL_nocPacketInQ_rule_deq = DEF_WILL_FIRE_RL_nocPacketInQ_rule_deq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_nocPacketInQ_rule_enq, 1u);
	backing.DEF_WILL_FIRE_RL_nocPacketInQ_rule_enq = DEF_WILL_FIRE_RL_nocPacketInQ_rule_enq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_nocPacketOutQ_rule_deq, 1u);
	backing.DEF_WILL_FIRE_RL_nocPacketOutQ_rule_deq = DEF_WILL_FIRE_RL_nocPacketOutQ_rule_deq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_nocPacketOutQ_rule_enq, 1u);
	backing.DEF_WILL_FIRE_RL_nocPacketOutQ_rule_enq = DEF_WILL_FIRE_RL_nocPacketOutQ_rule_enq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_removeLayer, 1u);
	backing.DEF_WILL_FIRE_RL_removeLayer = DEF_WILL_FIRE_RL_removeLayer;
	vcd_write_val(num++, DEF_WILL_FIRE_getDataPacket_get, 1u);
	backing.DEF_WILL_FIRE_getDataPacket_get = DEF_WILL_FIRE_getDataPacket_get;
	vcd_write_val(num++, DEF_WILL_FIRE_getNoCPacket_get, 1u);
	backing.DEF_WILL_FIRE_getNoCPacket_get = DEF_WILL_FIRE_getNoCPacket_get;
	vcd_write_val(num++, DEF_WILL_FIRE_putDataPacket_put, 1u);
	backing.DEF_WILL_FIRE_putDataPacket_put = DEF_WILL_FIRE_putDataPacket_put;
	vcd_write_val(num++, DEF_WILL_FIRE_putNoCPacket_put, 1u);
	backing.DEF_WILL_FIRE_putNoCPacket_put = DEF_WILL_FIRE_putNoCPacket_put;
	vcd_write_val(num++, DEF__0_CONCAT_DONTCARE___d136, 42u);
	backing.DEF__0_CONCAT_DONTCARE___d136 = DEF__0_CONCAT_DONTCARE___d136;
	vcd_write_val(num++, DEF__0_CONCAT_DONTCARE___d137, 52u);
	backing.DEF__0_CONCAT_DONTCARE___d137 = DEF__0_CONCAT_DONTCARE___d137;
	vcd_write_val(num++, DEF_dataPacketInQ_rw_enq_wget____d138, 41u);
	backing.DEF_dataPacketInQ_rw_enq_wget____d138 = DEF_dataPacketInQ_rw_enq_wget____d138;
	vcd_write_val(num++, DEF_dataPacketInQ_rw_enq_whas____d152, 1u);
	backing.DEF_dataPacketInQ_rw_enq_whas____d152 = DEF_dataPacketInQ_rw_enq_whas____d152;
	vcd_write_val(num++, DEF_dataPacketInQ_taggedReg_7_BIT_41___d148, 1u);
	backing.DEF_dataPacketInQ_taggedReg_7_BIT_41___d148 = DEF_dataPacketInQ_taggedReg_7_BIT_41___d148;
	vcd_write_val(num++, DEF_dataPacketInQ_taggedReg___d164, 42u);
	backing.DEF_dataPacketInQ_taggedReg___d164 = DEF_dataPacketInQ_taggedReg___d164;
	vcd_write_val(num++, DEF_dataPacketOutQ_rw_enq_wget____d139, 41u);
	backing.DEF_dataPacketOutQ_rw_enq_wget____d139 = DEF_dataPacketOutQ_rw_enq_wget____d139;
	vcd_write_val(num++, DEF_dataPacketOutQ_rw_enq_whas____d153, 1u);
	backing.DEF_dataPacketOutQ_rw_enq_whas____d153 = DEF_dataPacketOutQ_rw_enq_whas____d153;
	vcd_write_val(num++, DEF_dataPacketOutQ_taggedReg_6_BIT_41___d151, 1u);
	backing.DEF_dataPacketOutQ_taggedReg_6_BIT_41___d151 = DEF_dataPacketOutQ_taggedReg_6_BIT_41___d151;
	vcd_write_val(num++, DEF_dataPacketOutQ_taggedReg___d143, 42u);
	backing.DEF_dataPacketOutQ_taggedReg___d143 = DEF_dataPacketOutQ_taggedReg___d143;
	vcd_write_val(num++, DEF_nocPacketInQ_rw_enq_wget____d140, 51u);
	backing.DEF_nocPacketInQ_rw_enq_wget____d140 = DEF_nocPacketInQ_rw_enq_wget____d140;
	vcd_write_val(num++, DEF_nocPacketInQ_rw_enq_whas____d154, 1u);
	backing.DEF_nocPacketInQ_rw_enq_whas____d154 = DEF_nocPacketInQ_rw_enq_whas____d154;
	vcd_write_val(num++, DEF_nocPacketInQ_taggedReg_3_BIT_51___d150, 1u);
	backing.DEF_nocPacketInQ_taggedReg_3_BIT_51___d150 = DEF_nocPacketInQ_taggedReg_3_BIT_51___d150;
	vcd_write_val(num++, DEF_nocPacketInQ_taggedReg___d165, 52u);
	backing.DEF_nocPacketInQ_taggedReg___d165 = DEF_nocPacketInQ_taggedReg___d165;
	vcd_write_val(num++, DEF_nocPacketOutQ_rw_enq_wget____d141, 51u);
	backing.DEF_nocPacketOutQ_rw_enq_wget____d141 = DEF_nocPacketOutQ_rw_enq_wget____d141;
	vcd_write_val(num++, DEF_nocPacketOutQ_rw_enq_whas____d155, 1u);
	backing.DEF_nocPacketOutQ_rw_enq_whas____d155 = DEF_nocPacketOutQ_rw_enq_whas____d155;
	vcd_write_val(num++, DEF_nocPacketOutQ_taggedReg_0_BIT_51___d149, 1u);
	backing.DEF_nocPacketOutQ_taggedReg_0_BIT_51___d149 = DEF_nocPacketOutQ_taggedReg_0_BIT_51___d149;
	vcd_write_val(num++, DEF_nocPacketOutQ_taggedReg___d135, 52u);
	backing.DEF_nocPacketOutQ_taggedReg___d135 = DEF_nocPacketOutQ_taggedReg___d135;
	vcd_write_val(num++, PORT_EN_getDataPacket_get, 1u);
	backing.PORT_EN_getDataPacket_get = PORT_EN_getDataPacket_get;
	vcd_write_val(num++, PORT_EN_getNoCPacket_get, 1u);
	backing.PORT_EN_getNoCPacket_get = PORT_EN_getNoCPacket_get;
	vcd_write_val(num++, PORT_EN_putDataPacket_put, 1u);
	backing.PORT_EN_putDataPacket_put = PORT_EN_putDataPacket_put;
	vcd_write_val(num++, PORT_EN_putNoCPacket_put, 1u);
	backing.PORT_EN_putNoCPacket_put = PORT_EN_putNoCPacket_put;
	vcd_write_val(num++, PORT_RDY_getDataPacket_get, 1u);
	backing.PORT_RDY_getDataPacket_get = PORT_RDY_getDataPacket_get;
	vcd_write_val(num++, PORT_RDY_getNoCPacket_get, 1u);
	backing.PORT_RDY_getNoCPacket_get = PORT_RDY_getNoCPacket_get;
	vcd_write_val(num++, PORT_RDY_putDataPacket_put, 1u);
	backing.PORT_RDY_putDataPacket_put = PORT_RDY_putDataPacket_put;
	vcd_write_val(num++, PORT_RDY_putNoCPacket_put, 1u);
	backing.PORT_RDY_putNoCPacket_put = PORT_RDY_putNoCPacket_put;
	vcd_write_val(num++, PORT_getDataPacket_get, 41u);
	backing.PORT_getDataPacket_get = PORT_getDataPacket_get;
	vcd_write_val(num++, PORT_getNoCPacket_get, 51u);
	backing.PORT_getNoCPacket_get = PORT_getNoCPacket_get;
	vcd_write_val(num++, PORT_putDataPacket_put, 41u);
	backing.PORT_putDataPacket_put = PORT_putDataPacket_put;
	vcd_write_val(num++, PORT_putNoCPacket_put, 51u);
	backing.PORT_putNoCPacket_put = PORT_putNoCPacket_put;
      }
  }
  
  void MOD_mkNetConnect::vcd_prims(tVCDDumpType dt, MOD_mkNetConnect &backing)
  {
    INST_dataPacketInQ_pw_deq.dump_VCD(dt, backing.INST_dataPacketInQ_pw_deq);
    INST_dataPacketInQ_rw_enq.dump_VCD(dt, backing.INST_dataPacketInQ_rw_enq);
    INST_dataPacketInQ_taggedReg.dump_VCD(dt, backing.INST_dataPacketInQ_taggedReg);
    INST_dataPacketOutQ_pw_deq.dump_VCD(dt, backing.INST_dataPacketOutQ_pw_deq);
    INST_dataPacketOutQ_rw_enq.dump_VCD(dt, backing.INST_dataPacketOutQ_rw_enq);
    INST_dataPacketOutQ_taggedReg.dump_VCD(dt, backing.INST_dataPacketOutQ_taggedReg);
    INST_nocPacketInQ_pw_deq.dump_VCD(dt, backing.INST_nocPacketInQ_pw_deq);
    INST_nocPacketInQ_rw_enq.dump_VCD(dt, backing.INST_nocPacketInQ_rw_enq);
    INST_nocPacketInQ_taggedReg.dump_VCD(dt, backing.INST_nocPacketInQ_taggedReg);
    INST_nocPacketOutQ_pw_deq.dump_VCD(dt, backing.INST_nocPacketOutQ_pw_deq);
    INST_nocPacketOutQ_rw_enq.dump_VCD(dt, backing.INST_nocPacketOutQ_rw_enq);
    INST_nocPacketOutQ_taggedReg.dump_VCD(dt, backing.INST_nocPacketOutQ_taggedReg);
  }
}
