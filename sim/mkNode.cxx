/*
 * Generated by Bluespec Compiler, version 2012.01.A (build 26572, 2012-01-17)
 * 
 * On Sat Jun 28 05:29:27 IST 2014
 * 
 */
#include "bluesim_primitives.h"
#include "mkNode.h"

namespace bluesim
{
  
  /* String declarations */
  static std::string const __str_literal_2("", 0u);
  static std::string const __str_literal_10("Error: \"../src/Node.bsv\", line 103, column 27: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_routePacketNorth] and\n  [RL_routePacketEast] ) fired in the same clock cycle.\n",
					    182u);
  static std::string const __str_literal_9("Error: \"../src/Node.bsv\", line 103, column 27: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_routePacketNorth] and\n  [RL_routePacketHome] ) fired in the same clock cycle.\n",
					   182u);
  static std::string const __str_literal_12("Error: \"../src/Node.bsv\", line 103, column 27: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_routePacketNorth] and\n  [RL_routePacketSouth] ) fired in the same clock cycle.\n",
					    183u);
  static std::string const __str_literal_11("Error: \"../src/Node.bsv\", line 103, column 27: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_routePacketNorth] and\n  [RL_routePacketWest] ) fired in the same clock cycle.\n",
					    182u);
  static std::string const __str_literal_14("Error: \"../src/Node.bsv\", line 103, column 44: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_routePacketSouth] and\n  [RL_routePacketEast] ) fired in the same clock cycle.\n",
					    182u);
  static std::string const __str_literal_13("Error: \"../src/Node.bsv\", line 103, column 44: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_routePacketSouth] and\n  [RL_routePacketHome] ) fired in the same clock cycle.\n",
					    182u);
  static std::string const __str_literal_15("Error: \"../src/Node.bsv\", line 103, column 44: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_routePacketSouth] and\n  [RL_routePacketWest] ) fired in the same clock cycle.\n",
					    182u);
  static std::string const __str_literal_17("Error: \"../src/Node.bsv\", line 103, column 61: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_routePacketWest] and\n  [RL_routePacketEast] ) fired in the same clock cycle.\n",
					    181u);
  static std::string const __str_literal_16("Error: \"../src/Node.bsv\", line 103, column 61: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_routePacketWest] and\n  [RL_routePacketHome] ) fired in the same clock cycle.\n",
					    181u);
  static std::string const __str_literal_18("Error: \"../src/Node.bsv\", line 103, column 77: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_routePacketEast] and\n  [RL_routePacketHome] ) fired in the same clock cycle.\n",
					    181u);
  static std::string const __str_literal_8("Error: \"../src/Node.bsv\", line 89, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_inputArbitratei,\n  RL_inputArbitratei_1, RL_inputArbitratei_2, RL_inputArbitratei_3] and\n  [RL_inputArbitratei_4] ) fired in the same clock cycle.\n",
					   250u);
  static std::string const __str_literal_7("Error: \"../src/Node.bsv\", line 89, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_inputArbitratei,\n  RL_inputArbitratei_1, RL_inputArbitratei_2] and [RL_inputArbitratei_3] )\n  fired in the same clock cycle.\n",
					   228u);
  static std::string const __str_literal_6("Error: \"../src/Node.bsv\", line 89, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_inputArbitratei,\n  RL_inputArbitratei_1] and [RL_inputArbitratei_2] ) fired in the same clock\n  cycle.\n",
					   206u);
  static std::string const __str_literal_5("Error: \"../src/Node.bsv\", line 89, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_inputArbitratei] and\n  [RL_inputArbitratei_1] ) fired in the same clock cycle.\n",
					   182u);
  static std::string const __str_literal_1("Line2Point", 10u);
  static std::string const __str_literal_4("Packet (%d,%d) with Destination Node %d in direction %s at Node %d",
					   66u);
  static std::string const __str_literal_3("Point2Line", 10u);
  
  
  /* Constructor */
  MOD_mkNode::MOD_mkNode(char const *name,
			 Module *parent,
			 tUInt8 ARG_thisRowAddr,
			 tUInt8 ARG_thisColAddr)
    : Module(name, parent),
      __clk_handle_0(BAD_CLOCK_HANDLE),
      INST_channelInQ_0_dequeueing("channelInQ_0_dequeueing", this, 0u),
      INST_channelInQ_0_enqw("channelInQ_0_enqw", this, 51u, (tUInt8)0u),
      INST_channelInQ_0_ff("channelInQ_0_ff", this, 51u, 1u, 0u, 0u),
      INST_channelInQ_0_firstValid("channelInQ_0_firstValid", this, 1u, (tUInt8)1u),
      INST_channelInQ_1_dequeueing("channelInQ_1_dequeueing", this, 0u),
      INST_channelInQ_1_enqw("channelInQ_1_enqw", this, 51u, (tUInt8)0u),
      INST_channelInQ_1_ff("channelInQ_1_ff", this, 51u, 1u, 0u, 0u),
      INST_channelInQ_1_firstValid("channelInQ_1_firstValid", this, 1u, (tUInt8)1u),
      INST_channelInQ_2_dequeueing("channelInQ_2_dequeueing", this, 0u),
      INST_channelInQ_2_enqw("channelInQ_2_enqw", this, 51u, (tUInt8)0u),
      INST_channelInQ_2_ff("channelInQ_2_ff", this, 51u, 1u, 0u, 0u),
      INST_channelInQ_2_firstValid("channelInQ_2_firstValid", this, 1u, (tUInt8)1u),
      INST_channelInQ_3_dequeueing("channelInQ_3_dequeueing", this, 0u),
      INST_channelInQ_3_enqw("channelInQ_3_enqw", this, 51u, (tUInt8)0u),
      INST_channelInQ_3_ff("channelInQ_3_ff", this, 51u, 1u, 0u, 0u),
      INST_channelInQ_3_firstValid("channelInQ_3_firstValid", this, 1u, (tUInt8)1u),
      INST_channelInQ_4_dequeueing("channelInQ_4_dequeueing", this, 0u),
      INST_channelInQ_4_enqw("channelInQ_4_enqw", this, 51u, (tUInt8)0u),
      INST_channelInQ_4_ff("channelInQ_4_ff", this, 51u, 1u, 0u, 0u),
      INST_channelInQ_4_firstValid("channelInQ_4_firstValid", this, 1u, (tUInt8)1u),
      INST_channelOutQ_0_pw_deq("channelOutQ_0_pw_deq", this, 0u),
      INST_channelOutQ_0_rw_enq("channelOutQ_0_rw_enq", this, 51u, (tUInt8)0u),
      INST_channelOutQ_0_taggedReg("channelOutQ_0_taggedReg",
				   this,
				   52u,
				   4503599627370495llu & ((((tUInt64)((tUInt8)0u)) << 51u) | 750599937895082llu),
				   (tUInt8)0u),
      INST_channelOutQ_1_pw_deq("channelOutQ_1_pw_deq", this, 0u),
      INST_channelOutQ_1_rw_enq("channelOutQ_1_rw_enq", this, 51u, (tUInt8)0u),
      INST_channelOutQ_1_taggedReg("channelOutQ_1_taggedReg",
				   this,
				   52u,
				   4503599627370495llu & ((((tUInt64)((tUInt8)0u)) << 51u) | 750599937895082llu),
				   (tUInt8)0u),
      INST_channelOutQ_2_pw_deq("channelOutQ_2_pw_deq", this, 0u),
      INST_channelOutQ_2_rw_enq("channelOutQ_2_rw_enq", this, 51u, (tUInt8)0u),
      INST_channelOutQ_2_taggedReg("channelOutQ_2_taggedReg",
				   this,
				   52u,
				   4503599627370495llu & ((((tUInt64)((tUInt8)0u)) << 51u) | 750599937895082llu),
				   (tUInt8)0u),
      INST_channelOutQ_3_pw_deq("channelOutQ_3_pw_deq", this, 0u),
      INST_channelOutQ_3_rw_enq("channelOutQ_3_rw_enq", this, 51u, (tUInt8)0u),
      INST_channelOutQ_3_taggedReg("channelOutQ_3_taggedReg",
				   this,
				   52u,
				   4503599627370495llu & ((((tUInt64)((tUInt8)0u)) << 51u) | 750599937895082llu),
				   (tUInt8)0u),
      INST_channelOutQ_4_pw_deq("channelOutQ_4_pw_deq", this, 0u),
      INST_channelOutQ_4_rw_enq("channelOutQ_4_rw_enq", this, 51u, (tUInt8)0u),
      INST_channelOutQ_4_taggedReg("channelOutQ_4_taggedReg",
				   this,
				   52u,
				   4503599627370495llu & ((((tUInt64)((tUInt8)0u)) << 51u) | 750599937895082llu),
				   (tUInt8)0u),
      INST_inputChannelArbiter_grant_id_wire("inputChannelArbiter_grant_id_wire", this, 3u, (tUInt8)0u),
      INST_inputChannelArbiter_grant_vector("inputChannelArbiter_grant_vector", this, 5u, (tUInt8)0u),
      INST_inputChannelArbiter_priority_vector("inputChannelArbiter_priority_vector",
					       this,
					       5u,
					       (tUInt8)1u,
					       (tUInt8)0u),
      INST_inputChannelArbiter_request_vector("inputChannelArbiter_request_vector", this, 0u),
      INST_inputChannelArbiter_request_vector_1("inputChannelArbiter_request_vector_1", this, 0u),
      INST_inputChannelArbiter_request_vector_2("inputChannelArbiter_request_vector_2", this, 0u),
      INST_inputChannelArbiter_request_vector_3("inputChannelArbiter_request_vector_3", this, 0u),
      INST_inputChannelArbiter_request_vector_4("inputChannelArbiter_request_vector_4", this, 0u),
      INST_outputChannelArbiter_grant_id_wire("outputChannelArbiter_grant_id_wire", this, 3u, (tUInt8)0u),
      INST_outputChannelArbiter_grant_vector("outputChannelArbiter_grant_vector", this, 5u, (tUInt8)0u),
      INST_outputChannelArbiter_priority_vector("outputChannelArbiter_priority_vector",
						this,
						5u,
						(tUInt8)1u,
						(tUInt8)0u),
      INST_outputChannelArbiter_request_vector("outputChannelArbiter_request_vector", this, 0u),
      INST_outputChannelArbiter_request_vector_1("outputChannelArbiter_request_vector_1", this, 0u),
      INST_outputChannelArbiter_request_vector_2("outputChannelArbiter_request_vector_2", this, 0u),
      INST_outputChannelArbiter_request_vector_3("outputChannelArbiter_request_vector_3", this, 0u),
      INST_outputChannelArbiter_request_vector_4("outputChannelArbiter_request_vector_4", this, 0u),
      INST_routePacketQ("routePacketQ", this, 51u, 2u, 1u, 0u),
      PORT_RST_N((tUInt8)1u),
      PORT_thisRowAddr(ARG_thisRowAddr),
      PORT_thisColAddr(ARG_thisColAddr)
  {
    PORT_EN_channels_0_putNoCPacket_put = false;
    PORT_EN_channels_0_getNoCPacket_get = false;
    PORT_EN_channels_1_putNoCPacket_put = false;
    PORT_EN_channels_1_getNoCPacket_get = false;
    PORT_EN_channels_2_putNoCPacket_put = false;
    PORT_EN_channels_2_getNoCPacket_get = false;
    PORT_EN_channels_3_putNoCPacket_put = false;
    PORT_EN_channels_3_getNoCPacket_get = false;
    PORT_EN_channels_4_putNoCPacket_put = false;
    PORT_EN_channels_4_getNoCPacket_get = false;
    PORT_channels_0_putNoCPacket_put = 0llu;
    PORT_channels_1_putNoCPacket_put = 0llu;
    PORT_channels_2_putNoCPacket_put = 0llu;
    PORT_channels_3_putNoCPacket_put = 0llu;
    PORT_channels_4_putNoCPacket_put = 0llu;
    PORT_RDY_channels_0_putNoCPacket_put = false;
    PORT_channels_0_getNoCPacket_get = 0llu;
    PORT_RDY_channels_0_getNoCPacket_get = false;
    PORT_RDY_channels_1_putNoCPacket_put = false;
    PORT_channels_1_getNoCPacket_get = 0llu;
    PORT_RDY_channels_1_getNoCPacket_get = false;
    PORT_RDY_channels_2_putNoCPacket_put = false;
    PORT_channels_2_getNoCPacket_get = 0llu;
    PORT_RDY_channels_2_getNoCPacket_get = false;
    PORT_RDY_channels_3_putNoCPacket_put = false;
    PORT_channels_3_getNoCPacket_get = 0llu;
    PORT_RDY_channels_3_getNoCPacket_get = false;
    PORT_RDY_channels_4_putNoCPacket_put = false;
    PORT_channels_4_getNoCPacket_get = 0llu;
    PORT_RDY_channels_4_getNoCPacket_get = false;
    symbol_count = 218u;
    symbols = new tSym[symbol_count];
    init_symbols_0();
  }
  
  
  /* Symbol init fns */
  
  void MOD_mkNode::init_symbols_0()
  {
    init_symbol(&symbols[0u], "__me_check_23", SYM_RULE);
    init_symbol(&symbols[1u], "__me_check_28", SYM_RULE);
    init_symbol(&symbols[2u], "__me_check_29", SYM_RULE);
    init_symbol(&symbols[3u], "__me_check_30", SYM_RULE);
    init_symbol(&symbols[4u], "__me_check_31", SYM_RULE);
    init_symbol(&symbols[5u], "CAN_FIRE___me_check_23", SYM_DEF, &DEF_CAN_FIRE___me_check_23, 1u);
    init_symbol(&symbols[6u], "CAN_FIRE___me_check_28", SYM_DEF, &DEF_CAN_FIRE___me_check_28, 1u);
    init_symbol(&symbols[7u], "CAN_FIRE___me_check_29", SYM_DEF, &DEF_CAN_FIRE___me_check_29, 1u);
    init_symbol(&symbols[8u], "CAN_FIRE___me_check_30", SYM_DEF, &DEF_CAN_FIRE___me_check_30, 1u);
    init_symbol(&symbols[9u], "CAN_FIRE___me_check_31", SYM_DEF, &DEF_CAN_FIRE___me_check_31, 1u);
    init_symbol(&symbols[10u],
		"CAN_FIRE_channels_0_getNoCPacket_get",
		SYM_DEF,
		&DEF_CAN_FIRE_channels_0_getNoCPacket_get,
		1u);
    init_symbol(&symbols[11u],
		"CAN_FIRE_channels_0_putNoCPacket_put",
		SYM_DEF,
		&DEF_CAN_FIRE_channels_0_putNoCPacket_put,
		1u);
    init_symbol(&symbols[12u],
		"CAN_FIRE_channels_1_getNoCPacket_get",
		SYM_DEF,
		&DEF_CAN_FIRE_channels_1_getNoCPacket_get,
		1u);
    init_symbol(&symbols[13u],
		"CAN_FIRE_channels_1_putNoCPacket_put",
		SYM_DEF,
		&DEF_CAN_FIRE_channels_1_putNoCPacket_put,
		1u);
    init_symbol(&symbols[14u],
		"CAN_FIRE_channels_2_getNoCPacket_get",
		SYM_DEF,
		&DEF_CAN_FIRE_channels_2_getNoCPacket_get,
		1u);
    init_symbol(&symbols[15u],
		"CAN_FIRE_channels_2_putNoCPacket_put",
		SYM_DEF,
		&DEF_CAN_FIRE_channels_2_putNoCPacket_put,
		1u);
    init_symbol(&symbols[16u],
		"CAN_FIRE_channels_3_getNoCPacket_get",
		SYM_DEF,
		&DEF_CAN_FIRE_channels_3_getNoCPacket_get,
		1u);
    init_symbol(&symbols[17u],
		"CAN_FIRE_channels_3_putNoCPacket_put",
		SYM_DEF,
		&DEF_CAN_FIRE_channels_3_putNoCPacket_put,
		1u);
    init_symbol(&symbols[18u],
		"CAN_FIRE_channels_4_getNoCPacket_get",
		SYM_DEF,
		&DEF_CAN_FIRE_channels_4_getNoCPacket_get,
		1u);
    init_symbol(&symbols[19u],
		"CAN_FIRE_channels_4_putNoCPacket_put",
		SYM_DEF,
		&DEF_CAN_FIRE_channels_4_putNoCPacket_put,
		1u);
    init_symbol(&symbols[20u],
		"CAN_FIRE_RL_channelInQ_0_dequeue",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelInQ_0_dequeue,
		1u);
    init_symbol(&symbols[21u],
		"CAN_FIRE_RL_channelInQ_0_enqueue",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelInQ_0_enqueue,
		1u);
    init_symbol(&symbols[22u],
		"CAN_FIRE_RL_channelInQ_1_dequeue",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelInQ_1_dequeue,
		1u);
    init_symbol(&symbols[23u],
		"CAN_FIRE_RL_channelInQ_1_enqueue",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelInQ_1_enqueue,
		1u);
    init_symbol(&symbols[24u],
		"CAN_FIRE_RL_channelInQ_2_dequeue",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelInQ_2_dequeue,
		1u);
    init_symbol(&symbols[25u],
		"CAN_FIRE_RL_channelInQ_2_enqueue",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelInQ_2_enqueue,
		1u);
    init_symbol(&symbols[26u],
		"CAN_FIRE_RL_channelInQ_3_dequeue",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelInQ_3_dequeue,
		1u);
    init_symbol(&symbols[27u],
		"CAN_FIRE_RL_channelInQ_3_enqueue",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelInQ_3_enqueue,
		1u);
    init_symbol(&symbols[28u],
		"CAN_FIRE_RL_channelInQ_4_dequeue",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelInQ_4_dequeue,
		1u);
    init_symbol(&symbols[29u],
		"CAN_FIRE_RL_channelInQ_4_enqueue",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelInQ_4_enqueue,
		1u);
    init_symbol(&symbols[30u],
		"CAN_FIRE_RL_channelOutQ_0_rule_deq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelOutQ_0_rule_deq,
		1u);
    init_symbol(&symbols[31u],
		"CAN_FIRE_RL_channelOutQ_0_rule_enq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelOutQ_0_rule_enq,
		1u);
    init_symbol(&symbols[32u],
		"CAN_FIRE_RL_channelOutQ_1_rule_deq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelOutQ_1_rule_deq,
		1u);
    init_symbol(&symbols[33u],
		"CAN_FIRE_RL_channelOutQ_1_rule_enq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelOutQ_1_rule_enq,
		1u);
    init_symbol(&symbols[34u],
		"CAN_FIRE_RL_channelOutQ_2_rule_deq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelOutQ_2_rule_deq,
		1u);
    init_symbol(&symbols[35u],
		"CAN_FIRE_RL_channelOutQ_2_rule_enq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelOutQ_2_rule_enq,
		1u);
    init_symbol(&symbols[36u],
		"CAN_FIRE_RL_channelOutQ_3_rule_deq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelOutQ_3_rule_deq,
		1u);
    init_symbol(&symbols[37u],
		"CAN_FIRE_RL_channelOutQ_3_rule_enq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelOutQ_3_rule_enq,
		1u);
    init_symbol(&symbols[38u],
		"CAN_FIRE_RL_channelOutQ_4_rule_deq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelOutQ_4_rule_deq,
		1u);
    init_symbol(&symbols[39u],
		"CAN_FIRE_RL_channelOutQ_4_rule_enq",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_channelOutQ_4_rule_enq,
		1u);
    init_symbol(&symbols[40u],
		"CAN_FIRE_RL_inputArbitratei",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_inputArbitratei,
		1u);
    init_symbol(&symbols[41u],
		"CAN_FIRE_RL_inputArbitratei_1",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_inputArbitratei_1,
		1u);
    init_symbol(&symbols[42u],
		"CAN_FIRE_RL_inputArbitratei_2",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_inputArbitratei_2,
		1u);
    init_symbol(&symbols[43u],
		"CAN_FIRE_RL_inputArbitratei_3",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_inputArbitratei_3,
		1u);
    init_symbol(&symbols[44u],
		"CAN_FIRE_RL_inputArbitratei_4",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_inputArbitratei_4,
		1u);
    init_symbol(&symbols[45u],
		"CAN_FIRE_RL_inputChannelArbiter_every",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_inputChannelArbiter_every,
		1u);
    init_symbol(&symbols[46u],
		"CAN_FIRE_RL_inputChannelArbiterRequest",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_inputChannelArbiterRequest,
		1u);
    init_symbol(&symbols[47u],
		"CAN_FIRE_RL_outputChannelArbiter_every",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_outputChannelArbiter_every,
		1u);
    init_symbol(&symbols[48u],
		"CAN_FIRE_RL_routePacketEast",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_routePacketEast,
		1u);
    init_symbol(&symbols[49u],
		"CAN_FIRE_RL_routePacketHome",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_routePacketHome,
		1u);
    init_symbol(&symbols[50u],
		"CAN_FIRE_RL_routePacketNorth",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_routePacketNorth,
		1u);
    init_symbol(&symbols[51u],
		"CAN_FIRE_RL_routePacketSouth",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_routePacketSouth,
		1u);
    init_symbol(&symbols[52u],
		"CAN_FIRE_RL_routePacketWest",
		SYM_DEF,
		&DEF_CAN_FIRE_RL_routePacketWest,
		1u);
    init_symbol(&symbols[53u], "channelInQ_0_dequeueing", SYM_MODULE, &INST_channelInQ_0_dequeueing);
    init_symbol(&symbols[54u], "channelInQ_0_enqw", SYM_MODULE, &INST_channelInQ_0_enqw);
    init_symbol(&symbols[55u], "channelInQ_0_ff", SYM_MODULE, &INST_channelInQ_0_ff);
    init_symbol(&symbols[56u], "channelInQ_0_firstValid", SYM_MODULE, &INST_channelInQ_0_firstValid);
    init_symbol(&symbols[57u], "channelInQ_1_dequeueing", SYM_MODULE, &INST_channelInQ_1_dequeueing);
    init_symbol(&symbols[58u], "channelInQ_1_enqw", SYM_MODULE, &INST_channelInQ_1_enqw);
    init_symbol(&symbols[59u], "channelInQ_1_ff", SYM_MODULE, &INST_channelInQ_1_ff);
    init_symbol(&symbols[60u], "channelInQ_1_firstValid", SYM_MODULE, &INST_channelInQ_1_firstValid);
    init_symbol(&symbols[61u], "channelInQ_2_dequeueing", SYM_MODULE, &INST_channelInQ_2_dequeueing);
    init_symbol(&symbols[62u], "channelInQ_2_enqw", SYM_MODULE, &INST_channelInQ_2_enqw);
    init_symbol(&symbols[63u], "channelInQ_2_ff", SYM_MODULE, &INST_channelInQ_2_ff);
    init_symbol(&symbols[64u], "channelInQ_2_firstValid", SYM_MODULE, &INST_channelInQ_2_firstValid);
    init_symbol(&symbols[65u], "channelInQ_3_dequeueing", SYM_MODULE, &INST_channelInQ_3_dequeueing);
    init_symbol(&symbols[66u], "channelInQ_3_enqw", SYM_MODULE, &INST_channelInQ_3_enqw);
    init_symbol(&symbols[67u], "channelInQ_3_ff", SYM_MODULE, &INST_channelInQ_3_ff);
    init_symbol(&symbols[68u], "channelInQ_3_firstValid", SYM_MODULE, &INST_channelInQ_3_firstValid);
    init_symbol(&symbols[69u], "channelInQ_4_dequeueing", SYM_MODULE, &INST_channelInQ_4_dequeueing);
    init_symbol(&symbols[70u], "channelInQ_4_enqw", SYM_MODULE, &INST_channelInQ_4_enqw);
    init_symbol(&symbols[71u], "channelInQ_4_ff", SYM_MODULE, &INST_channelInQ_4_ff);
    init_symbol(&symbols[72u], "channelInQ_4_firstValid", SYM_MODULE, &INST_channelInQ_4_firstValid);
    init_symbol(&symbols[73u], "channelOutQ_0_pw_deq", SYM_MODULE, &INST_channelOutQ_0_pw_deq);
    init_symbol(&symbols[74u], "channelOutQ_0_rw_enq", SYM_MODULE, &INST_channelOutQ_0_rw_enq);
    init_symbol(&symbols[75u], "channelOutQ_0_taggedReg", SYM_MODULE, &INST_channelOutQ_0_taggedReg);
    init_symbol(&symbols[76u], "channelOutQ_1_pw_deq", SYM_MODULE, &INST_channelOutQ_1_pw_deq);
    init_symbol(&symbols[77u], "channelOutQ_1_rw_enq", SYM_MODULE, &INST_channelOutQ_1_rw_enq);
    init_symbol(&symbols[78u], "channelOutQ_1_taggedReg", SYM_MODULE, &INST_channelOutQ_1_taggedReg);
    init_symbol(&symbols[79u], "channelOutQ_2_pw_deq", SYM_MODULE, &INST_channelOutQ_2_pw_deq);
    init_symbol(&symbols[80u], "channelOutQ_2_rw_enq", SYM_MODULE, &INST_channelOutQ_2_rw_enq);
    init_symbol(&symbols[81u], "channelOutQ_2_taggedReg", SYM_MODULE, &INST_channelOutQ_2_taggedReg);
    init_symbol(&symbols[82u], "channelOutQ_3_pw_deq", SYM_MODULE, &INST_channelOutQ_3_pw_deq);
    init_symbol(&symbols[83u], "channelOutQ_3_rw_enq", SYM_MODULE, &INST_channelOutQ_3_rw_enq);
    init_symbol(&symbols[84u], "channelOutQ_3_taggedReg", SYM_MODULE, &INST_channelOutQ_3_taggedReg);
    init_symbol(&symbols[85u], "channelOutQ_4_pw_deq", SYM_MODULE, &INST_channelOutQ_4_pw_deq);
    init_symbol(&symbols[86u], "channelOutQ_4_rw_enq", SYM_MODULE, &INST_channelOutQ_4_rw_enq);
    init_symbol(&symbols[87u], "channelOutQ_4_taggedReg", SYM_MODULE, &INST_channelOutQ_4_taggedReg);
    init_symbol(&symbols[88u],
		"channels_0_getNoCPacket_get",
		SYM_PORT,
		&PORT_channels_0_getNoCPacket_get,
		51u);
    init_symbol(&symbols[89u],
		"channels_0_putNoCPacket_put",
		SYM_PORT,
		&PORT_channels_0_putNoCPacket_put,
		51u);
    init_symbol(&symbols[90u],
		"channels_1_getNoCPacket_get",
		SYM_PORT,
		&PORT_channels_1_getNoCPacket_get,
		51u);
    init_symbol(&symbols[91u],
		"channels_1_putNoCPacket_put",
		SYM_PORT,
		&PORT_channels_1_putNoCPacket_put,
		51u);
    init_symbol(&symbols[92u],
		"channels_2_getNoCPacket_get",
		SYM_PORT,
		&PORT_channels_2_getNoCPacket_get,
		51u);
    init_symbol(&symbols[93u],
		"channels_2_putNoCPacket_put",
		SYM_PORT,
		&PORT_channels_2_putNoCPacket_put,
		51u);
    init_symbol(&symbols[94u],
		"channels_3_getNoCPacket_get",
		SYM_PORT,
		&PORT_channels_3_getNoCPacket_get,
		51u);
    init_symbol(&symbols[95u],
		"channels_3_putNoCPacket_put",
		SYM_PORT,
		&PORT_channels_3_putNoCPacket_put,
		51u);
    init_symbol(&symbols[96u],
		"channels_4_getNoCPacket_get",
		SYM_PORT,
		&PORT_channels_4_getNoCPacket_get,
		51u);
    init_symbol(&symbols[97u],
		"channels_4_putNoCPacket_put",
		SYM_PORT,
		&PORT_channels_4_putNoCPacket_put,
		51u);
    init_symbol(&symbols[98u],
		"EN_channels_0_getNoCPacket_get",
		SYM_PORT,
		&PORT_EN_channels_0_getNoCPacket_get,
		1u);
    init_symbol(&symbols[99u],
		"EN_channels_0_putNoCPacket_put",
		SYM_PORT,
		&PORT_EN_channels_0_putNoCPacket_put,
		1u);
    init_symbol(&symbols[100u],
		"EN_channels_1_getNoCPacket_get",
		SYM_PORT,
		&PORT_EN_channels_1_getNoCPacket_get,
		1u);
    init_symbol(&symbols[101u],
		"EN_channels_1_putNoCPacket_put",
		SYM_PORT,
		&PORT_EN_channels_1_putNoCPacket_put,
		1u);
    init_symbol(&symbols[102u],
		"EN_channels_2_getNoCPacket_get",
		SYM_PORT,
		&PORT_EN_channels_2_getNoCPacket_get,
		1u);
    init_symbol(&symbols[103u],
		"EN_channels_2_putNoCPacket_put",
		SYM_PORT,
		&PORT_EN_channels_2_putNoCPacket_put,
		1u);
    init_symbol(&symbols[104u],
		"EN_channels_3_getNoCPacket_get",
		SYM_PORT,
		&PORT_EN_channels_3_getNoCPacket_get,
		1u);
    init_symbol(&symbols[105u],
		"EN_channels_3_putNoCPacket_put",
		SYM_PORT,
		&PORT_EN_channels_3_putNoCPacket_put,
		1u);
    init_symbol(&symbols[106u],
		"EN_channels_4_getNoCPacket_get",
		SYM_PORT,
		&PORT_EN_channels_4_getNoCPacket_get,
		1u);
    init_symbol(&symbols[107u],
		"EN_channels_4_putNoCPacket_put",
		SYM_PORT,
		&PORT_EN_channels_4_putNoCPacket_put,
		1u);
    init_symbol(&symbols[108u],
		"inputChannelArbiter_grant_id_wire",
		SYM_MODULE,
		&INST_inputChannelArbiter_grant_id_wire);
    init_symbol(&symbols[109u],
		"inputChannelArbiter_grant_vector",
		SYM_MODULE,
		&INST_inputChannelArbiter_grant_vector);
    init_symbol(&symbols[110u],
		"inputChannelArbiter_priority_vector",
		SYM_MODULE,
		&INST_inputChannelArbiter_priority_vector);
    init_symbol(&symbols[111u],
		"inputChannelArbiter_request_vector",
		SYM_MODULE,
		&INST_inputChannelArbiter_request_vector);
    init_symbol(&symbols[112u],
		"inputChannelArbiter_request_vector_1",
		SYM_MODULE,
		&INST_inputChannelArbiter_request_vector_1);
    init_symbol(&symbols[113u],
		"inputChannelArbiter_request_vector_2",
		SYM_MODULE,
		&INST_inputChannelArbiter_request_vector_2);
    init_symbol(&symbols[114u],
		"inputChannelArbiter_request_vector_3",
		SYM_MODULE,
		&INST_inputChannelArbiter_request_vector_3);
    init_symbol(&symbols[115u],
		"inputChannelArbiter_request_vector_4",
		SYM_MODULE,
		&INST_inputChannelArbiter_request_vector_4);
    init_symbol(&symbols[116u],
		"outputChannelArbiter_grant_id_wire",
		SYM_MODULE,
		&INST_outputChannelArbiter_grant_id_wire);
    init_symbol(&symbols[117u],
		"outputChannelArbiter_grant_vector",
		SYM_MODULE,
		&INST_outputChannelArbiter_grant_vector);
    init_symbol(&symbols[118u],
		"outputChannelArbiter_priority_vector",
		SYM_MODULE,
		&INST_outputChannelArbiter_priority_vector);
    init_symbol(&symbols[119u],
		"outputChannelArbiter_request_vector",
		SYM_MODULE,
		&INST_outputChannelArbiter_request_vector);
    init_symbol(&symbols[120u],
		"outputChannelArbiter_request_vector_1",
		SYM_MODULE,
		&INST_outputChannelArbiter_request_vector_1);
    init_symbol(&symbols[121u],
		"outputChannelArbiter_request_vector_2",
		SYM_MODULE,
		&INST_outputChannelArbiter_request_vector_2);
    init_symbol(&symbols[122u],
		"outputChannelArbiter_request_vector_3",
		SYM_MODULE,
		&INST_outputChannelArbiter_request_vector_3);
    init_symbol(&symbols[123u],
		"outputChannelArbiter_request_vector_4",
		SYM_MODULE,
		&INST_outputChannelArbiter_request_vector_4);
    init_symbol(&symbols[124u],
		"RDY_channels_0_getNoCPacket_get",
		SYM_PORT,
		&PORT_RDY_channels_0_getNoCPacket_get,
		1u);
    init_symbol(&symbols[125u],
		"RDY_channels_0_putNoCPacket_put",
		SYM_PORT,
		&PORT_RDY_channels_0_putNoCPacket_put,
		1u);
    init_symbol(&symbols[126u],
		"RDY_channels_1_getNoCPacket_get",
		SYM_PORT,
		&PORT_RDY_channels_1_getNoCPacket_get,
		1u);
    init_symbol(&symbols[127u],
		"RDY_channels_1_putNoCPacket_put",
		SYM_PORT,
		&PORT_RDY_channels_1_putNoCPacket_put,
		1u);
    init_symbol(&symbols[128u],
		"RDY_channels_2_getNoCPacket_get",
		SYM_PORT,
		&PORT_RDY_channels_2_getNoCPacket_get,
		1u);
    init_symbol(&symbols[129u],
		"RDY_channels_2_putNoCPacket_put",
		SYM_PORT,
		&PORT_RDY_channels_2_putNoCPacket_put,
		1u);
    init_symbol(&symbols[130u],
		"RDY_channels_3_getNoCPacket_get",
		SYM_PORT,
		&PORT_RDY_channels_3_getNoCPacket_get,
		1u);
    init_symbol(&symbols[131u],
		"RDY_channels_3_putNoCPacket_put",
		SYM_PORT,
		&PORT_RDY_channels_3_putNoCPacket_put,
		1u);
    init_symbol(&symbols[132u],
		"RDY_channels_4_getNoCPacket_get",
		SYM_PORT,
		&PORT_RDY_channels_4_getNoCPacket_get,
		1u);
    init_symbol(&symbols[133u],
		"RDY_channels_4_putNoCPacket_put",
		SYM_PORT,
		&PORT_RDY_channels_4_putNoCPacket_put,
		1u);
    init_symbol(&symbols[134u], "RL_channelInQ_0_dequeue", SYM_RULE);
    init_symbol(&symbols[135u], "RL_channelInQ_0_enqueue", SYM_RULE);
    init_symbol(&symbols[136u], "RL_channelInQ_1_dequeue", SYM_RULE);
    init_symbol(&symbols[137u], "RL_channelInQ_1_enqueue", SYM_RULE);
    init_symbol(&symbols[138u], "RL_channelInQ_2_dequeue", SYM_RULE);
    init_symbol(&symbols[139u], "RL_channelInQ_2_enqueue", SYM_RULE);
    init_symbol(&symbols[140u], "RL_channelInQ_3_dequeue", SYM_RULE);
    init_symbol(&symbols[141u], "RL_channelInQ_3_enqueue", SYM_RULE);
    init_symbol(&symbols[142u], "RL_channelInQ_4_dequeue", SYM_RULE);
    init_symbol(&symbols[143u], "RL_channelInQ_4_enqueue", SYM_RULE);
    init_symbol(&symbols[144u], "RL_channelOutQ_0_rule_deq", SYM_RULE);
    init_symbol(&symbols[145u], "RL_channelOutQ_0_rule_enq", SYM_RULE);
    init_symbol(&symbols[146u], "RL_channelOutQ_1_rule_deq", SYM_RULE);
    init_symbol(&symbols[147u], "RL_channelOutQ_1_rule_enq", SYM_RULE);
    init_symbol(&symbols[148u], "RL_channelOutQ_2_rule_deq", SYM_RULE);
    init_symbol(&symbols[149u], "RL_channelOutQ_2_rule_enq", SYM_RULE);
    init_symbol(&symbols[150u], "RL_channelOutQ_3_rule_deq", SYM_RULE);
    init_symbol(&symbols[151u], "RL_channelOutQ_3_rule_enq", SYM_RULE);
    init_symbol(&symbols[152u], "RL_channelOutQ_4_rule_deq", SYM_RULE);
    init_symbol(&symbols[153u], "RL_channelOutQ_4_rule_enq", SYM_RULE);
    init_symbol(&symbols[154u], "RL_inputArbitratei", SYM_RULE);
    init_symbol(&symbols[155u], "RL_inputArbitratei_1", SYM_RULE);
    init_symbol(&symbols[156u], "RL_inputArbitratei_2", SYM_RULE);
    init_symbol(&symbols[157u], "RL_inputArbitratei_3", SYM_RULE);
    init_symbol(&symbols[158u], "RL_inputArbitratei_4", SYM_RULE);
    init_symbol(&symbols[159u], "RL_inputChannelArbiter_every", SYM_RULE);
    init_symbol(&symbols[160u], "RL_inputChannelArbiterRequest", SYM_RULE);
    init_symbol(&symbols[161u], "RL_outputChannelArbiter_every", SYM_RULE);
    init_symbol(&symbols[162u], "RL_routePacketEast", SYM_RULE);
    init_symbol(&symbols[163u], "RL_routePacketHome", SYM_RULE);
    init_symbol(&symbols[164u], "RL_routePacketNorth", SYM_RULE);
    init_symbol(&symbols[165u], "RL_routePacketSouth", SYM_RULE);
    init_symbol(&symbols[166u], "RL_routePacketWest", SYM_RULE);
    init_symbol(&symbols[167u], "routePacketQ", SYM_MODULE, &INST_routePacketQ);
    init_symbol(&symbols[168u], "thisColAddr", SYM_PORT, &PORT_thisColAddr, 2u);
    init_symbol(&symbols[169u], "thisRowAddr", SYM_PORT, &PORT_thisRowAddr, 2u);
    init_symbol(&symbols[170u], "WILL_FIRE___me_check_23", SYM_DEF, &DEF_WILL_FIRE___me_check_23, 1u);
    init_symbol(&symbols[171u], "WILL_FIRE___me_check_28", SYM_DEF, &DEF_WILL_FIRE___me_check_28, 1u);
    init_symbol(&symbols[172u], "WILL_FIRE___me_check_29", SYM_DEF, &DEF_WILL_FIRE___me_check_29, 1u);
    init_symbol(&symbols[173u], "WILL_FIRE___me_check_30", SYM_DEF, &DEF_WILL_FIRE___me_check_30, 1u);
    init_symbol(&symbols[174u], "WILL_FIRE___me_check_31", SYM_DEF, &DEF_WILL_FIRE___me_check_31, 1u);
    init_symbol(&symbols[175u],
		"WILL_FIRE_channels_0_getNoCPacket_get",
		SYM_DEF,
		&DEF_WILL_FIRE_channels_0_getNoCPacket_get,
		1u);
    init_symbol(&symbols[176u],
		"WILL_FIRE_channels_0_putNoCPacket_put",
		SYM_DEF,
		&DEF_WILL_FIRE_channels_0_putNoCPacket_put,
		1u);
    init_symbol(&symbols[177u],
		"WILL_FIRE_channels_1_getNoCPacket_get",
		SYM_DEF,
		&DEF_WILL_FIRE_channels_1_getNoCPacket_get,
		1u);
    init_symbol(&symbols[178u],
		"WILL_FIRE_channels_1_putNoCPacket_put",
		SYM_DEF,
		&DEF_WILL_FIRE_channels_1_putNoCPacket_put,
		1u);
    init_symbol(&symbols[179u],
		"WILL_FIRE_channels_2_getNoCPacket_get",
		SYM_DEF,
		&DEF_WILL_FIRE_channels_2_getNoCPacket_get,
		1u);
    init_symbol(&symbols[180u],
		"WILL_FIRE_channels_2_putNoCPacket_put",
		SYM_DEF,
		&DEF_WILL_FIRE_channels_2_putNoCPacket_put,
		1u);
    init_symbol(&symbols[181u],
		"WILL_FIRE_channels_3_getNoCPacket_get",
		SYM_DEF,
		&DEF_WILL_FIRE_channels_3_getNoCPacket_get,
		1u);
    init_symbol(&symbols[182u],
		"WILL_FIRE_channels_3_putNoCPacket_put",
		SYM_DEF,
		&DEF_WILL_FIRE_channels_3_putNoCPacket_put,
		1u);
    init_symbol(&symbols[183u],
		"WILL_FIRE_channels_4_getNoCPacket_get",
		SYM_DEF,
		&DEF_WILL_FIRE_channels_4_getNoCPacket_get,
		1u);
    init_symbol(&symbols[184u],
		"WILL_FIRE_channels_4_putNoCPacket_put",
		SYM_DEF,
		&DEF_WILL_FIRE_channels_4_putNoCPacket_put,
		1u);
    init_symbol(&symbols[185u],
		"WILL_FIRE_RL_channelInQ_0_dequeue",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelInQ_0_dequeue,
		1u);
    init_symbol(&symbols[186u],
		"WILL_FIRE_RL_channelInQ_0_enqueue",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelInQ_0_enqueue,
		1u);
    init_symbol(&symbols[187u],
		"WILL_FIRE_RL_channelInQ_1_dequeue",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelInQ_1_dequeue,
		1u);
    init_symbol(&symbols[188u],
		"WILL_FIRE_RL_channelInQ_1_enqueue",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelInQ_1_enqueue,
		1u);
    init_symbol(&symbols[189u],
		"WILL_FIRE_RL_channelInQ_2_dequeue",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelInQ_2_dequeue,
		1u);
    init_symbol(&symbols[190u],
		"WILL_FIRE_RL_channelInQ_2_enqueue",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelInQ_2_enqueue,
		1u);
    init_symbol(&symbols[191u],
		"WILL_FIRE_RL_channelInQ_3_dequeue",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelInQ_3_dequeue,
		1u);
    init_symbol(&symbols[192u],
		"WILL_FIRE_RL_channelInQ_3_enqueue",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelInQ_3_enqueue,
		1u);
    init_symbol(&symbols[193u],
		"WILL_FIRE_RL_channelInQ_4_dequeue",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelInQ_4_dequeue,
		1u);
    init_symbol(&symbols[194u],
		"WILL_FIRE_RL_channelInQ_4_enqueue",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelInQ_4_enqueue,
		1u);
    init_symbol(&symbols[195u],
		"WILL_FIRE_RL_channelOutQ_0_rule_deq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelOutQ_0_rule_deq,
		1u);
    init_symbol(&symbols[196u],
		"WILL_FIRE_RL_channelOutQ_0_rule_enq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelOutQ_0_rule_enq,
		1u);
    init_symbol(&symbols[197u],
		"WILL_FIRE_RL_channelOutQ_1_rule_deq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelOutQ_1_rule_deq,
		1u);
    init_symbol(&symbols[198u],
		"WILL_FIRE_RL_channelOutQ_1_rule_enq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelOutQ_1_rule_enq,
		1u);
    init_symbol(&symbols[199u],
		"WILL_FIRE_RL_channelOutQ_2_rule_deq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelOutQ_2_rule_deq,
		1u);
    init_symbol(&symbols[200u],
		"WILL_FIRE_RL_channelOutQ_2_rule_enq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelOutQ_2_rule_enq,
		1u);
    init_symbol(&symbols[201u],
		"WILL_FIRE_RL_channelOutQ_3_rule_deq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelOutQ_3_rule_deq,
		1u);
    init_symbol(&symbols[202u],
		"WILL_FIRE_RL_channelOutQ_3_rule_enq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelOutQ_3_rule_enq,
		1u);
    init_symbol(&symbols[203u],
		"WILL_FIRE_RL_channelOutQ_4_rule_deq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelOutQ_4_rule_deq,
		1u);
    init_symbol(&symbols[204u],
		"WILL_FIRE_RL_channelOutQ_4_rule_enq",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_channelOutQ_4_rule_enq,
		1u);
    init_symbol(&symbols[205u],
		"WILL_FIRE_RL_inputArbitratei",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_inputArbitratei,
		1u);
    init_symbol(&symbols[206u],
		"WILL_FIRE_RL_inputArbitratei_1",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_inputArbitratei_1,
		1u);
    init_symbol(&symbols[207u],
		"WILL_FIRE_RL_inputArbitratei_2",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_inputArbitratei_2,
		1u);
    init_symbol(&symbols[208u],
		"WILL_FIRE_RL_inputArbitratei_3",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_inputArbitratei_3,
		1u);
    init_symbol(&symbols[209u],
		"WILL_FIRE_RL_inputArbitratei_4",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_inputArbitratei_4,
		1u);
    init_symbol(&symbols[210u],
		"WILL_FIRE_RL_inputChannelArbiter_every",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_inputChannelArbiter_every,
		1u);
    init_symbol(&symbols[211u],
		"WILL_FIRE_RL_inputChannelArbiterRequest",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_inputChannelArbiterRequest,
		1u);
    init_symbol(&symbols[212u],
		"WILL_FIRE_RL_outputChannelArbiter_every",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_outputChannelArbiter_every,
		1u);
    init_symbol(&symbols[213u],
		"WILL_FIRE_RL_routePacketEast",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_routePacketEast,
		1u);
    init_symbol(&symbols[214u],
		"WILL_FIRE_RL_routePacketHome",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_routePacketHome,
		1u);
    init_symbol(&symbols[215u],
		"WILL_FIRE_RL_routePacketNorth",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_routePacketNorth,
		1u);
    init_symbol(&symbols[216u],
		"WILL_FIRE_RL_routePacketSouth",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_routePacketSouth,
		1u);
    init_symbol(&symbols[217u],
		"WILL_FIRE_RL_routePacketWest",
		SYM_DEF,
		&DEF_WILL_FIRE_RL_routePacketWest,
		1u);
  }
  
  
  /* Rule actions */
  
  void MOD_mkNode::RL_channelInQ_0_enqueue()
  {
    DEF_channelInQ_0_enqw_wget____d819 = INST_channelInQ_0_enqw.METH_wget();
    INST_channelInQ_0_ff.METH_enq(DEF_channelInQ_0_enqw_wget____d819);
  }
  
  void MOD_mkNode::RL_channelInQ_0_dequeue()
  {
    INST_channelInQ_0_ff.METH_deq();
  }
  
  void MOD_mkNode::RL_channelOutQ_0_rule_enq()
  {
    tUInt64 DEF__1_CONCAT_channelOutQ_0_rw_enq_wget__3___d14;
    DEF_channelOutQ_0_rw_enq_wget____d645 = INST_channelOutQ_0_rw_enq.METH_wget();
    DEF__1_CONCAT_channelOutQ_0_rw_enq_wget__3___d14 = 4503599627370495llu & ((((tUInt64)((tUInt8)1u)) << 51u) | DEF_channelOutQ_0_rw_enq_wget____d645);
    INST_channelOutQ_0_taggedReg.METH_write(DEF__1_CONCAT_channelOutQ_0_rw_enq_wget__3___d14);
  }
  
  void MOD_mkNode::RL_channelOutQ_0_rule_deq()
  {
    DEF__0_CONCAT_DONTCARE___d644 = 4503599627370495llu & ((((tUInt64)((tUInt8)0u)) << 51u) | 750599937895082llu);
    INST_channelOutQ_0_taggedReg.METH_write(DEF__0_CONCAT_DONTCARE___d644);
  }
  
  void MOD_mkNode::RL_channelInQ_1_enqueue()
  {
    DEF_channelInQ_1_enqw_wget____d820 = INST_channelInQ_1_enqw.METH_wget();
    INST_channelInQ_1_ff.METH_enq(DEF_channelInQ_1_enqw_wget____d820);
  }
  
  void MOD_mkNode::RL_channelInQ_1_dequeue()
  {
    INST_channelInQ_1_ff.METH_deq();
  }
  
  void MOD_mkNode::RL_channelOutQ_1_rule_enq()
  {
    tUInt64 DEF__1_CONCAT_channelOutQ_1_rw_enq_wget__8___d29;
    DEF_channelOutQ_1_rw_enq_wget____d646 = INST_channelOutQ_1_rw_enq.METH_wget();
    DEF__1_CONCAT_channelOutQ_1_rw_enq_wget__8___d29 = 4503599627370495llu & ((((tUInt64)((tUInt8)1u)) << 51u) | DEF_channelOutQ_1_rw_enq_wget____d646);
    INST_channelOutQ_1_taggedReg.METH_write(DEF__1_CONCAT_channelOutQ_1_rw_enq_wget__8___d29);
  }
  
  void MOD_mkNode::RL_channelOutQ_1_rule_deq()
  {
    DEF__0_CONCAT_DONTCARE___d644 = 4503599627370495llu & ((((tUInt64)((tUInt8)0u)) << 51u) | 750599937895082llu);
    INST_channelOutQ_1_taggedReg.METH_write(DEF__0_CONCAT_DONTCARE___d644);
  }
  
  void MOD_mkNode::RL_channelInQ_2_enqueue()
  {
    DEF_channelInQ_2_enqw_wget____d821 = INST_channelInQ_2_enqw.METH_wget();
    INST_channelInQ_2_ff.METH_enq(DEF_channelInQ_2_enqw_wget____d821);
  }
  
  void MOD_mkNode::RL_channelInQ_2_dequeue()
  {
    INST_channelInQ_2_ff.METH_deq();
  }
  
  void MOD_mkNode::RL_channelOutQ_2_rule_enq()
  {
    tUInt64 DEF__1_CONCAT_channelOutQ_2_rw_enq_wget__2___d43;
    DEF_channelOutQ_2_rw_enq_wget____d647 = INST_channelOutQ_2_rw_enq.METH_wget();
    DEF__1_CONCAT_channelOutQ_2_rw_enq_wget__2___d43 = 4503599627370495llu & ((((tUInt64)((tUInt8)1u)) << 51u) | DEF_channelOutQ_2_rw_enq_wget____d647);
    INST_channelOutQ_2_taggedReg.METH_write(DEF__1_CONCAT_channelOutQ_2_rw_enq_wget__2___d43);
  }
  
  void MOD_mkNode::RL_channelOutQ_2_rule_deq()
  {
    DEF__0_CONCAT_DONTCARE___d644 = 4503599627370495llu & ((((tUInt64)((tUInt8)0u)) << 51u) | 750599937895082llu);
    INST_channelOutQ_2_taggedReg.METH_write(DEF__0_CONCAT_DONTCARE___d644);
  }
  
  void MOD_mkNode::RL_channelInQ_3_enqueue()
  {
    DEF_channelInQ_3_enqw_wget____d822 = INST_channelInQ_3_enqw.METH_wget();
    INST_channelInQ_3_ff.METH_enq(DEF_channelInQ_3_enqw_wget____d822);
  }
  
  void MOD_mkNode::RL_channelInQ_3_dequeue()
  {
    INST_channelInQ_3_ff.METH_deq();
  }
  
  void MOD_mkNode::RL_channelOutQ_3_rule_enq()
  {
    tUInt64 DEF__1_CONCAT_channelOutQ_3_rw_enq_wget__6___d57;
    DEF_channelOutQ_3_rw_enq_wget____d648 = INST_channelOutQ_3_rw_enq.METH_wget();
    DEF__1_CONCAT_channelOutQ_3_rw_enq_wget__6___d57 = 4503599627370495llu & ((((tUInt64)((tUInt8)1u)) << 51u) | DEF_channelOutQ_3_rw_enq_wget____d648);
    INST_channelOutQ_3_taggedReg.METH_write(DEF__1_CONCAT_channelOutQ_3_rw_enq_wget__6___d57);
  }
  
  void MOD_mkNode::RL_channelOutQ_3_rule_deq()
  {
    DEF__0_CONCAT_DONTCARE___d644 = 4503599627370495llu & ((((tUInt64)((tUInt8)0u)) << 51u) | 750599937895082llu);
    INST_channelOutQ_3_taggedReg.METH_write(DEF__0_CONCAT_DONTCARE___d644);
  }
  
  void MOD_mkNode::RL_channelInQ_4_enqueue()
  {
    DEF_channelInQ_4_enqw_wget____d823 = INST_channelInQ_4_enqw.METH_wget();
    INST_channelInQ_4_ff.METH_enq(DEF_channelInQ_4_enqw_wget____d823);
  }
  
  void MOD_mkNode::RL_channelInQ_4_dequeue()
  {
    INST_channelInQ_4_ff.METH_deq();
  }
  
  void MOD_mkNode::RL_channelOutQ_4_rule_enq()
  {
    tUInt64 DEF__1_CONCAT_channelOutQ_4_rw_enq_wget__0___d71;
    DEF_channelOutQ_4_rw_enq_wget____d649 = INST_channelOutQ_4_rw_enq.METH_wget();
    DEF__1_CONCAT_channelOutQ_4_rw_enq_wget__0___d71 = 4503599627370495llu & ((((tUInt64)((tUInt8)1u)) << 51u) | DEF_channelOutQ_4_rw_enq_wget____d649);
    INST_channelOutQ_4_taggedReg.METH_write(DEF__1_CONCAT_channelOutQ_4_rw_enq_wget__0___d71);
  }
  
  void MOD_mkNode::RL_channelOutQ_4_rule_deq()
  {
    DEF__0_CONCAT_DONTCARE___d644 = 4503599627370495llu & ((((tUInt64)((tUInt8)0u)) << 51u) | 750599937895082llu);
    INST_channelOutQ_4_taggedReg.METH_write(DEF__0_CONCAT_DONTCARE___d644);
  }
  
  void MOD_mkNode::RL_inputChannelArbiter_every()
  {
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d162;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d144;
    tUInt8 DEF_NOT_inputChannelArbiter_request_vector_whas__4___d827;
    tUInt8 DEF_NOT_inputChannelArbiter_request_vector_1_whas__1___d828;
    tUInt8 DEF_NOT_inputChannelArbiter_request_vector_2_whas__8___d829;
    tUInt8 DEF_NOT_inputChannelArbiter_request_vector_4_whas__5___d831;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d630;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d638;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d639;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d640;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d629;
    tUInt8 DEF_NOT_inputChannelArbiter_request_vector_3_whas__4___d830;
    tUInt8 DEF_x1__h7314;
    tUInt8 DEF_inputChannelArbiter_priority_vector__h6221;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d693;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d690;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d687;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d142;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d696;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d698;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d134;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d694;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d136;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d146;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d699;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d127;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d123;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d700;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d113;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d115;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d701;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d104;
    tUInt8 DEF_NOT_inputChannelArbiter_request_vector_3_whas__ETC___d145;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d100;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d102;
    tUInt8 DEF_NOT_inputChannelArbiter_request_vector_1_whas__ETC___d116;
    tUInt8 DEF_inputChannelArbiter_priority_vector_BIT_2___h6110;
    tUInt8 DEF_NOT_inputChannelArbiter_request_vector_2_whas__ETC___d105;
    tUInt8 DEF_inputChannelArbiter_priority_vector_BIT_3___h6054;
    tUInt8 DEF_inputChannelArbiter_request_vector_2_whas____d692;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d111;
    tUInt8 DEF_inputChannelArbiter_request_vector_3_whas____d695;
    tUInt8 DEF_NOT_inputChannelArbiter_request_vector_whas__4_ETC___d128;
    tUInt8 DEF_inputChannelArbiter_priority_vector_BIT_1___h6166;
    tUInt8 DEF_inputChannelArbiter_request_vector_1_whas____d689;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d125;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d138;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d688;
    tUInt8 DEF__0_OR_NOT_inputChannelArbiter_request_vector_3__ETC___d76;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d691;
    tUInt8 DEF_inputChannelArbiter_request_vector_4_whas____d697;
    tUInt8 DEF__0_OR_NOT_inputChannelArbiter_request_vector_3__ETC___d93;
    tUInt8 DEF_inputChannelArbiter_priority_vector_BIT_4___h5998;
    tUInt8 DEF_inputChannelArbiter_request_vector_whas____d686;
    tUInt8 DEF_NOT_inputChannelArbiter_request_vector_4_whas__ETC___d139;
    tUInt8 DEF_inputChannelArbiter_priority_vector_BIT_0___h6222;
    tUInt8 DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d160;
    DEF_inputChannelArbiter_request_vector_whas____d686 = INST_inputChannelArbiter_request_vector.METH_whas();
    DEF_inputChannelArbiter_request_vector_4_whas____d697 = INST_inputChannelArbiter_request_vector_4.METH_whas();
    DEF_inputChannelArbiter_request_vector_1_whas____d689 = INST_inputChannelArbiter_request_vector_1.METH_whas();
    DEF_inputChannelArbiter_request_vector_3_whas____d695 = INST_inputChannelArbiter_request_vector_3.METH_whas();
    DEF_inputChannelArbiter_request_vector_2_whas____d692 = INST_inputChannelArbiter_request_vector_2.METH_whas();
    DEF_inputChannelArbiter_priority_vector__h6221 = INST_inputChannelArbiter_priority_vector.METH_read();
    DEF_inputChannelArbiter_priority_vector_BIT_0___h6222 = (tUInt8)((tUInt8)1u & DEF_inputChannelArbiter_priority_vector__h6221);
    DEF_inputChannelArbiter_priority_vector_BIT_4___h5998 = (tUInt8)(DEF_inputChannelArbiter_priority_vector__h6221 >> 4u);
    DEF_inputChannelArbiter_priority_vector_BIT_1___h6166 = (tUInt8)((tUInt8)1u & (DEF_inputChannelArbiter_priority_vector__h6221 >> 1u));
    DEF_inputChannelArbiter_priority_vector_BIT_3___h6054 = (tUInt8)((tUInt8)1u & (DEF_inputChannelArbiter_priority_vector__h6221 >> 3u));
    DEF_inputChannelArbiter_priority_vector_BIT_2___h6110 = (tUInt8)((tUInt8)1u & (DEF_inputChannelArbiter_priority_vector__h6221 >> 2u));
    DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d142 = DEF_inputChannelArbiter_priority_vector_BIT_0___h6222 && DEF_inputChannelArbiter_request_vector_whas____d686;
    DEF_NOT_inputChannelArbiter_request_vector_3_whas__4___d830 = !DEF_inputChannelArbiter_request_vector_3_whas____d695;
    DEF__0_OR_NOT_inputChannelArbiter_request_vector_3__ETC___d76 = DEF_NOT_inputChannelArbiter_request_vector_3_whas__4___d830;
    DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d111 = DEF_inputChannelArbiter_priority_vector_BIT_4___h5998 || (DEF_NOT_inputChannelArbiter_request_vector_3_whas__4___d830 && DEF_inputChannelArbiter_priority_vector_BIT_3___h6054);
    DEF_NOT_inputChannelArbiter_request_vector_4_whas__5___d831 = !DEF_inputChannelArbiter_request_vector_4_whas____d697;
    DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d100 = DEF_inputChannelArbiter_priority_vector_BIT_0___h6222 || (DEF_NOT_inputChannelArbiter_request_vector_4_whas__5___d831 && DEF_inputChannelArbiter_priority_vector_BIT_4___h5998);
    DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d113 = DEF_inputChannelArbiter_priority_vector_BIT_0___h6222 || (DEF_NOT_inputChannelArbiter_request_vector_4_whas__5___d831 && DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d111);
    DEF_NOT_inputChannelArbiter_request_vector_2_whas__8___d829 = !DEF_inputChannelArbiter_request_vector_2_whas____d692;
    DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d123 = DEF_inputChannelArbiter_priority_vector_BIT_3___h6054 || (DEF_NOT_inputChannelArbiter_request_vector_2_whas__8___d829 && DEF_inputChannelArbiter_priority_vector_BIT_2___h6110);
    DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d125 = DEF_inputChannelArbiter_priority_vector_BIT_4___h5998 || (DEF_NOT_inputChannelArbiter_request_vector_3_whas__4___d830 && DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d123);
    DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d127 = DEF_inputChannelArbiter_priority_vector_BIT_0___h6222 || (DEF_NOT_inputChannelArbiter_request_vector_4_whas__5___d831 && DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d125);
    DEF_NOT_inputChannelArbiter_request_vector_1_whas__1___d828 = !DEF_inputChannelArbiter_request_vector_1_whas____d689;
    DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d134 = DEF_inputChannelArbiter_priority_vector_BIT_2___h6110 || (DEF_NOT_inputChannelArbiter_request_vector_1_whas__1___d828 && DEF_inputChannelArbiter_priority_vector_BIT_1___h6166);
    DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d136 = DEF_inputChannelArbiter_priority_vector_BIT_3___h6054 || (DEF_NOT_inputChannelArbiter_request_vector_2_whas__8___d829 && DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d134);
    DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d138 = DEF_inputChannelArbiter_priority_vector_BIT_4___h5998 || (DEF_NOT_inputChannelArbiter_request_vector_3_whas__4___d830 && DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d136);
    DEF_NOT_inputChannelArbiter_request_vector_4_whas__ETC___d139 = DEF_NOT_inputChannelArbiter_request_vector_4_whas__5___d831 && DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d138;
    DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d698 = (DEF_inputChannelArbiter_priority_vector_BIT_0___h6222 || DEF_NOT_inputChannelArbiter_request_vector_4_whas__ETC___d139) && DEF_inputChannelArbiter_request_vector_whas____d686;
    DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d629 = DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d698 || DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d142;
    DEF_NOT_inputChannelArbiter_request_vector_whas__4___d827 = !DEF_inputChannelArbiter_request_vector_whas____d686;
    DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d688 = DEF_inputChannelArbiter_priority_vector_BIT_1___h6166 || (DEF_NOT_inputChannelArbiter_request_vector_whas__4___d827 && DEF_inputChannelArbiter_priority_vector_BIT_0___h6222);
    DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d691 = DEF_inputChannelArbiter_priority_vector_BIT_2___h6110 || (DEF_NOT_inputChannelArbiter_request_vector_1_whas__1___d828 && DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d688);
    DEF_NOT_inputChannelArbiter_request_vector_whas__4_ETC___d128 = DEF_NOT_inputChannelArbiter_request_vector_whas__4___d827 && DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d127;
    DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d102 = DEF_inputChannelArbiter_priority_vector_BIT_1___h6166 || (DEF_NOT_inputChannelArbiter_request_vector_whas__4___d827 && DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d100);
    DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d104 = DEF_inputChannelArbiter_priority_vector_BIT_2___h6110 || (DEF_NOT_inputChannelArbiter_request_vector_1_whas__1___d828 && DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d102);
    DEF_NOT_inputChannelArbiter_request_vector_2_whas__ETC___d105 = DEF_NOT_inputChannelArbiter_request_vector_2_whas__8___d829 && DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d104;
    DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d701 = (DEF_inputChannelArbiter_priority_vector_BIT_3___h6054 || DEF_NOT_inputChannelArbiter_request_vector_2_whas__ETC___d105) && DEF_inputChannelArbiter_request_vector_3_whas____d695;
    DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d115 = DEF_inputChannelArbiter_priority_vector_BIT_1___h6166 || (DEF_NOT_inputChannelArbiter_request_vector_whas__4___d827 && DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d113);
    DEF_NOT_inputChannelArbiter_request_vector_1_whas__ETC___d116 = DEF_NOT_inputChannelArbiter_request_vector_1_whas__1___d828 && DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d115;
    DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d700 = (DEF_inputChannelArbiter_priority_vector_BIT_2___h6110 || DEF_NOT_inputChannelArbiter_request_vector_1_whas__ETC___d116) && DEF_inputChannelArbiter_request_vector_2_whas____d692;
    DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d699 = (DEF_inputChannelArbiter_priority_vector_BIT_1___h6166 || DEF_NOT_inputChannelArbiter_request_vector_whas__4_ETC___d128) && DEF_inputChannelArbiter_request_vector_1_whas____d689;
    DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d694 = DEF_inputChannelArbiter_priority_vector_BIT_3___h6054 || (DEF_NOT_inputChannelArbiter_request_vector_2_whas__8___d829 && DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d691);
    DEF__0_OR_NOT_inputChannelArbiter_request_vector_3__ETC___d93 = DEF__0_OR_NOT_inputChannelArbiter_request_vector_3__ETC___d76 && DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d694;
    DEF_NOT_inputChannelArbiter_request_vector_3_whas__ETC___d145 = DEF_NOT_inputChannelArbiter_request_vector_3_whas__4___d830 && DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d694;
    DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d146 = DEF_inputChannelArbiter_priority_vector_BIT_4___h5998 || DEF_NOT_inputChannelArbiter_request_vector_3_whas__ETC___d145;
    DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d696 = DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d146 && DEF_inputChannelArbiter_request_vector_4_whas____d697;
    DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d160 = DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d698 || (DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d699 || (DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d700 || (DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d701 || DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d696)));
    DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d687 = DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d688 && DEF_inputChannelArbiter_request_vector_1_whas____d689;
    DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d690 = DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d691 && DEF_inputChannelArbiter_request_vector_2_whas____d692;
    DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d693 = DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d694 && DEF_inputChannelArbiter_request_vector_3_whas____d695;
    DEF_x1__h7314 = DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d696 ? (tUInt8)4u : (DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d701 ? (tUInt8)3u : (DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d700 ? (tUInt8)2u : (DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d699 ? (tUInt8)1u : (DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d698 ? (tUInt8)0u : (DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d696 ? (tUInt8)4u : (DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d693 ? (tUInt8)3u : (DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d690 ? (tUInt8)2u : (DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d687 ? (tUInt8)1u : (tUInt8)0u))))))));
    DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d640 = DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d699 || DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d687;
    DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d639 = DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d700 || DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d690;
    DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d638 = DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d701 || DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d693;
    DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d630 = (DEF_inputChannelArbiter_priority_vector_BIT_4___h5998 || DEF__0_OR_NOT_inputChannelArbiter_request_vector_3__ETC___d93) && DEF_inputChannelArbiter_request_vector_4_whas____d697;
    DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d144 = (tUInt8)31u & ((((tUInt8)15u & ((((tUInt8)3u & ((DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d630 << 1u) | DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d638)) << 2u) | ((tUInt8)3u & ((DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d639 << 1u) | DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d640)))) << 1u) | DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d629);
    DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d162 = (tUInt8)31u & ((((tUInt8)15u & ((((tUInt8)3u & ((DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d638 << 1u) | DEF_inputChannelArbiter_priority_vector_2_BIT_2_0__ETC___d639)) << 2u) | ((tUInt8)3u & ((DEF_inputChannelArbiter_priority_vector_2_BIT_1_3__ETC___d640 << 1u) | DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d629)))) << 1u) | DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d630);
    INST_inputChannelArbiter_grant_vector.METH_wset(DEF_inputChannelArbiter_priority_vector_2_BIT_4_3__ETC___d144);
    INST_inputChannelArbiter_grant_id_wire.METH_wset(DEF_x1__h7314);
    if (DEF_inputChannelArbiter_priority_vector_2_BIT_0_6__ETC___d160)
      INST_inputChannelArbiter_priority_vector.METH_write(DEF_inputChannelArbiter_priority_vector_2_BIT_3_7__ETC___d162);
  }
  
  void MOD_mkNode::RL_outputChannelArbiter_every()
  {
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d235;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d253;
    tUInt8 DEF_NOT_outputChannelArbiter_request_vector_whas__75___d832;
    tUInt8 DEF_NOT_outputChannelArbiter_request_vector_1_whas_ETC___d833;
    tUInt8 DEF_NOT_outputChannelArbiter_request_vector_2_whas_ETC___d834;
    tUInt8 DEF_NOT_outputChannelArbiter_request_vector_4_whas_ETC___d836;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d632;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d641;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d642;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d643;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d631;
    tUInt8 DEF_NOT_outputChannelArbiter_request_vector_3_whas_ETC___d835;
    tUInt8 DEF_x1__h11405;
    tUInt8 DEF_outputChannelArbiter_priority_vector__h10312;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d709;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d706;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d703;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d233;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d712;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d714;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d225;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d710;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d227;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d237;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d715;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d218;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d214;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d716;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d204;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d206;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d717;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d195;
    tUInt8 DEF_NOT_outputChannelArbiter_request_vector_3_whas_ETC___d236;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d191;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d193;
    tUInt8 DEF_NOT_outputChannelArbiter_request_vector_1_whas_ETC___d207;
    tUInt8 DEF_outputChannelArbiter_priority_vector_BIT_2___h10201;
    tUInt8 DEF_NOT_outputChannelArbiter_request_vector_2_whas_ETC___d196;
    tUInt8 DEF_outputChannelArbiter_priority_vector_BIT_3___h10145;
    tUInt8 DEF_outputChannelArbiter_request_vector_2_whas____d708;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d202;
    tUInt8 DEF_outputChannelArbiter_request_vector_3_whas____d711;
    tUInt8 DEF_NOT_outputChannelArbiter_request_vector_whas___ETC___d219;
    tUInt8 DEF_outputChannelArbiter_priority_vector_BIT_1___h10257;
    tUInt8 DEF_outputChannelArbiter_request_vector_1_whas____d705;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d216;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d229;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d704;
    tUInt8 DEF__0_OR_NOT_outputChannelArbiter_request_vector_3_ETC___d167;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d707;
    tUInt8 DEF_outputChannelArbiter_request_vector_4_whas____d713;
    tUInt8 DEF__0_OR_NOT_outputChannelArbiter_request_vector_3_ETC___d184;
    tUInt8 DEF_outputChannelArbiter_priority_vector_BIT_4___h10089;
    tUInt8 DEF_outputChannelArbiter_request_vector_whas____d702;
    tUInt8 DEF_NOT_outputChannelArbiter_request_vector_4_whas_ETC___d230;
    tUInt8 DEF_outputChannelArbiter_priority_vector_BIT_0___h10313;
    tUInt8 DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d251;
    DEF_outputChannelArbiter_request_vector_whas____d702 = INST_outputChannelArbiter_request_vector.METH_whas();
    DEF_outputChannelArbiter_request_vector_4_whas____d713 = INST_outputChannelArbiter_request_vector_4.METH_whas();
    DEF_outputChannelArbiter_request_vector_1_whas____d705 = INST_outputChannelArbiter_request_vector_1.METH_whas();
    DEF_outputChannelArbiter_request_vector_3_whas____d711 = INST_outputChannelArbiter_request_vector_3.METH_whas();
    DEF_outputChannelArbiter_request_vector_2_whas____d708 = INST_outputChannelArbiter_request_vector_2.METH_whas();
    DEF_outputChannelArbiter_priority_vector__h10312 = INST_outputChannelArbiter_priority_vector.METH_read();
    DEF_outputChannelArbiter_priority_vector_BIT_0___h10313 = (tUInt8)((tUInt8)1u & DEF_outputChannelArbiter_priority_vector__h10312);
    DEF_outputChannelArbiter_priority_vector_BIT_4___h10089 = (tUInt8)(DEF_outputChannelArbiter_priority_vector__h10312 >> 4u);
    DEF_outputChannelArbiter_priority_vector_BIT_1___h10257 = (tUInt8)((tUInt8)1u & (DEF_outputChannelArbiter_priority_vector__h10312 >> 1u));
    DEF_outputChannelArbiter_priority_vector_BIT_3___h10145 = (tUInt8)((tUInt8)1u & (DEF_outputChannelArbiter_priority_vector__h10312 >> 3u));
    DEF_outputChannelArbiter_priority_vector_BIT_2___h10201 = (tUInt8)((tUInt8)1u & (DEF_outputChannelArbiter_priority_vector__h10312 >> 2u));
    DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d233 = DEF_outputChannelArbiter_priority_vector_BIT_0___h10313 && DEF_outputChannelArbiter_request_vector_whas____d702;
    DEF_NOT_outputChannelArbiter_request_vector_3_whas_ETC___d835 = !DEF_outputChannelArbiter_request_vector_3_whas____d711;
    DEF__0_OR_NOT_outputChannelArbiter_request_vector_3_ETC___d167 = DEF_NOT_outputChannelArbiter_request_vector_3_whas_ETC___d835;
    DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d202 = DEF_outputChannelArbiter_priority_vector_BIT_4___h10089 || (DEF_NOT_outputChannelArbiter_request_vector_3_whas_ETC___d835 && DEF_outputChannelArbiter_priority_vector_BIT_3___h10145);
    DEF_NOT_outputChannelArbiter_request_vector_4_whas_ETC___d836 = !DEF_outputChannelArbiter_request_vector_4_whas____d713;
    DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d191 = DEF_outputChannelArbiter_priority_vector_BIT_0___h10313 || (DEF_NOT_outputChannelArbiter_request_vector_4_whas_ETC___d836 && DEF_outputChannelArbiter_priority_vector_BIT_4___h10089);
    DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d204 = DEF_outputChannelArbiter_priority_vector_BIT_0___h10313 || (DEF_NOT_outputChannelArbiter_request_vector_4_whas_ETC___d836 && DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d202);
    DEF_NOT_outputChannelArbiter_request_vector_2_whas_ETC___d834 = !DEF_outputChannelArbiter_request_vector_2_whas____d708;
    DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d214 = DEF_outputChannelArbiter_priority_vector_BIT_3___h10145 || (DEF_NOT_outputChannelArbiter_request_vector_2_whas_ETC___d834 && DEF_outputChannelArbiter_priority_vector_BIT_2___h10201);
    DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d216 = DEF_outputChannelArbiter_priority_vector_BIT_4___h10089 || (DEF_NOT_outputChannelArbiter_request_vector_3_whas_ETC___d835 && DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d214);
    DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d218 = DEF_outputChannelArbiter_priority_vector_BIT_0___h10313 || (DEF_NOT_outputChannelArbiter_request_vector_4_whas_ETC___d836 && DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d216);
    DEF_NOT_outputChannelArbiter_request_vector_1_whas_ETC___d833 = !DEF_outputChannelArbiter_request_vector_1_whas____d705;
    DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d225 = DEF_outputChannelArbiter_priority_vector_BIT_2___h10201 || (DEF_NOT_outputChannelArbiter_request_vector_1_whas_ETC___d833 && DEF_outputChannelArbiter_priority_vector_BIT_1___h10257);
    DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d227 = DEF_outputChannelArbiter_priority_vector_BIT_3___h10145 || (DEF_NOT_outputChannelArbiter_request_vector_2_whas_ETC___d834 && DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d225);
    DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d229 = DEF_outputChannelArbiter_priority_vector_BIT_4___h10089 || (DEF_NOT_outputChannelArbiter_request_vector_3_whas_ETC___d835 && DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d227);
    DEF_NOT_outputChannelArbiter_request_vector_4_whas_ETC___d230 = DEF_NOT_outputChannelArbiter_request_vector_4_whas_ETC___d836 && DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d229;
    DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d714 = (DEF_outputChannelArbiter_priority_vector_BIT_0___h10313 || DEF_NOT_outputChannelArbiter_request_vector_4_whas_ETC___d230) && DEF_outputChannelArbiter_request_vector_whas____d702;
    DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d631 = DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d714 || DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d233;
    DEF_NOT_outputChannelArbiter_request_vector_whas__75___d832 = !DEF_outputChannelArbiter_request_vector_whas____d702;
    DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d704 = DEF_outputChannelArbiter_priority_vector_BIT_1___h10257 || (DEF_NOT_outputChannelArbiter_request_vector_whas__75___d832 && DEF_outputChannelArbiter_priority_vector_BIT_0___h10313);
    DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d707 = DEF_outputChannelArbiter_priority_vector_BIT_2___h10201 || (DEF_NOT_outputChannelArbiter_request_vector_1_whas_ETC___d833 && DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d704);
    DEF_NOT_outputChannelArbiter_request_vector_whas___ETC___d219 = DEF_NOT_outputChannelArbiter_request_vector_whas__75___d832 && DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d218;
    DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d193 = DEF_outputChannelArbiter_priority_vector_BIT_1___h10257 || (DEF_NOT_outputChannelArbiter_request_vector_whas__75___d832 && DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d191);
    DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d195 = DEF_outputChannelArbiter_priority_vector_BIT_2___h10201 || (DEF_NOT_outputChannelArbiter_request_vector_1_whas_ETC___d833 && DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d193);
    DEF_NOT_outputChannelArbiter_request_vector_2_whas_ETC___d196 = DEF_NOT_outputChannelArbiter_request_vector_2_whas_ETC___d834 && DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d195;
    DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d717 = (DEF_outputChannelArbiter_priority_vector_BIT_3___h10145 || DEF_NOT_outputChannelArbiter_request_vector_2_whas_ETC___d196) && DEF_outputChannelArbiter_request_vector_3_whas____d711;
    DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d206 = DEF_outputChannelArbiter_priority_vector_BIT_1___h10257 || (DEF_NOT_outputChannelArbiter_request_vector_whas__75___d832 && DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d204);
    DEF_NOT_outputChannelArbiter_request_vector_1_whas_ETC___d207 = DEF_NOT_outputChannelArbiter_request_vector_1_whas_ETC___d833 && DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d206;
    DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d716 = (DEF_outputChannelArbiter_priority_vector_BIT_2___h10201 || DEF_NOT_outputChannelArbiter_request_vector_1_whas_ETC___d207) && DEF_outputChannelArbiter_request_vector_2_whas____d708;
    DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d715 = (DEF_outputChannelArbiter_priority_vector_BIT_1___h10257 || DEF_NOT_outputChannelArbiter_request_vector_whas___ETC___d219) && DEF_outputChannelArbiter_request_vector_1_whas____d705;
    DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d710 = DEF_outputChannelArbiter_priority_vector_BIT_3___h10145 || (DEF_NOT_outputChannelArbiter_request_vector_2_whas_ETC___d834 && DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d707);
    DEF__0_OR_NOT_outputChannelArbiter_request_vector_3_ETC___d184 = DEF__0_OR_NOT_outputChannelArbiter_request_vector_3_ETC___d167 && DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d710;
    DEF_NOT_outputChannelArbiter_request_vector_3_whas_ETC___d236 = DEF_NOT_outputChannelArbiter_request_vector_3_whas_ETC___d835 && DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d710;
    DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d237 = DEF_outputChannelArbiter_priority_vector_BIT_4___h10089 || DEF_NOT_outputChannelArbiter_request_vector_3_whas_ETC___d236;
    DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d712 = DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d237 && DEF_outputChannelArbiter_request_vector_4_whas____d713;
    DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d251 = DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d714 || (DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d715 || (DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d716 || (DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d717 || DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d712)));
    DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d703 = DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d704 && DEF_outputChannelArbiter_request_vector_1_whas____d705;
    DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d706 = DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d707 && DEF_outputChannelArbiter_request_vector_2_whas____d708;
    DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d709 = DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d710 && DEF_outputChannelArbiter_request_vector_3_whas____d711;
    DEF_x1__h11405 = DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d712 ? (tUInt8)4u : (DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d717 ? (tUInt8)3u : (DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d716 ? (tUInt8)2u : (DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d715 ? (tUInt8)1u : (DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d714 ? (tUInt8)0u : (DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d712 ? (tUInt8)4u : (DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d709 ? (tUInt8)3u : (DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d706 ? (tUInt8)2u : (DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d703 ? (tUInt8)1u : (tUInt8)0u))))))));
    DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d643 = DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d715 || DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d703;
    DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d642 = DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d716 || DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d706;
    DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d641 = DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d717 || DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d709;
    DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d632 = (DEF_outputChannelArbiter_priority_vector_BIT_4___h10089 || DEF__0_OR_NOT_outputChannelArbiter_request_vector_3_ETC___d184) && DEF_outputChannelArbiter_request_vector_4_whas____d713;
    DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d253 = (tUInt8)31u & ((((tUInt8)15u & ((((tUInt8)3u & ((DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d641 << 1u) | DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d642)) << 2u) | ((tUInt8)3u & ((DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d643 << 1u) | DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d631)))) << 1u) | DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d632);
    DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d235 = (tUInt8)31u & ((((tUInt8)15u & ((((tUInt8)3u & ((DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d632 << 1u) | DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d641)) << 2u) | ((tUInt8)3u & ((DEF_outputChannelArbiter_priority_vector_63_BIT_2__ETC___d642 << 1u) | DEF_outputChannelArbiter_priority_vector_63_BIT_1__ETC___d643)))) << 1u) | DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d631);
    INST_outputChannelArbiter_grant_vector.METH_wset(DEF_outputChannelArbiter_priority_vector_63_BIT_4__ETC___d235);
    INST_outputChannelArbiter_grant_id_wire.METH_wset(DEF_x1__h11405);
    if (DEF_outputChannelArbiter_priority_vector_63_BIT_0__ETC___d251)
      INST_outputChannelArbiter_priority_vector.METH_write(DEF_outputChannelArbiter_priority_vector_63_BIT_3__ETC___d253);
  }
  
  void MOD_mkNode::RL_inputChannelArbiterRequest()
  {
    DEF_channelInQ_4_ff_i_notEmpty____d670 = INST_channelInQ_4_ff.METH_i_notEmpty();
    DEF_channelInQ_3_ff_i_notEmpty____d667 = INST_channelInQ_3_ff.METH_i_notEmpty();
    DEF_channelInQ_2_ff_i_notEmpty____d664 = INST_channelInQ_2_ff.METH_i_notEmpty();
    DEF_channelInQ_1_ff_i_notEmpty____d661 = INST_channelInQ_1_ff.METH_i_notEmpty();
    DEF_channelInQ_0_ff_i_notEmpty____d659 = INST_channelInQ_0_ff.METH_i_notEmpty();
    if (DEF_channelInQ_0_ff_i_notEmpty____d659)
      INST_inputChannelArbiter_request_vector.METH_wset();
    if (DEF_channelInQ_1_ff_i_notEmpty____d661)
      INST_inputChannelArbiter_request_vector_1.METH_wset();
    if (DEF_channelInQ_2_ff_i_notEmpty____d664)
      INST_inputChannelArbiter_request_vector_2.METH_wset();
    if (DEF_channelInQ_3_ff_i_notEmpty____d667)
      INST_inputChannelArbiter_request_vector_3.METH_wset();
    if (DEF_channelInQ_4_ff_i_notEmpty____d670)
      INST_inputChannelArbiter_request_vector_4.METH_wset();
  }
  
  void MOD_mkNode::RL_inputArbitratei()
  {
    tUInt8 DEF_y__h14074;
    tUInt8 DEF__0_CONCAT_IF_channelInQ_0_ff_i_notEmpty_THEN_ch_ETC___d294;
    tUInt8 DEF_x__h14075;
    tUInt8 DEF_NOT_channelInQ_0_enqw_wget_BIT_0_97___d837;
    tUInt8 DEF_x__h14099;
    tUInt8 DEF_x__h14082;
    tUInt8 DEF_IF_channelInQ_0_ff_i_notEmpty_THEN_channelInQ__ETC___d283;
    tUInt8 DEF_IF_channelInQ_0_ff_i_notEmpty_THEN_channelInQ__ETC___d280;
    tUInt64 DEF_IF_channelInQ_0_ff_i_notEmpty_THEN_channelInQ__ETC___d277;
    tUInt8 DEF_channelInQ_0_enqw_wget_BIT_0___d726;
    tUInt8 DEF_channelInQ_0_ff_first__62_BIT_0___d727;
    tUInt8 DEF_channelInQ_0_enqw_wget_BITS_44_TO_43___d721;
    tUInt8 DEF_channelInQ_0_enqw_wget_BITS_46_TO_45___d720;
    tUInt8 DEF_x_first_dest_colAddr__h13905;
    tUInt8 DEF_x_first_dest_rowAddr__h13904;
    tUInt8 DEF_x__h14073;
    tUInt8 DEF_channelInQ_0_enqw_wget_BITS_38_TO_35___d723;
    tUInt8 DEF_channelInQ_0_enqw_wget_BITS_42_TO_39___d722;
    tUInt8 DEF_x_first_payload_dest__h13932;
    tUInt8 DEF_x_first_payload_src__h13931;
    tUInt64 DEF_channelInQ_0_ff_first____d651;
    DEF_channelInQ_0_enqw_wget____d819 = INST_channelInQ_0_enqw.METH_wget();
    DEF_channelInQ_0_ff_first____d651 = INST_channelInQ_0_ff.METH_first();
    DEF_channelInQ_0_enqw_whas____d658 = INST_channelInQ_0_enqw.METH_whas();
    DEF_channelInQ_0_ff_i_notEmpty____d659 = INST_channelInQ_0_ff.METH_i_notEmpty();
    DEF_x_first_payload_src__h13931 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_0_ff_first____d651 >> 39u));
    DEF_x_first_payload_dest__h13932 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_0_ff_first____d651 >> 35u));
    DEF_channelInQ_0_enqw_wget_BITS_42_TO_39___d722 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_0_enqw_wget____d819 >> 39u));
    DEF_channelInQ_0_enqw_wget_BITS_38_TO_35___d723 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_0_enqw_wget____d819 >> 35u));
    DEF_x_first_dest_rowAddr__h13904 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_0_ff_first____d651 >> 45u));
    DEF_x_first_dest_colAddr__h13905 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_0_ff_first____d651 >> 43u));
    DEF_channelInQ_0_enqw_wget_BITS_46_TO_45___d720 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_0_enqw_wget____d819 >> 45u));
    DEF_channelInQ_0_enqw_wget_BITS_44_TO_43___d721 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_0_enqw_wget____d819 >> 43u));
    DEF_channelInQ_0_enqw_wget_BIT_0___d726 = (tUInt8)((tUInt8)1u & DEF_channelInQ_0_enqw_wget____d819);
    DEF_channelInQ_0_ff_first__62_BIT_0___d727 = (tUInt8)((tUInt8)1u & DEF_channelInQ_0_ff_first____d651);
    DEF_IF_IF_channelInQ_0_ff_i_notEmpty_THEN_channelI_ETC___d303 = (DEF_channelInQ_0_ff_i_notEmpty____d659 ? DEF_channelInQ_0_ff_first__62_BIT_0___d727 : (DEF_channelInQ_0_enqw_whas____d658 ? DEF_channelInQ_0_enqw_wget_BIT_0___d726 : DEF_channelInQ_0_enqw_wget_BIT_0___d726)) ? __str_literal_1 : __str_literal_2;
    DEF_IF_channelInQ_0_ff_i_notEmpty_THEN_channelInQ__ETC___d277 = DEF_channelInQ_0_ff_i_notEmpty____d659 ? DEF_channelInQ_0_ff_first____d651 : (DEF_channelInQ_0_enqw_whas____d658 ? DEF_channelInQ_0_enqw_wget____d819 : 2251799813685247llu & (((562949953421311llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)15u & ((((tUInt8)(DEF_channelInQ_0_enqw_wget____d819 >> 49u)) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelInQ_0_enqw_wget____d819 >> 47u)))) << 4u) | ((tUInt8)15u & ((DEF_channelInQ_0_enqw_wget_BITS_46_TO_45___d720 << 2u) | DEF_channelInQ_0_enqw_wget_BITS_44_TO_43___d721))))) << 41u) | (2199023255551llu & ((((tUInt64)((tUInt8)255u & ((DEF_channelInQ_0_enqw_wget_BITS_42_TO_39___d722 << 4u) | DEF_channelInQ_0_enqw_wget_BITS_38_TO_35___d723))) << 33u) | (8589934591llu & ((((tUInt64)((tUInt32)(DEF_channelInQ_0_enqw_wget____d819 >> 3u))) << 1u) | (tUInt64)((tUInt8)((tUInt8)1u & (DEF_channelInQ_0_enqw_wget____d819 >> 2u))))))))) << 2u) | (tUInt64)((tUInt8)((tUInt8)3u & DEF_channelInQ_0_enqw_wget____d819))));
    DEF_IF_channelInQ_0_ff_i_notEmpty_THEN_channelInQ__ETC___d283 = DEF_channelInQ_0_ff_i_notEmpty____d659 ? DEF_x_first_payload_dest__h13932 : (DEF_channelInQ_0_enqw_whas____d658 ? DEF_channelInQ_0_enqw_wget_BITS_38_TO_35___d723 : DEF_channelInQ_0_enqw_wget_BITS_38_TO_35___d723);
    DEF_IF_channelInQ_0_ff_i_notEmpty_THEN_channelInQ__ETC___d280 = DEF_channelInQ_0_ff_i_notEmpty____d659 ? DEF_x_first_payload_src__h13931 : (DEF_channelInQ_0_enqw_whas____d658 ? DEF_channelInQ_0_enqw_wget_BITS_42_TO_39___d722 : DEF_channelInQ_0_enqw_wget_BITS_42_TO_39___d722);
    DEF_x__h14082 = DEF_channelInQ_0_ff_i_notEmpty____d659 ? DEF_x_first_dest_rowAddr__h13904 : (DEF_channelInQ_0_enqw_whas____d658 ? DEF_channelInQ_0_enqw_wget_BITS_46_TO_45___d720 : DEF_channelInQ_0_enqw_wget_BITS_46_TO_45___d720);
    DEF_x__h14099 = DEF_channelInQ_0_ff_i_notEmpty____d659 ? DEF_x_first_dest_colAddr__h13905 : (DEF_channelInQ_0_enqw_whas____d658 ? DEF_channelInQ_0_enqw_wget_BITS_44_TO_43___d721 : DEF_channelInQ_0_enqw_wget_BITS_44_TO_43___d721);
    DEF_NOT_channelInQ_0_enqw_wget_BIT_0_97___d837 = !DEF_channelInQ_0_enqw_wget_BIT_0___d726;
    DEF_IF_IF_channelInQ_0_ff_i_notEmpty_THEN_NOT_chan_ETC___d304 = (DEF_channelInQ_0_ff_i_notEmpty____d659 ? !DEF_channelInQ_0_ff_first__62_BIT_0___d727 : (DEF_channelInQ_0_enqw_whas____d658 ? DEF_NOT_channelInQ_0_enqw_wget_BIT_0_97___d837 : DEF_NOT_channelInQ_0_enqw_wget_BIT_0_97___d837)) ? __str_literal_3 : DEF_IF_IF_channelInQ_0_ff_i_notEmpty_THEN_channelI_ETC___d303;
    DEF_x__h14075 = (tUInt8)15u & DEF_x__h14082;
    DEF_x__h14073 = (tUInt8)((tUInt8)15u & ((tUInt8)255u & (DEF_x__h14075 * (tUInt8)3u)));
    DEF_x__h16126 = (tUInt8)15u & PORT_thisRowAddr;
    DEF_x__h16124 = (tUInt8)((tUInt8)15u & ((tUInt8)255u & (DEF_x__h16126 * (tUInt8)3u)));
    DEF_y__h14074 = (tUInt8)15u & DEF_x__h14099;
    DEF__0_CONCAT_IF_channelInQ_0_ff_i_notEmpty_THEN_ch_ETC___d294 = (tUInt8)15u & (DEF_x__h14073 + DEF_y__h14074);
    DEF_y__h16125 = (tUInt8)15u & PORT_thisColAddr;
    DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657 = (tUInt8)15u & (DEF_x__h16124 + DEF_y__h16125);
    INST_channelInQ_0_dequeueing.METH_wset();
    INST_channelInQ_0_firstValid.METH_write((tUInt8)1u);
    INST_routePacketQ.METH_enq(DEF_IF_channelInQ_0_ff_i_notEmpty_THEN_channelInQ__ETC___d277);
    if (!(PORT_RST_N == (tUInt8)0u))
      dollar_display(this,
		     "s,4,4,4,s,4",
		     &__str_literal_4,
		     DEF_IF_channelInQ_0_ff_i_notEmpty_THEN_channelInQ__ETC___d280,
		     DEF_IF_channelInQ_0_ff_i_notEmpty_THEN_channelInQ__ETC___d283,
		     DEF__0_CONCAT_IF_channelInQ_0_ff_i_notEmpty_THEN_ch_ETC___d294,
		     &DEF_IF_IF_channelInQ_0_ff_i_notEmpty_THEN_NOT_chan_ETC___d304,
		     DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657);
  }
  
  void MOD_mkNode::RL_inputArbitratei_1()
  {
    tUInt8 DEF_y__h14572;
    tUInt8 DEF__0_CONCAT_IF_channelInQ_1_ff_i_notEmpty__9_THEN_ETC___d348;
    tUInt8 DEF_x__h14573;
    tUInt8 DEF_NOT_channelInQ_1_enqw_wget__2_BIT_0_51___d838;
    tUInt8 DEF_x__h14580;
    tUInt8 DEF_x__h14597;
    tUInt8 DEF_IF_channelInQ_1_ff_i_notEmpty__9_THEN_channelI_ETC___d337;
    tUInt8 DEF_IF_channelInQ_1_ff_i_notEmpty__9_THEN_channelI_ETC___d334;
    tUInt64 DEF_IF_channelInQ_1_ff_i_notEmpty__9_THEN_channelI_ETC___d331;
    tUInt8 DEF_channelInQ_1_enqw_wget__2_BIT_0___d736;
    tUInt8 DEF_channelInQ_1_ff_first__16_BIT_0___d737;
    tUInt8 DEF_channelInQ_1_enqw_wget__2_BITS_44_TO_43___d731;
    tUInt8 DEF_channelInQ_1_enqw_wget__2_BITS_46_TO_45___d730;
    tUInt8 DEF_x_first_dest_colAddr__h14403;
    tUInt8 DEF_x_first_dest_rowAddr__h14402;
    tUInt8 DEF_x__h14571;
    tUInt8 DEF_channelInQ_1_enqw_wget__2_BITS_38_TO_35___d733;
    tUInt8 DEF_channelInQ_1_enqw_wget__2_BITS_42_TO_39___d732;
    tUInt8 DEF_x_first_payload_dest__h14430;
    tUInt8 DEF_x_first_payload_src__h14429;
    tUInt64 DEF_channelInQ_1_ff_first____d652;
    DEF_channelInQ_1_enqw_wget____d820 = INST_channelInQ_1_enqw.METH_wget();
    DEF_channelInQ_1_ff_first____d652 = INST_channelInQ_1_ff.METH_first();
    DEF_channelInQ_1_enqw_whas____d660 = INST_channelInQ_1_enqw.METH_whas();
    DEF_channelInQ_1_ff_i_notEmpty____d661 = INST_channelInQ_1_ff.METH_i_notEmpty();
    DEF_x_first_payload_src__h14429 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_1_ff_first____d652 >> 39u));
    DEF_x_first_payload_dest__h14430 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_1_ff_first____d652 >> 35u));
    DEF_channelInQ_1_enqw_wget__2_BITS_42_TO_39___d732 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_1_enqw_wget____d820 >> 39u));
    DEF_channelInQ_1_enqw_wget__2_BITS_38_TO_35___d733 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_1_enqw_wget____d820 >> 35u));
    DEF_x_first_dest_rowAddr__h14402 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_1_ff_first____d652 >> 45u));
    DEF_x_first_dest_colAddr__h14403 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_1_ff_first____d652 >> 43u));
    DEF_channelInQ_1_enqw_wget__2_BITS_46_TO_45___d730 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_1_enqw_wget____d820 >> 45u));
    DEF_channelInQ_1_enqw_wget__2_BITS_44_TO_43___d731 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_1_enqw_wget____d820 >> 43u));
    DEF_channelInQ_1_enqw_wget__2_BIT_0___d736 = (tUInt8)((tUInt8)1u & DEF_channelInQ_1_enqw_wget____d820);
    DEF_channelInQ_1_ff_first__16_BIT_0___d737 = (tUInt8)((tUInt8)1u & DEF_channelInQ_1_ff_first____d652);
    DEF_IF_IF_channelInQ_1_ff_i_notEmpty__9_THEN_chann_ETC___d357 = (DEF_channelInQ_1_ff_i_notEmpty____d661 ? DEF_channelInQ_1_ff_first__16_BIT_0___d737 : (DEF_channelInQ_1_enqw_whas____d660 ? DEF_channelInQ_1_enqw_wget__2_BIT_0___d736 : DEF_channelInQ_1_enqw_wget__2_BIT_0___d736)) ? __str_literal_1 : __str_literal_2;
    DEF_IF_channelInQ_1_ff_i_notEmpty__9_THEN_channelI_ETC___d331 = DEF_channelInQ_1_ff_i_notEmpty____d661 ? DEF_channelInQ_1_ff_first____d652 : (DEF_channelInQ_1_enqw_whas____d660 ? DEF_channelInQ_1_enqw_wget____d820 : 2251799813685247llu & (((562949953421311llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)15u & ((((tUInt8)(DEF_channelInQ_1_enqw_wget____d820 >> 49u)) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelInQ_1_enqw_wget____d820 >> 47u)))) << 4u) | ((tUInt8)15u & ((DEF_channelInQ_1_enqw_wget__2_BITS_46_TO_45___d730 << 2u) | DEF_channelInQ_1_enqw_wget__2_BITS_44_TO_43___d731))))) << 41u) | (2199023255551llu & ((((tUInt64)((tUInt8)255u & ((DEF_channelInQ_1_enqw_wget__2_BITS_42_TO_39___d732 << 4u) | DEF_channelInQ_1_enqw_wget__2_BITS_38_TO_35___d733))) << 33u) | (8589934591llu & ((((tUInt64)((tUInt32)(DEF_channelInQ_1_enqw_wget____d820 >> 3u))) << 1u) | (tUInt64)((tUInt8)((tUInt8)1u & (DEF_channelInQ_1_enqw_wget____d820 >> 2u))))))))) << 2u) | (tUInt64)((tUInt8)((tUInt8)3u & DEF_channelInQ_1_enqw_wget____d820))));
    DEF_IF_channelInQ_1_ff_i_notEmpty__9_THEN_channelI_ETC___d334 = DEF_channelInQ_1_ff_i_notEmpty____d661 ? DEF_x_first_payload_src__h14429 : (DEF_channelInQ_1_enqw_whas____d660 ? DEF_channelInQ_1_enqw_wget__2_BITS_42_TO_39___d732 : DEF_channelInQ_1_enqw_wget__2_BITS_42_TO_39___d732);
    DEF_IF_channelInQ_1_ff_i_notEmpty__9_THEN_channelI_ETC___d337 = DEF_channelInQ_1_ff_i_notEmpty____d661 ? DEF_x_first_payload_dest__h14430 : (DEF_channelInQ_1_enqw_whas____d660 ? DEF_channelInQ_1_enqw_wget__2_BITS_38_TO_35___d733 : DEF_channelInQ_1_enqw_wget__2_BITS_38_TO_35___d733);
    DEF_x__h14597 = DEF_channelInQ_1_ff_i_notEmpty____d661 ? DEF_x_first_dest_colAddr__h14403 : (DEF_channelInQ_1_enqw_whas____d660 ? DEF_channelInQ_1_enqw_wget__2_BITS_44_TO_43___d731 : DEF_channelInQ_1_enqw_wget__2_BITS_44_TO_43___d731);
    DEF_x__h14580 = DEF_channelInQ_1_ff_i_notEmpty____d661 ? DEF_x_first_dest_rowAddr__h14402 : (DEF_channelInQ_1_enqw_whas____d660 ? DEF_channelInQ_1_enqw_wget__2_BITS_46_TO_45___d730 : DEF_channelInQ_1_enqw_wget__2_BITS_46_TO_45___d730);
    DEF_NOT_channelInQ_1_enqw_wget__2_BIT_0_51___d838 = !DEF_channelInQ_1_enqw_wget__2_BIT_0___d736;
    DEF_IF_IF_channelInQ_1_ff_i_notEmpty__9_THEN_NOT_c_ETC___d358 = (DEF_channelInQ_1_ff_i_notEmpty____d661 ? !DEF_channelInQ_1_ff_first__16_BIT_0___d737 : (DEF_channelInQ_1_enqw_whas____d660 ? DEF_NOT_channelInQ_1_enqw_wget__2_BIT_0_51___d838 : DEF_NOT_channelInQ_1_enqw_wget__2_BIT_0_51___d838)) ? __str_literal_3 : DEF_IF_IF_channelInQ_1_ff_i_notEmpty__9_THEN_chann_ETC___d357;
    DEF_x__h14573 = (tUInt8)15u & DEF_x__h14580;
    DEF_x__h14571 = (tUInt8)((tUInt8)15u & ((tUInt8)255u & (DEF_x__h14573 * (tUInt8)3u)));
    DEF_x__h16126 = (tUInt8)15u & PORT_thisRowAddr;
    DEF_x__h16124 = (tUInt8)((tUInt8)15u & ((tUInt8)255u & (DEF_x__h16126 * (tUInt8)3u)));
    DEF_y__h14572 = (tUInt8)15u & DEF_x__h14597;
    DEF__0_CONCAT_IF_channelInQ_1_ff_i_notEmpty__9_THEN_ETC___d348 = (tUInt8)15u & (DEF_x__h14571 + DEF_y__h14572);
    DEF_y__h16125 = (tUInt8)15u & PORT_thisColAddr;
    DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657 = (tUInt8)15u & (DEF_x__h16124 + DEF_y__h16125);
    INST_channelInQ_1_dequeueing.METH_wset();
    INST_channelInQ_1_firstValid.METH_write((tUInt8)1u);
    INST_routePacketQ.METH_enq(DEF_IF_channelInQ_1_ff_i_notEmpty__9_THEN_channelI_ETC___d331);
    if (!(PORT_RST_N == (tUInt8)0u))
      dollar_display(this,
		     "s,4,4,4,s,4",
		     &__str_literal_4,
		     DEF_IF_channelInQ_1_ff_i_notEmpty__9_THEN_channelI_ETC___d334,
		     DEF_IF_channelInQ_1_ff_i_notEmpty__9_THEN_channelI_ETC___d337,
		     DEF__0_CONCAT_IF_channelInQ_1_ff_i_notEmpty__9_THEN_ETC___d348,
		     &DEF_IF_IF_channelInQ_1_ff_i_notEmpty__9_THEN_NOT_c_ETC___d358,
		     DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657);
  }
  
  void MOD_mkNode::RL_inputArbitratei_2()
  {
    tUInt8 DEF_y__h15068;
    tUInt8 DEF__0_CONCAT_IF_channelInQ_2_ff_i_notEmpty__3_THEN_ETC___d397;
    tUInt8 DEF_x__h15069;
    tUInt8 DEF_NOT_channelInQ_2_enqw_wget__6_BIT_0_00___d839;
    tUInt8 DEF_x__h15076;
    tUInt8 DEF_x__h15093;
    tUInt8 DEF_IF_channelInQ_2_ff_i_notEmpty__3_THEN_channelI_ETC___d386;
    tUInt8 DEF_IF_channelInQ_2_ff_i_notEmpty__3_THEN_channelI_ETC___d383;
    tUInt64 DEF_IF_channelInQ_2_ff_i_notEmpty__3_THEN_channelI_ETC___d380;
    tUInt8 DEF_channelInQ_2_enqw_wget__6_BIT_0___d746;
    tUInt8 DEF_channelInQ_2_ff_first__65_BIT_0___d747;
    tUInt8 DEF_channelInQ_2_enqw_wget__6_BITS_44_TO_43___d741;
    tUInt8 DEF_channelInQ_2_enqw_wget__6_BITS_46_TO_45___d740;
    tUInt8 DEF_x_first_dest_colAddr__h14899;
    tUInt8 DEF_x_first_dest_rowAddr__h14898;
    tUInt8 DEF_x__h15067;
    tUInt8 DEF_channelInQ_2_enqw_wget__6_BITS_38_TO_35___d743;
    tUInt8 DEF_channelInQ_2_enqw_wget__6_BITS_42_TO_39___d742;
    tUInt8 DEF_x_first_payload_dest__h14926;
    tUInt8 DEF_x_first_payload_src__h14925;
    tUInt64 DEF_channelInQ_2_ff_first____d653;
    DEF_channelInQ_2_enqw_wget____d821 = INST_channelInQ_2_enqw.METH_wget();
    DEF_channelInQ_2_ff_first____d653 = INST_channelInQ_2_ff.METH_first();
    DEF_channelInQ_2_enqw_whas____d663 = INST_channelInQ_2_enqw.METH_whas();
    DEF_channelInQ_2_ff_i_notEmpty____d664 = INST_channelInQ_2_ff.METH_i_notEmpty();
    DEF_x_first_payload_src__h14925 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_2_ff_first____d653 >> 39u));
    DEF_x_first_payload_dest__h14926 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_2_ff_first____d653 >> 35u));
    DEF_channelInQ_2_enqw_wget__6_BITS_42_TO_39___d742 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_2_enqw_wget____d821 >> 39u));
    DEF_channelInQ_2_enqw_wget__6_BITS_38_TO_35___d743 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_2_enqw_wget____d821 >> 35u));
    DEF_x_first_dest_rowAddr__h14898 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_2_ff_first____d653 >> 45u));
    DEF_x_first_dest_colAddr__h14899 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_2_ff_first____d653 >> 43u));
    DEF_channelInQ_2_enqw_wget__6_BITS_46_TO_45___d740 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_2_enqw_wget____d821 >> 45u));
    DEF_channelInQ_2_enqw_wget__6_BITS_44_TO_43___d741 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_2_enqw_wget____d821 >> 43u));
    DEF_channelInQ_2_enqw_wget__6_BIT_0___d746 = (tUInt8)((tUInt8)1u & DEF_channelInQ_2_enqw_wget____d821);
    DEF_channelInQ_2_ff_first__65_BIT_0___d747 = (tUInt8)((tUInt8)1u & DEF_channelInQ_2_ff_first____d653);
    DEF_IF_IF_channelInQ_2_ff_i_notEmpty__3_THEN_chann_ETC___d406 = (DEF_channelInQ_2_ff_i_notEmpty____d664 ? DEF_channelInQ_2_ff_first__65_BIT_0___d747 : (DEF_channelInQ_2_enqw_whas____d663 ? DEF_channelInQ_2_enqw_wget__6_BIT_0___d746 : DEF_channelInQ_2_enqw_wget__6_BIT_0___d746)) ? __str_literal_1 : __str_literal_2;
    DEF_IF_channelInQ_2_ff_i_notEmpty__3_THEN_channelI_ETC___d380 = DEF_channelInQ_2_ff_i_notEmpty____d664 ? DEF_channelInQ_2_ff_first____d653 : (DEF_channelInQ_2_enqw_whas____d663 ? DEF_channelInQ_2_enqw_wget____d821 : 2251799813685247llu & (((562949953421311llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)15u & ((((tUInt8)(DEF_channelInQ_2_enqw_wget____d821 >> 49u)) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelInQ_2_enqw_wget____d821 >> 47u)))) << 4u) | ((tUInt8)15u & ((DEF_channelInQ_2_enqw_wget__6_BITS_46_TO_45___d740 << 2u) | DEF_channelInQ_2_enqw_wget__6_BITS_44_TO_43___d741))))) << 41u) | (2199023255551llu & ((((tUInt64)((tUInt8)255u & ((DEF_channelInQ_2_enqw_wget__6_BITS_42_TO_39___d742 << 4u) | DEF_channelInQ_2_enqw_wget__6_BITS_38_TO_35___d743))) << 33u) | (8589934591llu & ((((tUInt64)((tUInt32)(DEF_channelInQ_2_enqw_wget____d821 >> 3u))) << 1u) | (tUInt64)((tUInt8)((tUInt8)1u & (DEF_channelInQ_2_enqw_wget____d821 >> 2u))))))))) << 2u) | (tUInt64)((tUInt8)((tUInt8)3u & DEF_channelInQ_2_enqw_wget____d821))));
    DEF_IF_channelInQ_2_ff_i_notEmpty__3_THEN_channelI_ETC___d383 = DEF_channelInQ_2_ff_i_notEmpty____d664 ? DEF_x_first_payload_src__h14925 : (DEF_channelInQ_2_enqw_whas____d663 ? DEF_channelInQ_2_enqw_wget__6_BITS_42_TO_39___d742 : DEF_channelInQ_2_enqw_wget__6_BITS_42_TO_39___d742);
    DEF_IF_channelInQ_2_ff_i_notEmpty__3_THEN_channelI_ETC___d386 = DEF_channelInQ_2_ff_i_notEmpty____d664 ? DEF_x_first_payload_dest__h14926 : (DEF_channelInQ_2_enqw_whas____d663 ? DEF_channelInQ_2_enqw_wget__6_BITS_38_TO_35___d743 : DEF_channelInQ_2_enqw_wget__6_BITS_38_TO_35___d743);
    DEF_x__h15093 = DEF_channelInQ_2_ff_i_notEmpty____d664 ? DEF_x_first_dest_colAddr__h14899 : (DEF_channelInQ_2_enqw_whas____d663 ? DEF_channelInQ_2_enqw_wget__6_BITS_44_TO_43___d741 : DEF_channelInQ_2_enqw_wget__6_BITS_44_TO_43___d741);
    DEF_x__h15076 = DEF_channelInQ_2_ff_i_notEmpty____d664 ? DEF_x_first_dest_rowAddr__h14898 : (DEF_channelInQ_2_enqw_whas____d663 ? DEF_channelInQ_2_enqw_wget__6_BITS_46_TO_45___d740 : DEF_channelInQ_2_enqw_wget__6_BITS_46_TO_45___d740);
    DEF_NOT_channelInQ_2_enqw_wget__6_BIT_0_00___d839 = !DEF_channelInQ_2_enqw_wget__6_BIT_0___d746;
    DEF_IF_IF_channelInQ_2_ff_i_notEmpty__3_THEN_NOT_c_ETC___d407 = (DEF_channelInQ_2_ff_i_notEmpty____d664 ? !DEF_channelInQ_2_ff_first__65_BIT_0___d747 : (DEF_channelInQ_2_enqw_whas____d663 ? DEF_NOT_channelInQ_2_enqw_wget__6_BIT_0_00___d839 : DEF_NOT_channelInQ_2_enqw_wget__6_BIT_0_00___d839)) ? __str_literal_3 : DEF_IF_IF_channelInQ_2_ff_i_notEmpty__3_THEN_chann_ETC___d406;
    DEF_x__h15069 = (tUInt8)15u & DEF_x__h15076;
    DEF_x__h15067 = (tUInt8)((tUInt8)15u & ((tUInt8)255u & (DEF_x__h15069 * (tUInt8)3u)));
    DEF_x__h16126 = (tUInt8)15u & PORT_thisRowAddr;
    DEF_x__h16124 = (tUInt8)((tUInt8)15u & ((tUInt8)255u & (DEF_x__h16126 * (tUInt8)3u)));
    DEF_y__h15068 = (tUInt8)15u & DEF_x__h15093;
    DEF__0_CONCAT_IF_channelInQ_2_ff_i_notEmpty__3_THEN_ETC___d397 = (tUInt8)15u & (DEF_x__h15067 + DEF_y__h15068);
    DEF_y__h16125 = (tUInt8)15u & PORT_thisColAddr;
    DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657 = (tUInt8)15u & (DEF_x__h16124 + DEF_y__h16125);
    INST_channelInQ_2_dequeueing.METH_wset();
    INST_channelInQ_2_firstValid.METH_write((tUInt8)1u);
    INST_routePacketQ.METH_enq(DEF_IF_channelInQ_2_ff_i_notEmpty__3_THEN_channelI_ETC___d380);
    if (!(PORT_RST_N == (tUInt8)0u))
      dollar_display(this,
		     "s,4,4,4,s,4",
		     &__str_literal_4,
		     DEF_IF_channelInQ_2_ff_i_notEmpty__3_THEN_channelI_ETC___d383,
		     DEF_IF_channelInQ_2_ff_i_notEmpty__3_THEN_channelI_ETC___d386,
		     DEF__0_CONCAT_IF_channelInQ_2_ff_i_notEmpty__3_THEN_ETC___d397,
		     &DEF_IF_IF_channelInQ_2_ff_i_notEmpty__3_THEN_NOT_c_ETC___d407,
		     DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657);
  }
  
  void MOD_mkNode::RL_inputArbitratei_3()
  {
    tUInt8 DEF_y__h15564;
    tUInt8 DEF__0_CONCAT_IF_channelInQ_3_ff_i_notEmpty__7_THEN_ETC___d446;
    tUInt8 DEF_x__h15565;
    tUInt8 DEF_NOT_channelInQ_3_enqw_wget__0_BIT_0_49___d840;
    tUInt8 DEF_x__h15572;
    tUInt8 DEF_x__h15589;
    tUInt8 DEF_IF_channelInQ_3_ff_i_notEmpty__7_THEN_channelI_ETC___d435;
    tUInt8 DEF_IF_channelInQ_3_ff_i_notEmpty__7_THEN_channelI_ETC___d432;
    tUInt64 DEF_IF_channelInQ_3_ff_i_notEmpty__7_THEN_channelI_ETC___d429;
    tUInt8 DEF_channelInQ_3_enqw_wget__0_BIT_0___d756;
    tUInt8 DEF_channelInQ_3_ff_first__14_BIT_0___d757;
    tUInt8 DEF_channelInQ_3_enqw_wget__0_BITS_44_TO_43___d751;
    tUInt8 DEF_channelInQ_3_enqw_wget__0_BITS_46_TO_45___d750;
    tUInt8 DEF_x_first_dest_colAddr__h15395;
    tUInt8 DEF_x_first_dest_rowAddr__h15394;
    tUInt8 DEF_x__h15563;
    tUInt8 DEF_channelInQ_3_enqw_wget__0_BITS_38_TO_35___d753;
    tUInt8 DEF_channelInQ_3_enqw_wget__0_BITS_42_TO_39___d752;
    tUInt8 DEF_x_first_payload_dest__h15422;
    tUInt8 DEF_x_first_payload_src__h15421;
    tUInt64 DEF_channelInQ_3_ff_first____d654;
    DEF_channelInQ_3_enqw_wget____d822 = INST_channelInQ_3_enqw.METH_wget();
    DEF_channelInQ_3_ff_first____d654 = INST_channelInQ_3_ff.METH_first();
    DEF_channelInQ_3_enqw_whas____d666 = INST_channelInQ_3_enqw.METH_whas();
    DEF_channelInQ_3_ff_i_notEmpty____d667 = INST_channelInQ_3_ff.METH_i_notEmpty();
    DEF_x_first_payload_src__h15421 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_3_ff_first____d654 >> 39u));
    DEF_x_first_payload_dest__h15422 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_3_ff_first____d654 >> 35u));
    DEF_channelInQ_3_enqw_wget__0_BITS_42_TO_39___d752 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_3_enqw_wget____d822 >> 39u));
    DEF_channelInQ_3_enqw_wget__0_BITS_38_TO_35___d753 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_3_enqw_wget____d822 >> 35u));
    DEF_x_first_dest_rowAddr__h15394 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_3_ff_first____d654 >> 45u));
    DEF_x_first_dest_colAddr__h15395 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_3_ff_first____d654 >> 43u));
    DEF_channelInQ_3_enqw_wget__0_BITS_46_TO_45___d750 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_3_enqw_wget____d822 >> 45u));
    DEF_channelInQ_3_enqw_wget__0_BITS_44_TO_43___d751 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_3_enqw_wget____d822 >> 43u));
    DEF_channelInQ_3_enqw_wget__0_BIT_0___d756 = (tUInt8)((tUInt8)1u & DEF_channelInQ_3_enqw_wget____d822);
    DEF_channelInQ_3_ff_first__14_BIT_0___d757 = (tUInt8)((tUInt8)1u & DEF_channelInQ_3_ff_first____d654);
    DEF_IF_IF_channelInQ_3_ff_i_notEmpty__7_THEN_chann_ETC___d455 = (DEF_channelInQ_3_ff_i_notEmpty____d667 ? DEF_channelInQ_3_ff_first__14_BIT_0___d757 : (DEF_channelInQ_3_enqw_whas____d666 ? DEF_channelInQ_3_enqw_wget__0_BIT_0___d756 : DEF_channelInQ_3_enqw_wget__0_BIT_0___d756)) ? __str_literal_1 : __str_literal_2;
    DEF_IF_channelInQ_3_ff_i_notEmpty__7_THEN_channelI_ETC___d429 = DEF_channelInQ_3_ff_i_notEmpty____d667 ? DEF_channelInQ_3_ff_first____d654 : (DEF_channelInQ_3_enqw_whas____d666 ? DEF_channelInQ_3_enqw_wget____d822 : 2251799813685247llu & (((562949953421311llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)15u & ((((tUInt8)(DEF_channelInQ_3_enqw_wget____d822 >> 49u)) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelInQ_3_enqw_wget____d822 >> 47u)))) << 4u) | ((tUInt8)15u & ((DEF_channelInQ_3_enqw_wget__0_BITS_46_TO_45___d750 << 2u) | DEF_channelInQ_3_enqw_wget__0_BITS_44_TO_43___d751))))) << 41u) | (2199023255551llu & ((((tUInt64)((tUInt8)255u & ((DEF_channelInQ_3_enqw_wget__0_BITS_42_TO_39___d752 << 4u) | DEF_channelInQ_3_enqw_wget__0_BITS_38_TO_35___d753))) << 33u) | (8589934591llu & ((((tUInt64)((tUInt32)(DEF_channelInQ_3_enqw_wget____d822 >> 3u))) << 1u) | (tUInt64)((tUInt8)((tUInt8)1u & (DEF_channelInQ_3_enqw_wget____d822 >> 2u))))))))) << 2u) | (tUInt64)((tUInt8)((tUInt8)3u & DEF_channelInQ_3_enqw_wget____d822))));
    DEF_IF_channelInQ_3_ff_i_notEmpty__7_THEN_channelI_ETC___d432 = DEF_channelInQ_3_ff_i_notEmpty____d667 ? DEF_x_first_payload_src__h15421 : (DEF_channelInQ_3_enqw_whas____d666 ? DEF_channelInQ_3_enqw_wget__0_BITS_42_TO_39___d752 : DEF_channelInQ_3_enqw_wget__0_BITS_42_TO_39___d752);
    DEF_IF_channelInQ_3_ff_i_notEmpty__7_THEN_channelI_ETC___d435 = DEF_channelInQ_3_ff_i_notEmpty____d667 ? DEF_x_first_payload_dest__h15422 : (DEF_channelInQ_3_enqw_whas____d666 ? DEF_channelInQ_3_enqw_wget__0_BITS_38_TO_35___d753 : DEF_channelInQ_3_enqw_wget__0_BITS_38_TO_35___d753);
    DEF_x__h15589 = DEF_channelInQ_3_ff_i_notEmpty____d667 ? DEF_x_first_dest_colAddr__h15395 : (DEF_channelInQ_3_enqw_whas____d666 ? DEF_channelInQ_3_enqw_wget__0_BITS_44_TO_43___d751 : DEF_channelInQ_3_enqw_wget__0_BITS_44_TO_43___d751);
    DEF_x__h15572 = DEF_channelInQ_3_ff_i_notEmpty____d667 ? DEF_x_first_dest_rowAddr__h15394 : (DEF_channelInQ_3_enqw_whas____d666 ? DEF_channelInQ_3_enqw_wget__0_BITS_46_TO_45___d750 : DEF_channelInQ_3_enqw_wget__0_BITS_46_TO_45___d750);
    DEF_NOT_channelInQ_3_enqw_wget__0_BIT_0_49___d840 = !DEF_channelInQ_3_enqw_wget__0_BIT_0___d756;
    DEF_IF_IF_channelInQ_3_ff_i_notEmpty__7_THEN_NOT_c_ETC___d456 = (DEF_channelInQ_3_ff_i_notEmpty____d667 ? !DEF_channelInQ_3_ff_first__14_BIT_0___d757 : (DEF_channelInQ_3_enqw_whas____d666 ? DEF_NOT_channelInQ_3_enqw_wget__0_BIT_0_49___d840 : DEF_NOT_channelInQ_3_enqw_wget__0_BIT_0_49___d840)) ? __str_literal_3 : DEF_IF_IF_channelInQ_3_ff_i_notEmpty__7_THEN_chann_ETC___d455;
    DEF_x__h15565 = (tUInt8)15u & DEF_x__h15572;
    DEF_x__h15563 = (tUInt8)((tUInt8)15u & ((tUInt8)255u & (DEF_x__h15565 * (tUInt8)3u)));
    DEF_x__h16126 = (tUInt8)15u & PORT_thisRowAddr;
    DEF_x__h16124 = (tUInt8)((tUInt8)15u & ((tUInt8)255u & (DEF_x__h16126 * (tUInt8)3u)));
    DEF_y__h15564 = (tUInt8)15u & DEF_x__h15589;
    DEF__0_CONCAT_IF_channelInQ_3_ff_i_notEmpty__7_THEN_ETC___d446 = (tUInt8)15u & (DEF_x__h15563 + DEF_y__h15564);
    DEF_y__h16125 = (tUInt8)15u & PORT_thisColAddr;
    DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657 = (tUInt8)15u & (DEF_x__h16124 + DEF_y__h16125);
    INST_channelInQ_3_dequeueing.METH_wset();
    INST_channelInQ_3_firstValid.METH_write((tUInt8)1u);
    INST_routePacketQ.METH_enq(DEF_IF_channelInQ_3_ff_i_notEmpty__7_THEN_channelI_ETC___d429);
    if (!(PORT_RST_N == (tUInt8)0u))
      dollar_display(this,
		     "s,4,4,4,s,4",
		     &__str_literal_4,
		     DEF_IF_channelInQ_3_ff_i_notEmpty__7_THEN_channelI_ETC___d432,
		     DEF_IF_channelInQ_3_ff_i_notEmpty__7_THEN_channelI_ETC___d435,
		     DEF__0_CONCAT_IF_channelInQ_3_ff_i_notEmpty__7_THEN_ETC___d446,
		     &DEF_IF_IF_channelInQ_3_ff_i_notEmpty__7_THEN_NOT_c_ETC___d456,
		     DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657);
  }
  
  void MOD_mkNode::RL_inputArbitratei_4()
  {
    tUInt8 DEF_y__h16060;
    tUInt8 DEF__0_CONCAT_IF_channelInQ_4_ff_i_notEmpty__1_THEN_ETC___d495;
    tUInt8 DEF_x__h16061;
    tUInt8 DEF_NOT_channelInQ_4_enqw_wget__4_BIT_0_98___d841;
    tUInt8 DEF_x__h16068;
    tUInt8 DEF_x__h16085;
    tUInt8 DEF_IF_channelInQ_4_ff_i_notEmpty__1_THEN_channelI_ETC___d484;
    tUInt8 DEF_IF_channelInQ_4_ff_i_notEmpty__1_THEN_channelI_ETC___d481;
    tUInt64 DEF_IF_channelInQ_4_ff_i_notEmpty__1_THEN_channelI_ETC___d478;
    tUInt8 DEF_channelInQ_4_enqw_wget__4_BIT_0___d766;
    tUInt8 DEF_channelInQ_4_ff_first__63_BIT_0___d767;
    tUInt8 DEF_channelInQ_4_enqw_wget__4_BITS_44_TO_43___d761;
    tUInt8 DEF_channelInQ_4_enqw_wget__4_BITS_46_TO_45___d760;
    tUInt8 DEF_x_first_dest_colAddr__h15891;
    tUInt8 DEF_x_first_dest_rowAddr__h15890;
    tUInt8 DEF_x__h16059;
    tUInt8 DEF_channelInQ_4_enqw_wget__4_BITS_38_TO_35___d763;
    tUInt8 DEF_channelInQ_4_enqw_wget__4_BITS_42_TO_39___d762;
    tUInt8 DEF_x_first_payload_dest__h15918;
    tUInt8 DEF_x_first_payload_src__h15917;
    tUInt64 DEF_channelInQ_4_ff_first____d655;
    DEF_channelInQ_4_enqw_wget____d823 = INST_channelInQ_4_enqw.METH_wget();
    DEF_channelInQ_4_ff_first____d655 = INST_channelInQ_4_ff.METH_first();
    DEF_channelInQ_4_enqw_whas____d669 = INST_channelInQ_4_enqw.METH_whas();
    DEF_channelInQ_4_ff_i_notEmpty____d670 = INST_channelInQ_4_ff.METH_i_notEmpty();
    DEF_x_first_payload_src__h15917 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_4_ff_first____d655 >> 39u));
    DEF_x_first_payload_dest__h15918 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_4_ff_first____d655 >> 35u));
    DEF_channelInQ_4_enqw_wget__4_BITS_42_TO_39___d762 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_4_enqw_wget____d823 >> 39u));
    DEF_channelInQ_4_enqw_wget__4_BITS_38_TO_35___d763 = (tUInt8)((tUInt8)15u & (DEF_channelInQ_4_enqw_wget____d823 >> 35u));
    DEF_x_first_dest_rowAddr__h15890 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_4_ff_first____d655 >> 45u));
    DEF_x_first_dest_colAddr__h15891 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_4_ff_first____d655 >> 43u));
    DEF_channelInQ_4_enqw_wget__4_BITS_46_TO_45___d760 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_4_enqw_wget____d823 >> 45u));
    DEF_channelInQ_4_enqw_wget__4_BITS_44_TO_43___d761 = (tUInt8)((tUInt8)3u & (DEF_channelInQ_4_enqw_wget____d823 >> 43u));
    DEF_channelInQ_4_enqw_wget__4_BIT_0___d766 = (tUInt8)((tUInt8)1u & DEF_channelInQ_4_enqw_wget____d823);
    DEF_channelInQ_4_ff_first__63_BIT_0___d767 = (tUInt8)((tUInt8)1u & DEF_channelInQ_4_ff_first____d655);
    DEF_IF_IF_channelInQ_4_ff_i_notEmpty__1_THEN_chann_ETC___d504 = (DEF_channelInQ_4_ff_i_notEmpty____d670 ? DEF_channelInQ_4_ff_first__63_BIT_0___d767 : (DEF_channelInQ_4_enqw_whas____d669 ? DEF_channelInQ_4_enqw_wget__4_BIT_0___d766 : DEF_channelInQ_4_enqw_wget__4_BIT_0___d766)) ? __str_literal_1 : __str_literal_2;
    DEF_IF_channelInQ_4_ff_i_notEmpty__1_THEN_channelI_ETC___d478 = DEF_channelInQ_4_ff_i_notEmpty____d670 ? DEF_channelInQ_4_ff_first____d655 : (DEF_channelInQ_4_enqw_whas____d669 ? DEF_channelInQ_4_enqw_wget____d823 : 2251799813685247llu & (((562949953421311llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)15u & ((((tUInt8)(DEF_channelInQ_4_enqw_wget____d823 >> 49u)) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelInQ_4_enqw_wget____d823 >> 47u)))) << 4u) | ((tUInt8)15u & ((DEF_channelInQ_4_enqw_wget__4_BITS_46_TO_45___d760 << 2u) | DEF_channelInQ_4_enqw_wget__4_BITS_44_TO_43___d761))))) << 41u) | (2199023255551llu & ((((tUInt64)((tUInt8)255u & ((DEF_channelInQ_4_enqw_wget__4_BITS_42_TO_39___d762 << 4u) | DEF_channelInQ_4_enqw_wget__4_BITS_38_TO_35___d763))) << 33u) | (8589934591llu & ((((tUInt64)((tUInt32)(DEF_channelInQ_4_enqw_wget____d823 >> 3u))) << 1u) | (tUInt64)((tUInt8)((tUInt8)1u & (DEF_channelInQ_4_enqw_wget____d823 >> 2u))))))))) << 2u) | (tUInt64)((tUInt8)((tUInt8)3u & DEF_channelInQ_4_enqw_wget____d823))));
    DEF_IF_channelInQ_4_ff_i_notEmpty__1_THEN_channelI_ETC___d481 = DEF_channelInQ_4_ff_i_notEmpty____d670 ? DEF_x_first_payload_src__h15917 : (DEF_channelInQ_4_enqw_whas____d669 ? DEF_channelInQ_4_enqw_wget__4_BITS_42_TO_39___d762 : DEF_channelInQ_4_enqw_wget__4_BITS_42_TO_39___d762);
    DEF_IF_channelInQ_4_ff_i_notEmpty__1_THEN_channelI_ETC___d484 = DEF_channelInQ_4_ff_i_notEmpty____d670 ? DEF_x_first_payload_dest__h15918 : (DEF_channelInQ_4_enqw_whas____d669 ? DEF_channelInQ_4_enqw_wget__4_BITS_38_TO_35___d763 : DEF_channelInQ_4_enqw_wget__4_BITS_38_TO_35___d763);
    DEF_x__h16085 = DEF_channelInQ_4_ff_i_notEmpty____d670 ? DEF_x_first_dest_colAddr__h15891 : (DEF_channelInQ_4_enqw_whas____d669 ? DEF_channelInQ_4_enqw_wget__4_BITS_44_TO_43___d761 : DEF_channelInQ_4_enqw_wget__4_BITS_44_TO_43___d761);
    DEF_x__h16068 = DEF_channelInQ_4_ff_i_notEmpty____d670 ? DEF_x_first_dest_rowAddr__h15890 : (DEF_channelInQ_4_enqw_whas____d669 ? DEF_channelInQ_4_enqw_wget__4_BITS_46_TO_45___d760 : DEF_channelInQ_4_enqw_wget__4_BITS_46_TO_45___d760);
    DEF_NOT_channelInQ_4_enqw_wget__4_BIT_0_98___d841 = !DEF_channelInQ_4_enqw_wget__4_BIT_0___d766;
    DEF_IF_IF_channelInQ_4_ff_i_notEmpty__1_THEN_NOT_c_ETC___d505 = (DEF_channelInQ_4_ff_i_notEmpty____d670 ? !DEF_channelInQ_4_ff_first__63_BIT_0___d767 : (DEF_channelInQ_4_enqw_whas____d669 ? DEF_NOT_channelInQ_4_enqw_wget__4_BIT_0_98___d841 : DEF_NOT_channelInQ_4_enqw_wget__4_BIT_0_98___d841)) ? __str_literal_3 : DEF_IF_IF_channelInQ_4_ff_i_notEmpty__1_THEN_chann_ETC___d504;
    DEF_x__h16061 = (tUInt8)15u & DEF_x__h16068;
    DEF_x__h16059 = (tUInt8)((tUInt8)15u & ((tUInt8)255u & (DEF_x__h16061 * (tUInt8)3u)));
    DEF_x__h16126 = (tUInt8)15u & PORT_thisRowAddr;
    DEF_x__h16124 = (tUInt8)((tUInt8)15u & ((tUInt8)255u & (DEF_x__h16126 * (tUInt8)3u)));
    DEF_y__h16060 = (tUInt8)15u & DEF_x__h16085;
    DEF__0_CONCAT_IF_channelInQ_4_ff_i_notEmpty__1_THEN_ETC___d495 = (tUInt8)15u & (DEF_x__h16059 + DEF_y__h16060);
    DEF_y__h16125 = (tUInt8)15u & PORT_thisColAddr;
    DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657 = (tUInt8)15u & (DEF_x__h16124 + DEF_y__h16125);
    INST_channelInQ_4_dequeueing.METH_wset();
    INST_channelInQ_4_firstValid.METH_write((tUInt8)1u);
    INST_routePacketQ.METH_enq(DEF_IF_channelInQ_4_ff_i_notEmpty__1_THEN_channelI_ETC___d478);
    if (!(PORT_RST_N == (tUInt8)0u))
      dollar_display(this,
		     "s,4,4,4,s,4",
		     &__str_literal_4,
		     DEF_IF_channelInQ_4_ff_i_notEmpty__1_THEN_channelI_ETC___d481,
		     DEF_IF_channelInQ_4_ff_i_notEmpty__1_THEN_channelI_ETC___d484,
		     DEF__0_CONCAT_IF_channelInQ_4_ff_i_notEmpty__1_THEN_ETC___d495,
		     &DEF_IF_IF_channelInQ_4_ff_i_notEmpty__1_THEN_NOT_c_ETC___d505,
		     DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657);
  }
  
  void MOD_mkNode::RL_routePacketNorth()
  {
    DEF_routePacketQ_first____d656 = INST_routePacketQ.METH_first();
    INST_routePacketQ.METH_deq();
    INST_channelOutQ_1_rw_enq.METH_wset(DEF_routePacketQ_first____d656);
  }
  
  void MOD_mkNode::RL_routePacketSouth()
  {
    DEF_routePacketQ_first____d656 = INST_routePacketQ.METH_first();
    INST_routePacketQ.METH_deq();
    INST_channelOutQ_2_rw_enq.METH_wset(DEF_routePacketQ_first____d656);
  }
  
  void MOD_mkNode::RL_routePacketWest()
  {
    DEF_routePacketQ_first____d656 = INST_routePacketQ.METH_first();
    INST_routePacketQ.METH_deq();
    INST_channelOutQ_4_rw_enq.METH_wset(DEF_routePacketQ_first____d656);
  }
  
  void MOD_mkNode::RL_routePacketEast()
  {
    DEF_routePacketQ_first____d656 = INST_routePacketQ.METH_first();
    INST_routePacketQ.METH_deq();
    INST_channelOutQ_3_rw_enq.METH_wset(DEF_routePacketQ_first____d656);
  }
  
  void MOD_mkNode::RL_routePacketHome()
  {
    DEF_routePacketQ_first____d656 = INST_routePacketQ.METH_first();
    INST_routePacketQ.METH_deq();
    INST_channelOutQ_0_rw_enq.METH_wset(DEF_routePacketQ_first____d656);
  }
  
  void MOD_mkNode::__me_check_23()
  {
    if (!(PORT_RST_N == (tUInt8)0u))
    {
      if (DEF_WILL_FIRE_RL_inputArbitratei && DEF_WILL_FIRE_RL_inputArbitratei_1)
	dollar_error(this, "s", &__str_literal_5);
      if ((DEF_WILL_FIRE_RL_inputArbitratei || DEF_WILL_FIRE_RL_inputArbitratei_1) && DEF_WILL_FIRE_RL_inputArbitratei_2)
	dollar_error(this, "s", &__str_literal_6);
      if (((DEF_WILL_FIRE_RL_inputArbitratei || DEF_WILL_FIRE_RL_inputArbitratei_1) || DEF_WILL_FIRE_RL_inputArbitratei_2) && DEF_WILL_FIRE_RL_inputArbitratei_3)
	dollar_error(this, "s", &__str_literal_7);
      if ((((DEF_WILL_FIRE_RL_inputArbitratei || DEF_WILL_FIRE_RL_inputArbitratei_1) || DEF_WILL_FIRE_RL_inputArbitratei_2) || DEF_WILL_FIRE_RL_inputArbitratei_3) && DEF_WILL_FIRE_RL_inputArbitratei_4)
	dollar_error(this, "s", &__str_literal_8);
    }
  }
  
  void MOD_mkNode::__me_check_28()
  {
    if (!(PORT_RST_N == (tUInt8)0u))
    {
      if (DEF_WILL_FIRE_RL_routePacketNorth && DEF_WILL_FIRE_RL_routePacketHome)
	dollar_error(this, "s", &__str_literal_9);
      if (DEF_WILL_FIRE_RL_routePacketNorth && DEF_WILL_FIRE_RL_routePacketEast)
	dollar_error(this, "s", &__str_literal_10);
      if (DEF_WILL_FIRE_RL_routePacketNorth && DEF_WILL_FIRE_RL_routePacketWest)
	dollar_error(this, "s", &__str_literal_11);
      if (DEF_WILL_FIRE_RL_routePacketNorth && DEF_WILL_FIRE_RL_routePacketSouth)
	dollar_error(this, "s", &__str_literal_12);
    }
  }
  
  void MOD_mkNode::__me_check_29()
  {
    if (!(PORT_RST_N == (tUInt8)0u))
    {
      if (DEF_WILL_FIRE_RL_routePacketSouth && DEF_WILL_FIRE_RL_routePacketHome)
	dollar_error(this, "s", &__str_literal_13);
      if (DEF_WILL_FIRE_RL_routePacketSouth && DEF_WILL_FIRE_RL_routePacketEast)
	dollar_error(this, "s", &__str_literal_14);
      if (DEF_WILL_FIRE_RL_routePacketSouth && DEF_WILL_FIRE_RL_routePacketWest)
	dollar_error(this, "s", &__str_literal_15);
    }
  }
  
  void MOD_mkNode::__me_check_30()
  {
    if (!(PORT_RST_N == (tUInt8)0u))
    {
      if (DEF_WILL_FIRE_RL_routePacketWest && DEF_WILL_FIRE_RL_routePacketHome)
	dollar_error(this, "s", &__str_literal_16);
      if (DEF_WILL_FIRE_RL_routePacketWest && DEF_WILL_FIRE_RL_routePacketEast)
	dollar_error(this, "s", &__str_literal_17);
    }
  }
  
  void MOD_mkNode::__me_check_31()
  {
    if (!(PORT_RST_N == (tUInt8)0u))
      if (DEF_WILL_FIRE_RL_routePacketEast && DEF_WILL_FIRE_RL_routePacketHome)
	dollar_error(this, "s", &__str_literal_18);
  }
  
  
  /* Methods */
  
  void MOD_mkNode::METH_channels_0_putNoCPacket_put(tUInt64 ARG_channels_0_putNoCPacket_put)
  {
    PORT_EN_channels_0_putNoCPacket_put = (tUInt8)1u;
    DEF_WILL_FIRE_channels_0_putNoCPacket_put = (tUInt8)1u;
    PORT_channels_0_putNoCPacket_put = ARG_channels_0_putNoCPacket_put;
    INST_channelInQ_0_enqw.METH_wset(ARG_channels_0_putNoCPacket_put);
  }
  
  tUInt8 MOD_mkNode::METH_RDY_channels_0_putNoCPacket_put()
  {
    DEF_CAN_FIRE_channels_0_putNoCPacket_put = INST_channelInQ_0_ff.METH_i_notFull();
    PORT_RDY_channels_0_putNoCPacket_put = DEF_CAN_FIRE_channels_0_putNoCPacket_put;
    return PORT_RDY_channels_0_putNoCPacket_put;
  }
  
  tUInt64 MOD_mkNode::METH_channels_0_getNoCPacket_get()
  {
    tUInt64 DEF_IF_channelOutQ_0_taggedReg_44_BIT_51_45_THEN_c_ETC___d566;
    PORT_EN_channels_0_getNoCPacket_get = (tUInt8)1u;
    DEF_WILL_FIRE_channels_0_getNoCPacket_get = (tUInt8)1u;
    DEF_channelOutQ_0_rw_enq_whas____d678 = INST_channelOutQ_0_rw_enq.METH_whas();
    DEF_channelOutQ_0_taggedReg___d633 = INST_channelOutQ_0_taggedReg.METH_read();
    DEF_channelOutQ_0_taggedReg_44_BIT_51___d676 = (tUInt8)(DEF_channelOutQ_0_taggedReg___d633 >> 51u);
    DEF_channelOutQ_0_rw_enq_wget____d645 = INST_channelOutQ_0_rw_enq.METH_wget();
    DEF_IF_channelOutQ_0_taggedReg_44_BIT_51_45_THEN_c_ETC___d566 = DEF_channelOutQ_0_taggedReg_44_BIT_51___d676 ? (tUInt64)(2251799813685247llu & DEF_channelOutQ_0_taggedReg___d633) : 2251799813685247llu & (((562949953421311llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)15u & ((((tUInt8)((tUInt8)3u & (DEF_channelOutQ_0_taggedReg___d633 >> 49u))) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelOutQ_0_taggedReg___d633 >> 47u)))) << 4u) | ((tUInt8)15u & ((((tUInt8)((tUInt8)3u & (DEF_channelOutQ_0_taggedReg___d633 >> 45u))) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelOutQ_0_taggedReg___d633 >> 43u))))))) << 41u) | (2199023255551llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)((tUInt8)15u & (DEF_channelOutQ_0_taggedReg___d633 >> 39u))) << 4u) | (tUInt8)((tUInt8)15u & (DEF_channelOutQ_0_taggedReg___d633 >> 35u))))) << 33u) | (8589934591llu & ((((tUInt64)((tUInt32)(DEF_channelOutQ_0_taggedReg___d633 >> 3u))) << 1u) | (tUInt64)((tUInt8)((tUInt8)1u & (DEF_channelOutQ_0_taggedReg___d633 >> 2u))))))))) << 2u) | (tUInt64)((tUInt8)((tUInt8)3u & DEF_channelOutQ_0_taggedReg___d633)));
    INST_channelOutQ_0_pw_deq.METH_wset();
    PORT_channels_0_getNoCPacket_get = DEF_channelOutQ_0_rw_enq_whas____d678 ? DEF_channelOutQ_0_rw_enq_wget____d645 : DEF_IF_channelOutQ_0_taggedReg_44_BIT_51_45_THEN_c_ETC___d566;
    return PORT_channels_0_getNoCPacket_get;
  }
  
  tUInt8 MOD_mkNode::METH_RDY_channels_0_getNoCPacket_get()
  {
    DEF_channelOutQ_0_rw_enq_whas____d678 = INST_channelOutQ_0_rw_enq.METH_whas();
    DEF_channelOutQ_0_taggedReg___d633 = INST_channelOutQ_0_taggedReg.METH_read();
    DEF_channelOutQ_0_taggedReg_44_BIT_51___d676 = (tUInt8)(DEF_channelOutQ_0_taggedReg___d633 >> 51u);
    DEF_CAN_FIRE_channels_0_getNoCPacket_get = DEF_channelOutQ_0_taggedReg_44_BIT_51___d676 || DEF_channelOutQ_0_rw_enq_whas____d678;
    PORT_RDY_channels_0_getNoCPacket_get = DEF_CAN_FIRE_channels_0_getNoCPacket_get;
    return PORT_RDY_channels_0_getNoCPacket_get;
  }
  
  void MOD_mkNode::METH_channels_1_putNoCPacket_put(tUInt64 ARG_channels_1_putNoCPacket_put)
  {
    PORT_EN_channels_1_putNoCPacket_put = (tUInt8)1u;
    DEF_WILL_FIRE_channels_1_putNoCPacket_put = (tUInt8)1u;
    PORT_channels_1_putNoCPacket_put = ARG_channels_1_putNoCPacket_put;
    INST_channelInQ_1_enqw.METH_wset(ARG_channels_1_putNoCPacket_put);
  }
  
  tUInt8 MOD_mkNode::METH_RDY_channels_1_putNoCPacket_put()
  {
    DEF_CAN_FIRE_channels_1_putNoCPacket_put = INST_channelInQ_1_ff.METH_i_notFull();
    PORT_RDY_channels_1_putNoCPacket_put = DEF_CAN_FIRE_channels_1_putNoCPacket_put;
    return PORT_RDY_channels_1_putNoCPacket_put;
  }
  
  tUInt64 MOD_mkNode::METH_channels_1_getNoCPacket_get()
  {
    tUInt64 DEF_IF_channelOutQ_1_taggedReg_07_BIT_51_08_THEN_c_ETC___d581;
    PORT_EN_channels_1_getNoCPacket_get = (tUInt8)1u;
    DEF_WILL_FIRE_channels_1_getNoCPacket_get = (tUInt8)1u;
    DEF_channelOutQ_1_rw_enq_whas____d679 = INST_channelOutQ_1_rw_enq.METH_whas();
    DEF_channelOutQ_1_taggedReg___d634 = INST_channelOutQ_1_taggedReg.METH_read();
    DEF_channelOutQ_1_taggedReg_07_BIT_51___d672 = (tUInt8)(DEF_channelOutQ_1_taggedReg___d634 >> 51u);
    DEF_channelOutQ_1_rw_enq_wget____d646 = INST_channelOutQ_1_rw_enq.METH_wget();
    DEF_IF_channelOutQ_1_taggedReg_07_BIT_51_08_THEN_c_ETC___d581 = DEF_channelOutQ_1_taggedReg_07_BIT_51___d672 ? (tUInt64)(2251799813685247llu & DEF_channelOutQ_1_taggedReg___d634) : 2251799813685247llu & (((562949953421311llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)15u & ((((tUInt8)((tUInt8)3u & (DEF_channelOutQ_1_taggedReg___d634 >> 49u))) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelOutQ_1_taggedReg___d634 >> 47u)))) << 4u) | ((tUInt8)15u & ((((tUInt8)((tUInt8)3u & (DEF_channelOutQ_1_taggedReg___d634 >> 45u))) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelOutQ_1_taggedReg___d634 >> 43u))))))) << 41u) | (2199023255551llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)((tUInt8)15u & (DEF_channelOutQ_1_taggedReg___d634 >> 39u))) << 4u) | (tUInt8)((tUInt8)15u & (DEF_channelOutQ_1_taggedReg___d634 >> 35u))))) << 33u) | (8589934591llu & ((((tUInt64)((tUInt32)(DEF_channelOutQ_1_taggedReg___d634 >> 3u))) << 1u) | (tUInt64)((tUInt8)((tUInt8)1u & (DEF_channelOutQ_1_taggedReg___d634 >> 2u))))))))) << 2u) | (tUInt64)((tUInt8)((tUInt8)3u & DEF_channelOutQ_1_taggedReg___d634)));
    INST_channelOutQ_1_pw_deq.METH_wset();
    PORT_channels_1_getNoCPacket_get = DEF_channelOutQ_1_rw_enq_whas____d679 ? DEF_channelOutQ_1_rw_enq_wget____d646 : DEF_IF_channelOutQ_1_taggedReg_07_BIT_51_08_THEN_c_ETC___d581;
    return PORT_channels_1_getNoCPacket_get;
  }
  
  tUInt8 MOD_mkNode::METH_RDY_channels_1_getNoCPacket_get()
  {
    DEF_channelOutQ_1_rw_enq_whas____d679 = INST_channelOutQ_1_rw_enq.METH_whas();
    DEF_channelOutQ_1_taggedReg___d634 = INST_channelOutQ_1_taggedReg.METH_read();
    DEF_channelOutQ_1_taggedReg_07_BIT_51___d672 = (tUInt8)(DEF_channelOutQ_1_taggedReg___d634 >> 51u);
    DEF_CAN_FIRE_channels_1_getNoCPacket_get = DEF_channelOutQ_1_taggedReg_07_BIT_51___d672 || DEF_channelOutQ_1_rw_enq_whas____d679;
    PORT_RDY_channels_1_getNoCPacket_get = DEF_CAN_FIRE_channels_1_getNoCPacket_get;
    return PORT_RDY_channels_1_getNoCPacket_get;
  }
  
  void MOD_mkNode::METH_channels_2_putNoCPacket_put(tUInt64 ARG_channels_2_putNoCPacket_put)
  {
    PORT_EN_channels_2_putNoCPacket_put = (tUInt8)1u;
    DEF_WILL_FIRE_channels_2_putNoCPacket_put = (tUInt8)1u;
    PORT_channels_2_putNoCPacket_put = ARG_channels_2_putNoCPacket_put;
    INST_channelInQ_2_enqw.METH_wset(ARG_channels_2_putNoCPacket_put);
  }
  
  tUInt8 MOD_mkNode::METH_RDY_channels_2_putNoCPacket_put()
  {
    DEF_CAN_FIRE_channels_2_putNoCPacket_put = INST_channelInQ_2_ff.METH_i_notFull();
    PORT_RDY_channels_2_putNoCPacket_put = DEF_CAN_FIRE_channels_2_putNoCPacket_put;
    return PORT_RDY_channels_2_putNoCPacket_put;
  }
  
  tUInt64 MOD_mkNode::METH_channels_2_getNoCPacket_get()
  {
    tUInt64 DEF_IF_channelOutQ_2_taggedReg_17_BIT_51_18_THEN_c_ETC___d596;
    PORT_EN_channels_2_getNoCPacket_get = (tUInt8)1u;
    DEF_WILL_FIRE_channels_2_getNoCPacket_get = (tUInt8)1u;
    DEF_channelOutQ_2_rw_enq_whas____d681 = INST_channelOutQ_2_rw_enq.METH_whas();
    DEF_channelOutQ_2_taggedReg___d635 = INST_channelOutQ_2_taggedReg.METH_read();
    DEF_channelOutQ_2_taggedReg_17_BIT_51___d673 = (tUInt8)(DEF_channelOutQ_2_taggedReg___d635 >> 51u);
    DEF_channelOutQ_2_rw_enq_wget____d647 = INST_channelOutQ_2_rw_enq.METH_wget();
    DEF_IF_channelOutQ_2_taggedReg_17_BIT_51_18_THEN_c_ETC___d596 = DEF_channelOutQ_2_taggedReg_17_BIT_51___d673 ? (tUInt64)(2251799813685247llu & DEF_channelOutQ_2_taggedReg___d635) : 2251799813685247llu & (((562949953421311llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)15u & ((((tUInt8)((tUInt8)3u & (DEF_channelOutQ_2_taggedReg___d635 >> 49u))) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelOutQ_2_taggedReg___d635 >> 47u)))) << 4u) | ((tUInt8)15u & ((((tUInt8)((tUInt8)3u & (DEF_channelOutQ_2_taggedReg___d635 >> 45u))) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelOutQ_2_taggedReg___d635 >> 43u))))))) << 41u) | (2199023255551llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)((tUInt8)15u & (DEF_channelOutQ_2_taggedReg___d635 >> 39u))) << 4u) | (tUInt8)((tUInt8)15u & (DEF_channelOutQ_2_taggedReg___d635 >> 35u))))) << 33u) | (8589934591llu & ((((tUInt64)((tUInt32)(DEF_channelOutQ_2_taggedReg___d635 >> 3u))) << 1u) | (tUInt64)((tUInt8)((tUInt8)1u & (DEF_channelOutQ_2_taggedReg___d635 >> 2u))))))))) << 2u) | (tUInt64)((tUInt8)((tUInt8)3u & DEF_channelOutQ_2_taggedReg___d635)));
    INST_channelOutQ_2_pw_deq.METH_wset();
    PORT_channels_2_getNoCPacket_get = DEF_channelOutQ_2_rw_enq_whas____d681 ? DEF_channelOutQ_2_rw_enq_wget____d647 : DEF_IF_channelOutQ_2_taggedReg_17_BIT_51_18_THEN_c_ETC___d596;
    return PORT_channels_2_getNoCPacket_get;
  }
  
  tUInt8 MOD_mkNode::METH_RDY_channels_2_getNoCPacket_get()
  {
    DEF_channelOutQ_2_rw_enq_whas____d681 = INST_channelOutQ_2_rw_enq.METH_whas();
    DEF_channelOutQ_2_taggedReg___d635 = INST_channelOutQ_2_taggedReg.METH_read();
    DEF_channelOutQ_2_taggedReg_17_BIT_51___d673 = (tUInt8)(DEF_channelOutQ_2_taggedReg___d635 >> 51u);
    DEF_CAN_FIRE_channels_2_getNoCPacket_get = DEF_channelOutQ_2_taggedReg_17_BIT_51___d673 || DEF_channelOutQ_2_rw_enq_whas____d681;
    PORT_RDY_channels_2_getNoCPacket_get = DEF_CAN_FIRE_channels_2_getNoCPacket_get;
    return PORT_RDY_channels_2_getNoCPacket_get;
  }
  
  void MOD_mkNode::METH_channels_3_putNoCPacket_put(tUInt64 ARG_channels_3_putNoCPacket_put)
  {
    PORT_EN_channels_3_putNoCPacket_put = (tUInt8)1u;
    DEF_WILL_FIRE_channels_3_putNoCPacket_put = (tUInt8)1u;
    PORT_channels_3_putNoCPacket_put = ARG_channels_3_putNoCPacket_put;
    INST_channelInQ_3_enqw.METH_wset(ARG_channels_3_putNoCPacket_put);
  }
  
  tUInt8 MOD_mkNode::METH_RDY_channels_3_putNoCPacket_put()
  {
    DEF_CAN_FIRE_channels_3_putNoCPacket_put = INST_channelInQ_3_ff.METH_i_notFull();
    PORT_RDY_channels_3_putNoCPacket_put = DEF_CAN_FIRE_channels_3_putNoCPacket_put;
    return PORT_RDY_channels_3_putNoCPacket_put;
  }
  
  tUInt64 MOD_mkNode::METH_channels_3_getNoCPacket_get()
  {
    tUInt64 DEF_IF_channelOutQ_3_taggedReg_35_BIT_51_36_THEN_c_ETC___d611;
    PORT_EN_channels_3_getNoCPacket_get = (tUInt8)1u;
    DEF_WILL_FIRE_channels_3_getNoCPacket_get = (tUInt8)1u;
    DEF_channelOutQ_3_rw_enq_whas____d683 = INST_channelOutQ_3_rw_enq.METH_whas();
    DEF_channelOutQ_3_taggedReg___d636 = INST_channelOutQ_3_taggedReg.METH_read();
    DEF_channelOutQ_3_taggedReg_35_BIT_51___d675 = (tUInt8)(DEF_channelOutQ_3_taggedReg___d636 >> 51u);
    DEF_channelOutQ_3_rw_enq_wget____d648 = INST_channelOutQ_3_rw_enq.METH_wget();
    DEF_IF_channelOutQ_3_taggedReg_35_BIT_51_36_THEN_c_ETC___d611 = DEF_channelOutQ_3_taggedReg_35_BIT_51___d675 ? (tUInt64)(2251799813685247llu & DEF_channelOutQ_3_taggedReg___d636) : 2251799813685247llu & (((562949953421311llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)15u & ((((tUInt8)((tUInt8)3u & (DEF_channelOutQ_3_taggedReg___d636 >> 49u))) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelOutQ_3_taggedReg___d636 >> 47u)))) << 4u) | ((tUInt8)15u & ((((tUInt8)((tUInt8)3u & (DEF_channelOutQ_3_taggedReg___d636 >> 45u))) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelOutQ_3_taggedReg___d636 >> 43u))))))) << 41u) | (2199023255551llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)((tUInt8)15u & (DEF_channelOutQ_3_taggedReg___d636 >> 39u))) << 4u) | (tUInt8)((tUInt8)15u & (DEF_channelOutQ_3_taggedReg___d636 >> 35u))))) << 33u) | (8589934591llu & ((((tUInt64)((tUInt32)(DEF_channelOutQ_3_taggedReg___d636 >> 3u))) << 1u) | (tUInt64)((tUInt8)((tUInt8)1u & (DEF_channelOutQ_3_taggedReg___d636 >> 2u))))))))) << 2u) | (tUInt64)((tUInt8)((tUInt8)3u & DEF_channelOutQ_3_taggedReg___d636)));
    INST_channelOutQ_3_pw_deq.METH_wset();
    PORT_channels_3_getNoCPacket_get = DEF_channelOutQ_3_rw_enq_whas____d683 ? DEF_channelOutQ_3_rw_enq_wget____d648 : DEF_IF_channelOutQ_3_taggedReg_35_BIT_51_36_THEN_c_ETC___d611;
    return PORT_channels_3_getNoCPacket_get;
  }
  
  tUInt8 MOD_mkNode::METH_RDY_channels_3_getNoCPacket_get()
  {
    DEF_channelOutQ_3_rw_enq_whas____d683 = INST_channelOutQ_3_rw_enq.METH_whas();
    DEF_channelOutQ_3_taggedReg___d636 = INST_channelOutQ_3_taggedReg.METH_read();
    DEF_channelOutQ_3_taggedReg_35_BIT_51___d675 = (tUInt8)(DEF_channelOutQ_3_taggedReg___d636 >> 51u);
    DEF_CAN_FIRE_channels_3_getNoCPacket_get = DEF_channelOutQ_3_taggedReg_35_BIT_51___d675 || DEF_channelOutQ_3_rw_enq_whas____d683;
    PORT_RDY_channels_3_getNoCPacket_get = DEF_CAN_FIRE_channels_3_getNoCPacket_get;
    return PORT_RDY_channels_3_getNoCPacket_get;
  }
  
  void MOD_mkNode::METH_channels_4_putNoCPacket_put(tUInt64 ARG_channels_4_putNoCPacket_put)
  {
    PORT_EN_channels_4_putNoCPacket_put = (tUInt8)1u;
    DEF_WILL_FIRE_channels_4_putNoCPacket_put = (tUInt8)1u;
    PORT_channels_4_putNoCPacket_put = ARG_channels_4_putNoCPacket_put;
    INST_channelInQ_4_enqw.METH_wset(ARG_channels_4_putNoCPacket_put);
  }
  
  tUInt8 MOD_mkNode::METH_RDY_channels_4_putNoCPacket_put()
  {
    DEF_CAN_FIRE_channels_4_putNoCPacket_put = INST_channelInQ_4_ff.METH_i_notFull();
    PORT_RDY_channels_4_putNoCPacket_put = DEF_CAN_FIRE_channels_4_putNoCPacket_put;
    return PORT_RDY_channels_4_putNoCPacket_put;
  }
  
  tUInt64 MOD_mkNode::METH_channels_4_getNoCPacket_get()
  {
    tUInt64 DEF_IF_channelOutQ_4_taggedReg_25_BIT_51_26_THEN_c_ETC___d626;
    PORT_EN_channels_4_getNoCPacket_get = (tUInt8)1u;
    DEF_WILL_FIRE_channels_4_getNoCPacket_get = (tUInt8)1u;
    DEF_channelOutQ_4_rw_enq_whas____d685 = INST_channelOutQ_4_rw_enq.METH_whas();
    DEF_channelOutQ_4_taggedReg___d637 = INST_channelOutQ_4_taggedReg.METH_read();
    DEF_channelOutQ_4_taggedReg_25_BIT_51___d674 = (tUInt8)(DEF_channelOutQ_4_taggedReg___d637 >> 51u);
    DEF_channelOutQ_4_rw_enq_wget____d649 = INST_channelOutQ_4_rw_enq.METH_wget();
    DEF_IF_channelOutQ_4_taggedReg_25_BIT_51_26_THEN_c_ETC___d626 = DEF_channelOutQ_4_taggedReg_25_BIT_51___d674 ? (tUInt64)(2251799813685247llu & DEF_channelOutQ_4_taggedReg___d637) : 2251799813685247llu & (((562949953421311llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)15u & ((((tUInt8)((tUInt8)3u & (DEF_channelOutQ_4_taggedReg___d637 >> 49u))) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelOutQ_4_taggedReg___d637 >> 47u)))) << 4u) | ((tUInt8)15u & ((((tUInt8)((tUInt8)3u & (DEF_channelOutQ_4_taggedReg___d637 >> 45u))) << 2u) | (tUInt8)((tUInt8)3u & (DEF_channelOutQ_4_taggedReg___d637 >> 43u))))))) << 41u) | (2199023255551llu & ((((tUInt64)((tUInt8)255u & ((((tUInt8)((tUInt8)15u & (DEF_channelOutQ_4_taggedReg___d637 >> 39u))) << 4u) | (tUInt8)((tUInt8)15u & (DEF_channelOutQ_4_taggedReg___d637 >> 35u))))) << 33u) | (8589934591llu & ((((tUInt64)((tUInt32)(DEF_channelOutQ_4_taggedReg___d637 >> 3u))) << 1u) | (tUInt64)((tUInt8)((tUInt8)1u & (DEF_channelOutQ_4_taggedReg___d637 >> 2u))))))))) << 2u) | (tUInt64)((tUInt8)((tUInt8)3u & DEF_channelOutQ_4_taggedReg___d637)));
    INST_channelOutQ_4_pw_deq.METH_wset();
    PORT_channels_4_getNoCPacket_get = DEF_channelOutQ_4_rw_enq_whas____d685 ? DEF_channelOutQ_4_rw_enq_wget____d649 : DEF_IF_channelOutQ_4_taggedReg_25_BIT_51_26_THEN_c_ETC___d626;
    return PORT_channels_4_getNoCPacket_get;
  }
  
  tUInt8 MOD_mkNode::METH_RDY_channels_4_getNoCPacket_get()
  {
    DEF_channelOutQ_4_rw_enq_whas____d685 = INST_channelOutQ_4_rw_enq.METH_whas();
    DEF_channelOutQ_4_taggedReg___d637 = INST_channelOutQ_4_taggedReg.METH_read();
    DEF_channelOutQ_4_taggedReg_25_BIT_51___d674 = (tUInt8)(DEF_channelOutQ_4_taggedReg___d637 >> 51u);
    DEF_CAN_FIRE_channels_4_getNoCPacket_get = DEF_channelOutQ_4_taggedReg_25_BIT_51___d674 || DEF_channelOutQ_4_rw_enq_whas____d685;
    PORT_RDY_channels_4_getNoCPacket_get = DEF_CAN_FIRE_channels_4_getNoCPacket_get;
    return PORT_RDY_channels_4_getNoCPacket_get;
  }
  
  
  /* Reset routines */
  
  void MOD_mkNode::reset_RST_N(tUInt8 ARG_rst_in)
  {
    PORT_RST_N = ARG_rst_in;
    INST_routePacketQ.reset_RST_N(ARG_rst_in);
    INST_outputChannelArbiter_priority_vector.reset_RST_N(ARG_rst_in);
    INST_inputChannelArbiter_priority_vector.reset_RST_N(ARG_rst_in);
    INST_channelOutQ_4_taggedReg.reset_RST_N(ARG_rst_in);
    INST_channelOutQ_3_taggedReg.reset_RST_N(ARG_rst_in);
    INST_channelOutQ_2_taggedReg.reset_RST_N(ARG_rst_in);
    INST_channelOutQ_1_taggedReg.reset_RST_N(ARG_rst_in);
    INST_channelOutQ_0_taggedReg.reset_RST_N(ARG_rst_in);
    INST_channelInQ_4_ff.reset_RST_N(ARG_rst_in);
    INST_channelInQ_3_ff.reset_RST_N(ARG_rst_in);
    INST_channelInQ_2_ff.reset_RST_N(ARG_rst_in);
    INST_channelInQ_1_ff.reset_RST_N(ARG_rst_in);
    INST_channelInQ_0_ff.reset_RST_N(ARG_rst_in);
  }
  
  
  /* Static handles to reset routines */
  
  
  /* Functions for the parent module to register its reset fns */
  
  
  /* Functions to set the elaborated clock id */
  
  void MOD_mkNode::set_clk_0(char const *s)
  {
    __clk_handle_0 = bk_get_or_define_clock(s);
  }
  
  
  /* State dumping routine */
  void MOD_mkNode::dump_state(unsigned int indent)
  {
    printf("%*s%s:\n", indent, "", inst_name);
    INST_channelInQ_0_dequeueing.dump_state(indent + 2u);
    INST_channelInQ_0_enqw.dump_state(indent + 2u);
    INST_channelInQ_0_ff.dump_state(indent + 2u);
    INST_channelInQ_0_firstValid.dump_state(indent + 2u);
    INST_channelInQ_1_dequeueing.dump_state(indent + 2u);
    INST_channelInQ_1_enqw.dump_state(indent + 2u);
    INST_channelInQ_1_ff.dump_state(indent + 2u);
    INST_channelInQ_1_firstValid.dump_state(indent + 2u);
    INST_channelInQ_2_dequeueing.dump_state(indent + 2u);
    INST_channelInQ_2_enqw.dump_state(indent + 2u);
    INST_channelInQ_2_ff.dump_state(indent + 2u);
    INST_channelInQ_2_firstValid.dump_state(indent + 2u);
    INST_channelInQ_3_dequeueing.dump_state(indent + 2u);
    INST_channelInQ_3_enqw.dump_state(indent + 2u);
    INST_channelInQ_3_ff.dump_state(indent + 2u);
    INST_channelInQ_3_firstValid.dump_state(indent + 2u);
    INST_channelInQ_4_dequeueing.dump_state(indent + 2u);
    INST_channelInQ_4_enqw.dump_state(indent + 2u);
    INST_channelInQ_4_ff.dump_state(indent + 2u);
    INST_channelInQ_4_firstValid.dump_state(indent + 2u);
    INST_channelOutQ_0_pw_deq.dump_state(indent + 2u);
    INST_channelOutQ_0_rw_enq.dump_state(indent + 2u);
    INST_channelOutQ_0_taggedReg.dump_state(indent + 2u);
    INST_channelOutQ_1_pw_deq.dump_state(indent + 2u);
    INST_channelOutQ_1_rw_enq.dump_state(indent + 2u);
    INST_channelOutQ_1_taggedReg.dump_state(indent + 2u);
    INST_channelOutQ_2_pw_deq.dump_state(indent + 2u);
    INST_channelOutQ_2_rw_enq.dump_state(indent + 2u);
    INST_channelOutQ_2_taggedReg.dump_state(indent + 2u);
    INST_channelOutQ_3_pw_deq.dump_state(indent + 2u);
    INST_channelOutQ_3_rw_enq.dump_state(indent + 2u);
    INST_channelOutQ_3_taggedReg.dump_state(indent + 2u);
    INST_channelOutQ_4_pw_deq.dump_state(indent + 2u);
    INST_channelOutQ_4_rw_enq.dump_state(indent + 2u);
    INST_channelOutQ_4_taggedReg.dump_state(indent + 2u);
    INST_inputChannelArbiter_grant_id_wire.dump_state(indent + 2u);
    INST_inputChannelArbiter_grant_vector.dump_state(indent + 2u);
    INST_inputChannelArbiter_priority_vector.dump_state(indent + 2u);
    INST_inputChannelArbiter_request_vector.dump_state(indent + 2u);
    INST_inputChannelArbiter_request_vector_1.dump_state(indent + 2u);
    INST_inputChannelArbiter_request_vector_2.dump_state(indent + 2u);
    INST_inputChannelArbiter_request_vector_3.dump_state(indent + 2u);
    INST_inputChannelArbiter_request_vector_4.dump_state(indent + 2u);
    INST_outputChannelArbiter_grant_id_wire.dump_state(indent + 2u);
    INST_outputChannelArbiter_grant_vector.dump_state(indent + 2u);
    INST_outputChannelArbiter_priority_vector.dump_state(indent + 2u);
    INST_outputChannelArbiter_request_vector.dump_state(indent + 2u);
    INST_outputChannelArbiter_request_vector_1.dump_state(indent + 2u);
    INST_outputChannelArbiter_request_vector_2.dump_state(indent + 2u);
    INST_outputChannelArbiter_request_vector_3.dump_state(indent + 2u);
    INST_outputChannelArbiter_request_vector_4.dump_state(indent + 2u);
    INST_routePacketQ.dump_state(indent + 2u);
  }
  
  
  /* VCD dumping routines */
  
  unsigned int MOD_mkNode::dump_VCD_defs(unsigned int levels)
  {
    fprintf(vcd_file, "$scope module %s $end\n", inst_name);
    vcd_num = vcd_reserve_ids(220u);
    unsigned int num = vcd_num;
    for (unsigned int hdl = 0u; hdl < bk_num_clocks(); ++hdl)
      vcd_add_clock_def(this, bk_clock_name(hdl), bk_clock_vcd_num(hdl));
    vcd_write_def(bk_clock_vcd_num(__clk_handle_0), "CLK", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelInQ_0_dequeue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelInQ_0_enqueue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelInQ_1_dequeue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelInQ_1_enqueue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelInQ_2_dequeue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelInQ_2_enqueue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelInQ_3_dequeue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelInQ_3_enqueue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelInQ_4_dequeue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelInQ_4_enqueue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelOutQ_0_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelOutQ_0_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelOutQ_1_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelOutQ_1_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelOutQ_2_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelOutQ_2_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelOutQ_3_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelOutQ_3_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelOutQ_4_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_channelOutQ_4_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_inputArbitratei", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_inputArbitratei_1", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_inputArbitratei_2", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_inputArbitratei_3", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_inputArbitratei_4", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_inputChannelArbiterRequest", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_inputChannelArbiter_every", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_outputChannelArbiter_every", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_routePacketEast", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_routePacketHome", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_routePacketNorth", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_routePacketSouth", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_RL_routePacketWest", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE___me_check_23", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE___me_check_28", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE___me_check_29", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE___me_check_30", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE___me_check_31", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_channels_0_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_channels_0_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_channels_1_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_channels_1_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_channels_2_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_channels_2_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_channels_3_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_channels_3_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_channels_4_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "CAN_FIRE_channels_4_putNoCPacket_put", 1u);
    vcd_write_def(num++, "RST_N", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelInQ_0_dequeue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelInQ_0_enqueue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelInQ_1_dequeue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelInQ_1_enqueue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelInQ_2_dequeue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelInQ_2_enqueue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelInQ_3_dequeue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelInQ_3_enqueue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelInQ_4_dequeue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelInQ_4_enqueue", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelOutQ_0_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelOutQ_0_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelOutQ_1_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelOutQ_1_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelOutQ_2_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelOutQ_2_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelOutQ_3_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelOutQ_3_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelOutQ_4_rule_deq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_channelOutQ_4_rule_enq", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_inputArbitratei", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_inputArbitratei_1", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_inputArbitratei_2", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_inputArbitratei_3", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_inputArbitratei_4", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_inputChannelArbiterRequest", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_inputChannelArbiter_every", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_outputChannelArbiter_every", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_routePacketEast", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_routePacketHome", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_routePacketNorth", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_routePacketSouth", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_RL_routePacketWest", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE___me_check_23", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE___me_check_28", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE___me_check_29", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE___me_check_30", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE___me_check_31", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_channels_0_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_channels_0_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_channels_1_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_channels_1_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_channels_2_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_channels_2_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_channels_3_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_channels_3_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_channels_4_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "WILL_FIRE_channels_4_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "_0_CONCAT_DONTCARE___d644", 52u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "_0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657", 4u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_0_enqw_wget____d819", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_0_enqw_whas____d658", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_0_ff_i_notEmpty____d659", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_1_enqw_wget____d820", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_1_enqw_whas____d660", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_1_ff_i_notEmpty____d661", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_2_enqw_wget____d821", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_2_enqw_whas____d663", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_2_ff_i_notEmpty____d664", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_3_enqw_wget____d822", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_3_enqw_whas____d666", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_3_ff_i_notEmpty____d667", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_4_enqw_wget____d823", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_4_enqw_whas____d669", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelInQ_4_ff_i_notEmpty____d670", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_0_rw_enq_wget____d645", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_0_rw_enq_whas____d678", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_0_taggedReg_44_BIT_51___d676", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_0_taggedReg___d633", 52u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_1_rw_enq_wget____d646", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_1_rw_enq_whas____d679", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_1_taggedReg_07_BIT_51___d672", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_1_taggedReg___d634", 52u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_2_rw_enq_wget____d647", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_2_rw_enq_whas____d681", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_2_taggedReg_17_BIT_51___d673", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_2_taggedReg___d635", 52u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_3_rw_enq_wget____d648", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_3_rw_enq_whas____d683", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_3_taggedReg_35_BIT_51___d675", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_3_taggedReg___d636", 52u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_4_rw_enq_wget____d649", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_4_rw_enq_whas____d685", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_4_taggedReg_25_BIT_51___d674", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channelOutQ_4_taggedReg___d637", 52u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "routePacketQ_first____d656", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "x__h16124", 4u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "x__h16126", 4u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "y__h16125", 4u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "EN_channels_0_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "EN_channels_0_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "EN_channels_1_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "EN_channels_1_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "EN_channels_2_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "EN_channels_2_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "EN_channels_3_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "EN_channels_3_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "EN_channels_4_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "EN_channels_4_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "RDY_channels_0_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "RDY_channels_0_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "RDY_channels_1_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "RDY_channels_1_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "RDY_channels_2_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "RDY_channels_2_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "RDY_channels_3_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "RDY_channels_3_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "RDY_channels_4_getNoCPacket_get", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "RDY_channels_4_putNoCPacket_put", 1u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channels_0_getNoCPacket_get", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channels_0_putNoCPacket_put", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channels_1_getNoCPacket_get", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channels_1_putNoCPacket_put", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channels_2_getNoCPacket_get", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channels_2_putNoCPacket_put", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channels_3_getNoCPacket_get", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channels_3_putNoCPacket_put", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channels_4_getNoCPacket_get", 51u);
    vcd_set_clock(num, __clk_handle_0);
    vcd_write_def(num++, "channels_4_putNoCPacket_put", 51u);
    num = INST_channelInQ_0_dequeueing.dump_VCD_defs(num);
    num = INST_channelInQ_0_enqw.dump_VCD_defs(num);
    num = INST_channelInQ_0_ff.dump_VCD_defs(num);
    num = INST_channelInQ_0_firstValid.dump_VCD_defs(num);
    num = INST_channelInQ_1_dequeueing.dump_VCD_defs(num);
    num = INST_channelInQ_1_enqw.dump_VCD_defs(num);
    num = INST_channelInQ_1_ff.dump_VCD_defs(num);
    num = INST_channelInQ_1_firstValid.dump_VCD_defs(num);
    num = INST_channelInQ_2_dequeueing.dump_VCD_defs(num);
    num = INST_channelInQ_2_enqw.dump_VCD_defs(num);
    num = INST_channelInQ_2_ff.dump_VCD_defs(num);
    num = INST_channelInQ_2_firstValid.dump_VCD_defs(num);
    num = INST_channelInQ_3_dequeueing.dump_VCD_defs(num);
    num = INST_channelInQ_3_enqw.dump_VCD_defs(num);
    num = INST_channelInQ_3_ff.dump_VCD_defs(num);
    num = INST_channelInQ_3_firstValid.dump_VCD_defs(num);
    num = INST_channelInQ_4_dequeueing.dump_VCD_defs(num);
    num = INST_channelInQ_4_enqw.dump_VCD_defs(num);
    num = INST_channelInQ_4_ff.dump_VCD_defs(num);
    num = INST_channelInQ_4_firstValid.dump_VCD_defs(num);
    num = INST_channelOutQ_0_pw_deq.dump_VCD_defs(num);
    num = INST_channelOutQ_0_rw_enq.dump_VCD_defs(num);
    num = INST_channelOutQ_0_taggedReg.dump_VCD_defs(num);
    num = INST_channelOutQ_1_pw_deq.dump_VCD_defs(num);
    num = INST_channelOutQ_1_rw_enq.dump_VCD_defs(num);
    num = INST_channelOutQ_1_taggedReg.dump_VCD_defs(num);
    num = INST_channelOutQ_2_pw_deq.dump_VCD_defs(num);
    num = INST_channelOutQ_2_rw_enq.dump_VCD_defs(num);
    num = INST_channelOutQ_2_taggedReg.dump_VCD_defs(num);
    num = INST_channelOutQ_3_pw_deq.dump_VCD_defs(num);
    num = INST_channelOutQ_3_rw_enq.dump_VCD_defs(num);
    num = INST_channelOutQ_3_taggedReg.dump_VCD_defs(num);
    num = INST_channelOutQ_4_pw_deq.dump_VCD_defs(num);
    num = INST_channelOutQ_4_rw_enq.dump_VCD_defs(num);
    num = INST_channelOutQ_4_taggedReg.dump_VCD_defs(num);
    num = INST_inputChannelArbiter_grant_id_wire.dump_VCD_defs(num);
    num = INST_inputChannelArbiter_grant_vector.dump_VCD_defs(num);
    num = INST_inputChannelArbiter_priority_vector.dump_VCD_defs(num);
    num = INST_inputChannelArbiter_request_vector.dump_VCD_defs(num);
    num = INST_inputChannelArbiter_request_vector_1.dump_VCD_defs(num);
    num = INST_inputChannelArbiter_request_vector_2.dump_VCD_defs(num);
    num = INST_inputChannelArbiter_request_vector_3.dump_VCD_defs(num);
    num = INST_inputChannelArbiter_request_vector_4.dump_VCD_defs(num);
    num = INST_outputChannelArbiter_grant_id_wire.dump_VCD_defs(num);
    num = INST_outputChannelArbiter_grant_vector.dump_VCD_defs(num);
    num = INST_outputChannelArbiter_priority_vector.dump_VCD_defs(num);
    num = INST_outputChannelArbiter_request_vector.dump_VCD_defs(num);
    num = INST_outputChannelArbiter_request_vector_1.dump_VCD_defs(num);
    num = INST_outputChannelArbiter_request_vector_2.dump_VCD_defs(num);
    num = INST_outputChannelArbiter_request_vector_3.dump_VCD_defs(num);
    num = INST_outputChannelArbiter_request_vector_4.dump_VCD_defs(num);
    num = INST_routePacketQ.dump_VCD_defs(num);
    fprintf(vcd_file, "$upscope $end\n");
    return num;
  }
  
  void MOD_mkNode::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkNode &backing)
  {
    vcd_defs(dt, backing);
    vcd_prims(dt, backing);
  }
  
  void MOD_mkNode::vcd_defs(tVCDDumpType dt, MOD_mkNode &backing)
  {
    unsigned int num = vcd_num;
    if (dt == VCD_DUMP_XS)
    {
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 52u);
      vcd_write_x(num++, 4u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 52u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 52u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 52u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 52u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 52u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 4u);
      vcd_write_x(num++, 4u);
      vcd_write_x(num++, 4u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 1u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 51u);
      vcd_write_x(num++, 51u);
    }
    else
      if (dt == VCD_DUMP_CHANGES)
      {
	if ((backing.DEF_CAN_FIRE_RL_channelInQ_0_dequeue) != DEF_CAN_FIRE_RL_channelInQ_0_dequeue)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelInQ_0_dequeue, 1u);
	  backing.DEF_CAN_FIRE_RL_channelInQ_0_dequeue = DEF_CAN_FIRE_RL_channelInQ_0_dequeue;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelInQ_0_enqueue) != DEF_CAN_FIRE_RL_channelInQ_0_enqueue)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelInQ_0_enqueue, 1u);
	  backing.DEF_CAN_FIRE_RL_channelInQ_0_enqueue = DEF_CAN_FIRE_RL_channelInQ_0_enqueue;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelInQ_1_dequeue) != DEF_CAN_FIRE_RL_channelInQ_1_dequeue)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelInQ_1_dequeue, 1u);
	  backing.DEF_CAN_FIRE_RL_channelInQ_1_dequeue = DEF_CAN_FIRE_RL_channelInQ_1_dequeue;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelInQ_1_enqueue) != DEF_CAN_FIRE_RL_channelInQ_1_enqueue)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelInQ_1_enqueue, 1u);
	  backing.DEF_CAN_FIRE_RL_channelInQ_1_enqueue = DEF_CAN_FIRE_RL_channelInQ_1_enqueue;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelInQ_2_dequeue) != DEF_CAN_FIRE_RL_channelInQ_2_dequeue)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelInQ_2_dequeue, 1u);
	  backing.DEF_CAN_FIRE_RL_channelInQ_2_dequeue = DEF_CAN_FIRE_RL_channelInQ_2_dequeue;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelInQ_2_enqueue) != DEF_CAN_FIRE_RL_channelInQ_2_enqueue)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelInQ_2_enqueue, 1u);
	  backing.DEF_CAN_FIRE_RL_channelInQ_2_enqueue = DEF_CAN_FIRE_RL_channelInQ_2_enqueue;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelInQ_3_dequeue) != DEF_CAN_FIRE_RL_channelInQ_3_dequeue)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelInQ_3_dequeue, 1u);
	  backing.DEF_CAN_FIRE_RL_channelInQ_3_dequeue = DEF_CAN_FIRE_RL_channelInQ_3_dequeue;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelInQ_3_enqueue) != DEF_CAN_FIRE_RL_channelInQ_3_enqueue)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelInQ_3_enqueue, 1u);
	  backing.DEF_CAN_FIRE_RL_channelInQ_3_enqueue = DEF_CAN_FIRE_RL_channelInQ_3_enqueue;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelInQ_4_dequeue) != DEF_CAN_FIRE_RL_channelInQ_4_dequeue)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelInQ_4_dequeue, 1u);
	  backing.DEF_CAN_FIRE_RL_channelInQ_4_dequeue = DEF_CAN_FIRE_RL_channelInQ_4_dequeue;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelInQ_4_enqueue) != DEF_CAN_FIRE_RL_channelInQ_4_enqueue)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelInQ_4_enqueue, 1u);
	  backing.DEF_CAN_FIRE_RL_channelInQ_4_enqueue = DEF_CAN_FIRE_RL_channelInQ_4_enqueue;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelOutQ_0_rule_deq) != DEF_CAN_FIRE_RL_channelOutQ_0_rule_deq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelOutQ_0_rule_deq, 1u);
	  backing.DEF_CAN_FIRE_RL_channelOutQ_0_rule_deq = DEF_CAN_FIRE_RL_channelOutQ_0_rule_deq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelOutQ_0_rule_enq) != DEF_CAN_FIRE_RL_channelOutQ_0_rule_enq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelOutQ_0_rule_enq, 1u);
	  backing.DEF_CAN_FIRE_RL_channelOutQ_0_rule_enq = DEF_CAN_FIRE_RL_channelOutQ_0_rule_enq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelOutQ_1_rule_deq) != DEF_CAN_FIRE_RL_channelOutQ_1_rule_deq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelOutQ_1_rule_deq, 1u);
	  backing.DEF_CAN_FIRE_RL_channelOutQ_1_rule_deq = DEF_CAN_FIRE_RL_channelOutQ_1_rule_deq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelOutQ_1_rule_enq) != DEF_CAN_FIRE_RL_channelOutQ_1_rule_enq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelOutQ_1_rule_enq, 1u);
	  backing.DEF_CAN_FIRE_RL_channelOutQ_1_rule_enq = DEF_CAN_FIRE_RL_channelOutQ_1_rule_enq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelOutQ_2_rule_deq) != DEF_CAN_FIRE_RL_channelOutQ_2_rule_deq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelOutQ_2_rule_deq, 1u);
	  backing.DEF_CAN_FIRE_RL_channelOutQ_2_rule_deq = DEF_CAN_FIRE_RL_channelOutQ_2_rule_deq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelOutQ_2_rule_enq) != DEF_CAN_FIRE_RL_channelOutQ_2_rule_enq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelOutQ_2_rule_enq, 1u);
	  backing.DEF_CAN_FIRE_RL_channelOutQ_2_rule_enq = DEF_CAN_FIRE_RL_channelOutQ_2_rule_enq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelOutQ_3_rule_deq) != DEF_CAN_FIRE_RL_channelOutQ_3_rule_deq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelOutQ_3_rule_deq, 1u);
	  backing.DEF_CAN_FIRE_RL_channelOutQ_3_rule_deq = DEF_CAN_FIRE_RL_channelOutQ_3_rule_deq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelOutQ_3_rule_enq) != DEF_CAN_FIRE_RL_channelOutQ_3_rule_enq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelOutQ_3_rule_enq, 1u);
	  backing.DEF_CAN_FIRE_RL_channelOutQ_3_rule_enq = DEF_CAN_FIRE_RL_channelOutQ_3_rule_enq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelOutQ_4_rule_deq) != DEF_CAN_FIRE_RL_channelOutQ_4_rule_deq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelOutQ_4_rule_deq, 1u);
	  backing.DEF_CAN_FIRE_RL_channelOutQ_4_rule_deq = DEF_CAN_FIRE_RL_channelOutQ_4_rule_deq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_channelOutQ_4_rule_enq) != DEF_CAN_FIRE_RL_channelOutQ_4_rule_enq)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_channelOutQ_4_rule_enq, 1u);
	  backing.DEF_CAN_FIRE_RL_channelOutQ_4_rule_enq = DEF_CAN_FIRE_RL_channelOutQ_4_rule_enq;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_inputArbitratei) != DEF_CAN_FIRE_RL_inputArbitratei)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_inputArbitratei, 1u);
	  backing.DEF_CAN_FIRE_RL_inputArbitratei = DEF_CAN_FIRE_RL_inputArbitratei;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_inputArbitratei_1) != DEF_CAN_FIRE_RL_inputArbitratei_1)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_inputArbitratei_1, 1u);
	  backing.DEF_CAN_FIRE_RL_inputArbitratei_1 = DEF_CAN_FIRE_RL_inputArbitratei_1;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_inputArbitratei_2) != DEF_CAN_FIRE_RL_inputArbitratei_2)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_inputArbitratei_2, 1u);
	  backing.DEF_CAN_FIRE_RL_inputArbitratei_2 = DEF_CAN_FIRE_RL_inputArbitratei_2;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_inputArbitratei_3) != DEF_CAN_FIRE_RL_inputArbitratei_3)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_inputArbitratei_3, 1u);
	  backing.DEF_CAN_FIRE_RL_inputArbitratei_3 = DEF_CAN_FIRE_RL_inputArbitratei_3;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_inputArbitratei_4) != DEF_CAN_FIRE_RL_inputArbitratei_4)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_inputArbitratei_4, 1u);
	  backing.DEF_CAN_FIRE_RL_inputArbitratei_4 = DEF_CAN_FIRE_RL_inputArbitratei_4;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_inputChannelArbiterRequest) != DEF_CAN_FIRE_RL_inputChannelArbiterRequest)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_inputChannelArbiterRequest, 1u);
	  backing.DEF_CAN_FIRE_RL_inputChannelArbiterRequest = DEF_CAN_FIRE_RL_inputChannelArbiterRequest;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_inputChannelArbiter_every) != DEF_CAN_FIRE_RL_inputChannelArbiter_every)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_inputChannelArbiter_every, 1u);
	  backing.DEF_CAN_FIRE_RL_inputChannelArbiter_every = DEF_CAN_FIRE_RL_inputChannelArbiter_every;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_outputChannelArbiter_every) != DEF_CAN_FIRE_RL_outputChannelArbiter_every)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_outputChannelArbiter_every, 1u);
	  backing.DEF_CAN_FIRE_RL_outputChannelArbiter_every = DEF_CAN_FIRE_RL_outputChannelArbiter_every;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_routePacketEast) != DEF_CAN_FIRE_RL_routePacketEast)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_routePacketEast, 1u);
	  backing.DEF_CAN_FIRE_RL_routePacketEast = DEF_CAN_FIRE_RL_routePacketEast;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_routePacketHome) != DEF_CAN_FIRE_RL_routePacketHome)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_routePacketHome, 1u);
	  backing.DEF_CAN_FIRE_RL_routePacketHome = DEF_CAN_FIRE_RL_routePacketHome;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_routePacketNorth) != DEF_CAN_FIRE_RL_routePacketNorth)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_routePacketNorth, 1u);
	  backing.DEF_CAN_FIRE_RL_routePacketNorth = DEF_CAN_FIRE_RL_routePacketNorth;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_routePacketSouth) != DEF_CAN_FIRE_RL_routePacketSouth)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_routePacketSouth, 1u);
	  backing.DEF_CAN_FIRE_RL_routePacketSouth = DEF_CAN_FIRE_RL_routePacketSouth;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_RL_routePacketWest) != DEF_CAN_FIRE_RL_routePacketWest)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_RL_routePacketWest, 1u);
	  backing.DEF_CAN_FIRE_RL_routePacketWest = DEF_CAN_FIRE_RL_routePacketWest;
	}
	++num;
	if ((backing.DEF_CAN_FIRE___me_check_23) != DEF_CAN_FIRE___me_check_23)
	{
	  vcd_write_val(num, DEF_CAN_FIRE___me_check_23, 1u);
	  backing.DEF_CAN_FIRE___me_check_23 = DEF_CAN_FIRE___me_check_23;
	}
	++num;
	if ((backing.DEF_CAN_FIRE___me_check_28) != DEF_CAN_FIRE___me_check_28)
	{
	  vcd_write_val(num, DEF_CAN_FIRE___me_check_28, 1u);
	  backing.DEF_CAN_FIRE___me_check_28 = DEF_CAN_FIRE___me_check_28;
	}
	++num;
	if ((backing.DEF_CAN_FIRE___me_check_29) != DEF_CAN_FIRE___me_check_29)
	{
	  vcd_write_val(num, DEF_CAN_FIRE___me_check_29, 1u);
	  backing.DEF_CAN_FIRE___me_check_29 = DEF_CAN_FIRE___me_check_29;
	}
	++num;
	if ((backing.DEF_CAN_FIRE___me_check_30) != DEF_CAN_FIRE___me_check_30)
	{
	  vcd_write_val(num, DEF_CAN_FIRE___me_check_30, 1u);
	  backing.DEF_CAN_FIRE___me_check_30 = DEF_CAN_FIRE___me_check_30;
	}
	++num;
	if ((backing.DEF_CAN_FIRE___me_check_31) != DEF_CAN_FIRE___me_check_31)
	{
	  vcd_write_val(num, DEF_CAN_FIRE___me_check_31, 1u);
	  backing.DEF_CAN_FIRE___me_check_31 = DEF_CAN_FIRE___me_check_31;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_channels_0_getNoCPacket_get) != DEF_CAN_FIRE_channels_0_getNoCPacket_get)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_channels_0_getNoCPacket_get, 1u);
	  backing.DEF_CAN_FIRE_channels_0_getNoCPacket_get = DEF_CAN_FIRE_channels_0_getNoCPacket_get;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_channels_0_putNoCPacket_put) != DEF_CAN_FIRE_channels_0_putNoCPacket_put)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_channels_0_putNoCPacket_put, 1u);
	  backing.DEF_CAN_FIRE_channels_0_putNoCPacket_put = DEF_CAN_FIRE_channels_0_putNoCPacket_put;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_channels_1_getNoCPacket_get) != DEF_CAN_FIRE_channels_1_getNoCPacket_get)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_channels_1_getNoCPacket_get, 1u);
	  backing.DEF_CAN_FIRE_channels_1_getNoCPacket_get = DEF_CAN_FIRE_channels_1_getNoCPacket_get;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_channels_1_putNoCPacket_put) != DEF_CAN_FIRE_channels_1_putNoCPacket_put)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_channels_1_putNoCPacket_put, 1u);
	  backing.DEF_CAN_FIRE_channels_1_putNoCPacket_put = DEF_CAN_FIRE_channels_1_putNoCPacket_put;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_channels_2_getNoCPacket_get) != DEF_CAN_FIRE_channels_2_getNoCPacket_get)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_channels_2_getNoCPacket_get, 1u);
	  backing.DEF_CAN_FIRE_channels_2_getNoCPacket_get = DEF_CAN_FIRE_channels_2_getNoCPacket_get;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_channels_2_putNoCPacket_put) != DEF_CAN_FIRE_channels_2_putNoCPacket_put)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_channels_2_putNoCPacket_put, 1u);
	  backing.DEF_CAN_FIRE_channels_2_putNoCPacket_put = DEF_CAN_FIRE_channels_2_putNoCPacket_put;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_channels_3_getNoCPacket_get) != DEF_CAN_FIRE_channels_3_getNoCPacket_get)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_channels_3_getNoCPacket_get, 1u);
	  backing.DEF_CAN_FIRE_channels_3_getNoCPacket_get = DEF_CAN_FIRE_channels_3_getNoCPacket_get;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_channels_3_putNoCPacket_put) != DEF_CAN_FIRE_channels_3_putNoCPacket_put)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_channels_3_putNoCPacket_put, 1u);
	  backing.DEF_CAN_FIRE_channels_3_putNoCPacket_put = DEF_CAN_FIRE_channels_3_putNoCPacket_put;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_channels_4_getNoCPacket_get) != DEF_CAN_FIRE_channels_4_getNoCPacket_get)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_channels_4_getNoCPacket_get, 1u);
	  backing.DEF_CAN_FIRE_channels_4_getNoCPacket_get = DEF_CAN_FIRE_channels_4_getNoCPacket_get;
	}
	++num;
	if ((backing.DEF_CAN_FIRE_channels_4_putNoCPacket_put) != DEF_CAN_FIRE_channels_4_putNoCPacket_put)
	{
	  vcd_write_val(num, DEF_CAN_FIRE_channels_4_putNoCPacket_put, 1u);
	  backing.DEF_CAN_FIRE_channels_4_putNoCPacket_put = DEF_CAN_FIRE_channels_4_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_RST_N) != PORT_RST_N)
	{
	  vcd_write_val(num, PORT_RST_N, 1u);
	  backing.PORT_RST_N = PORT_RST_N;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelInQ_0_dequeue) != DEF_WILL_FIRE_RL_channelInQ_0_dequeue)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelInQ_0_dequeue, 1u);
	  backing.DEF_WILL_FIRE_RL_channelInQ_0_dequeue = DEF_WILL_FIRE_RL_channelInQ_0_dequeue;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelInQ_0_enqueue) != DEF_WILL_FIRE_RL_channelInQ_0_enqueue)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelInQ_0_enqueue, 1u);
	  backing.DEF_WILL_FIRE_RL_channelInQ_0_enqueue = DEF_WILL_FIRE_RL_channelInQ_0_enqueue;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelInQ_1_dequeue) != DEF_WILL_FIRE_RL_channelInQ_1_dequeue)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelInQ_1_dequeue, 1u);
	  backing.DEF_WILL_FIRE_RL_channelInQ_1_dequeue = DEF_WILL_FIRE_RL_channelInQ_1_dequeue;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelInQ_1_enqueue) != DEF_WILL_FIRE_RL_channelInQ_1_enqueue)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelInQ_1_enqueue, 1u);
	  backing.DEF_WILL_FIRE_RL_channelInQ_1_enqueue = DEF_WILL_FIRE_RL_channelInQ_1_enqueue;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelInQ_2_dequeue) != DEF_WILL_FIRE_RL_channelInQ_2_dequeue)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelInQ_2_dequeue, 1u);
	  backing.DEF_WILL_FIRE_RL_channelInQ_2_dequeue = DEF_WILL_FIRE_RL_channelInQ_2_dequeue;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelInQ_2_enqueue) != DEF_WILL_FIRE_RL_channelInQ_2_enqueue)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelInQ_2_enqueue, 1u);
	  backing.DEF_WILL_FIRE_RL_channelInQ_2_enqueue = DEF_WILL_FIRE_RL_channelInQ_2_enqueue;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelInQ_3_dequeue) != DEF_WILL_FIRE_RL_channelInQ_3_dequeue)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelInQ_3_dequeue, 1u);
	  backing.DEF_WILL_FIRE_RL_channelInQ_3_dequeue = DEF_WILL_FIRE_RL_channelInQ_3_dequeue;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelInQ_3_enqueue) != DEF_WILL_FIRE_RL_channelInQ_3_enqueue)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelInQ_3_enqueue, 1u);
	  backing.DEF_WILL_FIRE_RL_channelInQ_3_enqueue = DEF_WILL_FIRE_RL_channelInQ_3_enqueue;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelInQ_4_dequeue) != DEF_WILL_FIRE_RL_channelInQ_4_dequeue)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelInQ_4_dequeue, 1u);
	  backing.DEF_WILL_FIRE_RL_channelInQ_4_dequeue = DEF_WILL_FIRE_RL_channelInQ_4_dequeue;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelInQ_4_enqueue) != DEF_WILL_FIRE_RL_channelInQ_4_enqueue)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelInQ_4_enqueue, 1u);
	  backing.DEF_WILL_FIRE_RL_channelInQ_4_enqueue = DEF_WILL_FIRE_RL_channelInQ_4_enqueue;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelOutQ_0_rule_deq) != DEF_WILL_FIRE_RL_channelOutQ_0_rule_deq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelOutQ_0_rule_deq, 1u);
	  backing.DEF_WILL_FIRE_RL_channelOutQ_0_rule_deq = DEF_WILL_FIRE_RL_channelOutQ_0_rule_deq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelOutQ_0_rule_enq) != DEF_WILL_FIRE_RL_channelOutQ_0_rule_enq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelOutQ_0_rule_enq, 1u);
	  backing.DEF_WILL_FIRE_RL_channelOutQ_0_rule_enq = DEF_WILL_FIRE_RL_channelOutQ_0_rule_enq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelOutQ_1_rule_deq) != DEF_WILL_FIRE_RL_channelOutQ_1_rule_deq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelOutQ_1_rule_deq, 1u);
	  backing.DEF_WILL_FIRE_RL_channelOutQ_1_rule_deq = DEF_WILL_FIRE_RL_channelOutQ_1_rule_deq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelOutQ_1_rule_enq) != DEF_WILL_FIRE_RL_channelOutQ_1_rule_enq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelOutQ_1_rule_enq, 1u);
	  backing.DEF_WILL_FIRE_RL_channelOutQ_1_rule_enq = DEF_WILL_FIRE_RL_channelOutQ_1_rule_enq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelOutQ_2_rule_deq) != DEF_WILL_FIRE_RL_channelOutQ_2_rule_deq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelOutQ_2_rule_deq, 1u);
	  backing.DEF_WILL_FIRE_RL_channelOutQ_2_rule_deq = DEF_WILL_FIRE_RL_channelOutQ_2_rule_deq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelOutQ_2_rule_enq) != DEF_WILL_FIRE_RL_channelOutQ_2_rule_enq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelOutQ_2_rule_enq, 1u);
	  backing.DEF_WILL_FIRE_RL_channelOutQ_2_rule_enq = DEF_WILL_FIRE_RL_channelOutQ_2_rule_enq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelOutQ_3_rule_deq) != DEF_WILL_FIRE_RL_channelOutQ_3_rule_deq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelOutQ_3_rule_deq, 1u);
	  backing.DEF_WILL_FIRE_RL_channelOutQ_3_rule_deq = DEF_WILL_FIRE_RL_channelOutQ_3_rule_deq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelOutQ_3_rule_enq) != DEF_WILL_FIRE_RL_channelOutQ_3_rule_enq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelOutQ_3_rule_enq, 1u);
	  backing.DEF_WILL_FIRE_RL_channelOutQ_3_rule_enq = DEF_WILL_FIRE_RL_channelOutQ_3_rule_enq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelOutQ_4_rule_deq) != DEF_WILL_FIRE_RL_channelOutQ_4_rule_deq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelOutQ_4_rule_deq, 1u);
	  backing.DEF_WILL_FIRE_RL_channelOutQ_4_rule_deq = DEF_WILL_FIRE_RL_channelOutQ_4_rule_deq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_channelOutQ_4_rule_enq) != DEF_WILL_FIRE_RL_channelOutQ_4_rule_enq)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_channelOutQ_4_rule_enq, 1u);
	  backing.DEF_WILL_FIRE_RL_channelOutQ_4_rule_enq = DEF_WILL_FIRE_RL_channelOutQ_4_rule_enq;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_inputArbitratei) != DEF_WILL_FIRE_RL_inputArbitratei)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_inputArbitratei, 1u);
	  backing.DEF_WILL_FIRE_RL_inputArbitratei = DEF_WILL_FIRE_RL_inputArbitratei;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_inputArbitratei_1) != DEF_WILL_FIRE_RL_inputArbitratei_1)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_inputArbitratei_1, 1u);
	  backing.DEF_WILL_FIRE_RL_inputArbitratei_1 = DEF_WILL_FIRE_RL_inputArbitratei_1;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_inputArbitratei_2) != DEF_WILL_FIRE_RL_inputArbitratei_2)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_inputArbitratei_2, 1u);
	  backing.DEF_WILL_FIRE_RL_inputArbitratei_2 = DEF_WILL_FIRE_RL_inputArbitratei_2;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_inputArbitratei_3) != DEF_WILL_FIRE_RL_inputArbitratei_3)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_inputArbitratei_3, 1u);
	  backing.DEF_WILL_FIRE_RL_inputArbitratei_3 = DEF_WILL_FIRE_RL_inputArbitratei_3;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_inputArbitratei_4) != DEF_WILL_FIRE_RL_inputArbitratei_4)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_inputArbitratei_4, 1u);
	  backing.DEF_WILL_FIRE_RL_inputArbitratei_4 = DEF_WILL_FIRE_RL_inputArbitratei_4;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_inputChannelArbiterRequest) != DEF_WILL_FIRE_RL_inputChannelArbiterRequest)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_inputChannelArbiterRequest, 1u);
	  backing.DEF_WILL_FIRE_RL_inputChannelArbiterRequest = DEF_WILL_FIRE_RL_inputChannelArbiterRequest;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_inputChannelArbiter_every) != DEF_WILL_FIRE_RL_inputChannelArbiter_every)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_inputChannelArbiter_every, 1u);
	  backing.DEF_WILL_FIRE_RL_inputChannelArbiter_every = DEF_WILL_FIRE_RL_inputChannelArbiter_every;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_outputChannelArbiter_every) != DEF_WILL_FIRE_RL_outputChannelArbiter_every)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_outputChannelArbiter_every, 1u);
	  backing.DEF_WILL_FIRE_RL_outputChannelArbiter_every = DEF_WILL_FIRE_RL_outputChannelArbiter_every;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_routePacketEast) != DEF_WILL_FIRE_RL_routePacketEast)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_routePacketEast, 1u);
	  backing.DEF_WILL_FIRE_RL_routePacketEast = DEF_WILL_FIRE_RL_routePacketEast;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_routePacketHome) != DEF_WILL_FIRE_RL_routePacketHome)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_routePacketHome, 1u);
	  backing.DEF_WILL_FIRE_RL_routePacketHome = DEF_WILL_FIRE_RL_routePacketHome;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_routePacketNorth) != DEF_WILL_FIRE_RL_routePacketNorth)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_routePacketNorth, 1u);
	  backing.DEF_WILL_FIRE_RL_routePacketNorth = DEF_WILL_FIRE_RL_routePacketNorth;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_routePacketSouth) != DEF_WILL_FIRE_RL_routePacketSouth)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_routePacketSouth, 1u);
	  backing.DEF_WILL_FIRE_RL_routePacketSouth = DEF_WILL_FIRE_RL_routePacketSouth;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_RL_routePacketWest) != DEF_WILL_FIRE_RL_routePacketWest)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_RL_routePacketWest, 1u);
	  backing.DEF_WILL_FIRE_RL_routePacketWest = DEF_WILL_FIRE_RL_routePacketWest;
	}
	++num;
	if ((backing.DEF_WILL_FIRE___me_check_23) != DEF_WILL_FIRE___me_check_23)
	{
	  vcd_write_val(num, DEF_WILL_FIRE___me_check_23, 1u);
	  backing.DEF_WILL_FIRE___me_check_23 = DEF_WILL_FIRE___me_check_23;
	}
	++num;
	if ((backing.DEF_WILL_FIRE___me_check_28) != DEF_WILL_FIRE___me_check_28)
	{
	  vcd_write_val(num, DEF_WILL_FIRE___me_check_28, 1u);
	  backing.DEF_WILL_FIRE___me_check_28 = DEF_WILL_FIRE___me_check_28;
	}
	++num;
	if ((backing.DEF_WILL_FIRE___me_check_29) != DEF_WILL_FIRE___me_check_29)
	{
	  vcd_write_val(num, DEF_WILL_FIRE___me_check_29, 1u);
	  backing.DEF_WILL_FIRE___me_check_29 = DEF_WILL_FIRE___me_check_29;
	}
	++num;
	if ((backing.DEF_WILL_FIRE___me_check_30) != DEF_WILL_FIRE___me_check_30)
	{
	  vcd_write_val(num, DEF_WILL_FIRE___me_check_30, 1u);
	  backing.DEF_WILL_FIRE___me_check_30 = DEF_WILL_FIRE___me_check_30;
	}
	++num;
	if ((backing.DEF_WILL_FIRE___me_check_31) != DEF_WILL_FIRE___me_check_31)
	{
	  vcd_write_val(num, DEF_WILL_FIRE___me_check_31, 1u);
	  backing.DEF_WILL_FIRE___me_check_31 = DEF_WILL_FIRE___me_check_31;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_channels_0_getNoCPacket_get) != DEF_WILL_FIRE_channels_0_getNoCPacket_get)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_channels_0_getNoCPacket_get, 1u);
	  backing.DEF_WILL_FIRE_channels_0_getNoCPacket_get = DEF_WILL_FIRE_channels_0_getNoCPacket_get;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_channels_0_putNoCPacket_put) != DEF_WILL_FIRE_channels_0_putNoCPacket_put)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_channels_0_putNoCPacket_put, 1u);
	  backing.DEF_WILL_FIRE_channels_0_putNoCPacket_put = DEF_WILL_FIRE_channels_0_putNoCPacket_put;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_channels_1_getNoCPacket_get) != DEF_WILL_FIRE_channels_1_getNoCPacket_get)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_channels_1_getNoCPacket_get, 1u);
	  backing.DEF_WILL_FIRE_channels_1_getNoCPacket_get = DEF_WILL_FIRE_channels_1_getNoCPacket_get;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_channels_1_putNoCPacket_put) != DEF_WILL_FIRE_channels_1_putNoCPacket_put)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_channels_1_putNoCPacket_put, 1u);
	  backing.DEF_WILL_FIRE_channels_1_putNoCPacket_put = DEF_WILL_FIRE_channels_1_putNoCPacket_put;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_channels_2_getNoCPacket_get) != DEF_WILL_FIRE_channels_2_getNoCPacket_get)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_channels_2_getNoCPacket_get, 1u);
	  backing.DEF_WILL_FIRE_channels_2_getNoCPacket_get = DEF_WILL_FIRE_channels_2_getNoCPacket_get;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_channels_2_putNoCPacket_put) != DEF_WILL_FIRE_channels_2_putNoCPacket_put)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_channels_2_putNoCPacket_put, 1u);
	  backing.DEF_WILL_FIRE_channels_2_putNoCPacket_put = DEF_WILL_FIRE_channels_2_putNoCPacket_put;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_channels_3_getNoCPacket_get) != DEF_WILL_FIRE_channels_3_getNoCPacket_get)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_channels_3_getNoCPacket_get, 1u);
	  backing.DEF_WILL_FIRE_channels_3_getNoCPacket_get = DEF_WILL_FIRE_channels_3_getNoCPacket_get;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_channels_3_putNoCPacket_put) != DEF_WILL_FIRE_channels_3_putNoCPacket_put)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_channels_3_putNoCPacket_put, 1u);
	  backing.DEF_WILL_FIRE_channels_3_putNoCPacket_put = DEF_WILL_FIRE_channels_3_putNoCPacket_put;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_channels_4_getNoCPacket_get) != DEF_WILL_FIRE_channels_4_getNoCPacket_get)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_channels_4_getNoCPacket_get, 1u);
	  backing.DEF_WILL_FIRE_channels_4_getNoCPacket_get = DEF_WILL_FIRE_channels_4_getNoCPacket_get;
	}
	++num;
	if ((backing.DEF_WILL_FIRE_channels_4_putNoCPacket_put) != DEF_WILL_FIRE_channels_4_putNoCPacket_put)
	{
	  vcd_write_val(num, DEF_WILL_FIRE_channels_4_putNoCPacket_put, 1u);
	  backing.DEF_WILL_FIRE_channels_4_putNoCPacket_put = DEF_WILL_FIRE_channels_4_putNoCPacket_put;
	}
	++num;
	if ((backing.DEF__0_CONCAT_DONTCARE___d644) != DEF__0_CONCAT_DONTCARE___d644)
	{
	  vcd_write_val(num, DEF__0_CONCAT_DONTCARE___d644, 52u);
	  backing.DEF__0_CONCAT_DONTCARE___d644 = DEF__0_CONCAT_DONTCARE___d644;
	}
	++num;
	if ((backing.DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657) != DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657)
	{
	  vcd_write_val(num, DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657, 4u);
	  backing.DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657 = DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657;
	}
	++num;
	if ((backing.DEF_channelInQ_0_enqw_wget____d819) != DEF_channelInQ_0_enqw_wget____d819)
	{
	  vcd_write_val(num, DEF_channelInQ_0_enqw_wget____d819, 51u);
	  backing.DEF_channelInQ_0_enqw_wget____d819 = DEF_channelInQ_0_enqw_wget____d819;
	}
	++num;
	if ((backing.DEF_channelInQ_0_enqw_whas____d658) != DEF_channelInQ_0_enqw_whas____d658)
	{
	  vcd_write_val(num, DEF_channelInQ_0_enqw_whas____d658, 1u);
	  backing.DEF_channelInQ_0_enqw_whas____d658 = DEF_channelInQ_0_enqw_whas____d658;
	}
	++num;
	if ((backing.DEF_channelInQ_0_ff_i_notEmpty____d659) != DEF_channelInQ_0_ff_i_notEmpty____d659)
	{
	  vcd_write_val(num, DEF_channelInQ_0_ff_i_notEmpty____d659, 1u);
	  backing.DEF_channelInQ_0_ff_i_notEmpty____d659 = DEF_channelInQ_0_ff_i_notEmpty____d659;
	}
	++num;
	if ((backing.DEF_channelInQ_1_enqw_wget____d820) != DEF_channelInQ_1_enqw_wget____d820)
	{
	  vcd_write_val(num, DEF_channelInQ_1_enqw_wget____d820, 51u);
	  backing.DEF_channelInQ_1_enqw_wget____d820 = DEF_channelInQ_1_enqw_wget____d820;
	}
	++num;
	if ((backing.DEF_channelInQ_1_enqw_whas____d660) != DEF_channelInQ_1_enqw_whas____d660)
	{
	  vcd_write_val(num, DEF_channelInQ_1_enqw_whas____d660, 1u);
	  backing.DEF_channelInQ_1_enqw_whas____d660 = DEF_channelInQ_1_enqw_whas____d660;
	}
	++num;
	if ((backing.DEF_channelInQ_1_ff_i_notEmpty____d661) != DEF_channelInQ_1_ff_i_notEmpty____d661)
	{
	  vcd_write_val(num, DEF_channelInQ_1_ff_i_notEmpty____d661, 1u);
	  backing.DEF_channelInQ_1_ff_i_notEmpty____d661 = DEF_channelInQ_1_ff_i_notEmpty____d661;
	}
	++num;
	if ((backing.DEF_channelInQ_2_enqw_wget____d821) != DEF_channelInQ_2_enqw_wget____d821)
	{
	  vcd_write_val(num, DEF_channelInQ_2_enqw_wget____d821, 51u);
	  backing.DEF_channelInQ_2_enqw_wget____d821 = DEF_channelInQ_2_enqw_wget____d821;
	}
	++num;
	if ((backing.DEF_channelInQ_2_enqw_whas____d663) != DEF_channelInQ_2_enqw_whas____d663)
	{
	  vcd_write_val(num, DEF_channelInQ_2_enqw_whas____d663, 1u);
	  backing.DEF_channelInQ_2_enqw_whas____d663 = DEF_channelInQ_2_enqw_whas____d663;
	}
	++num;
	if ((backing.DEF_channelInQ_2_ff_i_notEmpty____d664) != DEF_channelInQ_2_ff_i_notEmpty____d664)
	{
	  vcd_write_val(num, DEF_channelInQ_2_ff_i_notEmpty____d664, 1u);
	  backing.DEF_channelInQ_2_ff_i_notEmpty____d664 = DEF_channelInQ_2_ff_i_notEmpty____d664;
	}
	++num;
	if ((backing.DEF_channelInQ_3_enqw_wget____d822) != DEF_channelInQ_3_enqw_wget____d822)
	{
	  vcd_write_val(num, DEF_channelInQ_3_enqw_wget____d822, 51u);
	  backing.DEF_channelInQ_3_enqw_wget____d822 = DEF_channelInQ_3_enqw_wget____d822;
	}
	++num;
	if ((backing.DEF_channelInQ_3_enqw_whas____d666) != DEF_channelInQ_3_enqw_whas____d666)
	{
	  vcd_write_val(num, DEF_channelInQ_3_enqw_whas____d666, 1u);
	  backing.DEF_channelInQ_3_enqw_whas____d666 = DEF_channelInQ_3_enqw_whas____d666;
	}
	++num;
	if ((backing.DEF_channelInQ_3_ff_i_notEmpty____d667) != DEF_channelInQ_3_ff_i_notEmpty____d667)
	{
	  vcd_write_val(num, DEF_channelInQ_3_ff_i_notEmpty____d667, 1u);
	  backing.DEF_channelInQ_3_ff_i_notEmpty____d667 = DEF_channelInQ_3_ff_i_notEmpty____d667;
	}
	++num;
	if ((backing.DEF_channelInQ_4_enqw_wget____d823) != DEF_channelInQ_4_enqw_wget____d823)
	{
	  vcd_write_val(num, DEF_channelInQ_4_enqw_wget____d823, 51u);
	  backing.DEF_channelInQ_4_enqw_wget____d823 = DEF_channelInQ_4_enqw_wget____d823;
	}
	++num;
	if ((backing.DEF_channelInQ_4_enqw_whas____d669) != DEF_channelInQ_4_enqw_whas____d669)
	{
	  vcd_write_val(num, DEF_channelInQ_4_enqw_whas____d669, 1u);
	  backing.DEF_channelInQ_4_enqw_whas____d669 = DEF_channelInQ_4_enqw_whas____d669;
	}
	++num;
	if ((backing.DEF_channelInQ_4_ff_i_notEmpty____d670) != DEF_channelInQ_4_ff_i_notEmpty____d670)
	{
	  vcd_write_val(num, DEF_channelInQ_4_ff_i_notEmpty____d670, 1u);
	  backing.DEF_channelInQ_4_ff_i_notEmpty____d670 = DEF_channelInQ_4_ff_i_notEmpty____d670;
	}
	++num;
	if ((backing.DEF_channelOutQ_0_rw_enq_wget____d645) != DEF_channelOutQ_0_rw_enq_wget____d645)
	{
	  vcd_write_val(num, DEF_channelOutQ_0_rw_enq_wget____d645, 51u);
	  backing.DEF_channelOutQ_0_rw_enq_wget____d645 = DEF_channelOutQ_0_rw_enq_wget____d645;
	}
	++num;
	if ((backing.DEF_channelOutQ_0_rw_enq_whas____d678) != DEF_channelOutQ_0_rw_enq_whas____d678)
	{
	  vcd_write_val(num, DEF_channelOutQ_0_rw_enq_whas____d678, 1u);
	  backing.DEF_channelOutQ_0_rw_enq_whas____d678 = DEF_channelOutQ_0_rw_enq_whas____d678;
	}
	++num;
	if ((backing.DEF_channelOutQ_0_taggedReg_44_BIT_51___d676) != DEF_channelOutQ_0_taggedReg_44_BIT_51___d676)
	{
	  vcd_write_val(num, DEF_channelOutQ_0_taggedReg_44_BIT_51___d676, 1u);
	  backing.DEF_channelOutQ_0_taggedReg_44_BIT_51___d676 = DEF_channelOutQ_0_taggedReg_44_BIT_51___d676;
	}
	++num;
	if ((backing.DEF_channelOutQ_0_taggedReg___d633) != DEF_channelOutQ_0_taggedReg___d633)
	{
	  vcd_write_val(num, DEF_channelOutQ_0_taggedReg___d633, 52u);
	  backing.DEF_channelOutQ_0_taggedReg___d633 = DEF_channelOutQ_0_taggedReg___d633;
	}
	++num;
	if ((backing.DEF_channelOutQ_1_rw_enq_wget____d646) != DEF_channelOutQ_1_rw_enq_wget____d646)
	{
	  vcd_write_val(num, DEF_channelOutQ_1_rw_enq_wget____d646, 51u);
	  backing.DEF_channelOutQ_1_rw_enq_wget____d646 = DEF_channelOutQ_1_rw_enq_wget____d646;
	}
	++num;
	if ((backing.DEF_channelOutQ_1_rw_enq_whas____d679) != DEF_channelOutQ_1_rw_enq_whas____d679)
	{
	  vcd_write_val(num, DEF_channelOutQ_1_rw_enq_whas____d679, 1u);
	  backing.DEF_channelOutQ_1_rw_enq_whas____d679 = DEF_channelOutQ_1_rw_enq_whas____d679;
	}
	++num;
	if ((backing.DEF_channelOutQ_1_taggedReg_07_BIT_51___d672) != DEF_channelOutQ_1_taggedReg_07_BIT_51___d672)
	{
	  vcd_write_val(num, DEF_channelOutQ_1_taggedReg_07_BIT_51___d672, 1u);
	  backing.DEF_channelOutQ_1_taggedReg_07_BIT_51___d672 = DEF_channelOutQ_1_taggedReg_07_BIT_51___d672;
	}
	++num;
	if ((backing.DEF_channelOutQ_1_taggedReg___d634) != DEF_channelOutQ_1_taggedReg___d634)
	{
	  vcd_write_val(num, DEF_channelOutQ_1_taggedReg___d634, 52u);
	  backing.DEF_channelOutQ_1_taggedReg___d634 = DEF_channelOutQ_1_taggedReg___d634;
	}
	++num;
	if ((backing.DEF_channelOutQ_2_rw_enq_wget____d647) != DEF_channelOutQ_2_rw_enq_wget____d647)
	{
	  vcd_write_val(num, DEF_channelOutQ_2_rw_enq_wget____d647, 51u);
	  backing.DEF_channelOutQ_2_rw_enq_wget____d647 = DEF_channelOutQ_2_rw_enq_wget____d647;
	}
	++num;
	if ((backing.DEF_channelOutQ_2_rw_enq_whas____d681) != DEF_channelOutQ_2_rw_enq_whas____d681)
	{
	  vcd_write_val(num, DEF_channelOutQ_2_rw_enq_whas____d681, 1u);
	  backing.DEF_channelOutQ_2_rw_enq_whas____d681 = DEF_channelOutQ_2_rw_enq_whas____d681;
	}
	++num;
	if ((backing.DEF_channelOutQ_2_taggedReg_17_BIT_51___d673) != DEF_channelOutQ_2_taggedReg_17_BIT_51___d673)
	{
	  vcd_write_val(num, DEF_channelOutQ_2_taggedReg_17_BIT_51___d673, 1u);
	  backing.DEF_channelOutQ_2_taggedReg_17_BIT_51___d673 = DEF_channelOutQ_2_taggedReg_17_BIT_51___d673;
	}
	++num;
	if ((backing.DEF_channelOutQ_2_taggedReg___d635) != DEF_channelOutQ_2_taggedReg___d635)
	{
	  vcd_write_val(num, DEF_channelOutQ_2_taggedReg___d635, 52u);
	  backing.DEF_channelOutQ_2_taggedReg___d635 = DEF_channelOutQ_2_taggedReg___d635;
	}
	++num;
	if ((backing.DEF_channelOutQ_3_rw_enq_wget____d648) != DEF_channelOutQ_3_rw_enq_wget____d648)
	{
	  vcd_write_val(num, DEF_channelOutQ_3_rw_enq_wget____d648, 51u);
	  backing.DEF_channelOutQ_3_rw_enq_wget____d648 = DEF_channelOutQ_3_rw_enq_wget____d648;
	}
	++num;
	if ((backing.DEF_channelOutQ_3_rw_enq_whas____d683) != DEF_channelOutQ_3_rw_enq_whas____d683)
	{
	  vcd_write_val(num, DEF_channelOutQ_3_rw_enq_whas____d683, 1u);
	  backing.DEF_channelOutQ_3_rw_enq_whas____d683 = DEF_channelOutQ_3_rw_enq_whas____d683;
	}
	++num;
	if ((backing.DEF_channelOutQ_3_taggedReg_35_BIT_51___d675) != DEF_channelOutQ_3_taggedReg_35_BIT_51___d675)
	{
	  vcd_write_val(num, DEF_channelOutQ_3_taggedReg_35_BIT_51___d675, 1u);
	  backing.DEF_channelOutQ_3_taggedReg_35_BIT_51___d675 = DEF_channelOutQ_3_taggedReg_35_BIT_51___d675;
	}
	++num;
	if ((backing.DEF_channelOutQ_3_taggedReg___d636) != DEF_channelOutQ_3_taggedReg___d636)
	{
	  vcd_write_val(num, DEF_channelOutQ_3_taggedReg___d636, 52u);
	  backing.DEF_channelOutQ_3_taggedReg___d636 = DEF_channelOutQ_3_taggedReg___d636;
	}
	++num;
	if ((backing.DEF_channelOutQ_4_rw_enq_wget____d649) != DEF_channelOutQ_4_rw_enq_wget____d649)
	{
	  vcd_write_val(num, DEF_channelOutQ_4_rw_enq_wget____d649, 51u);
	  backing.DEF_channelOutQ_4_rw_enq_wget____d649 = DEF_channelOutQ_4_rw_enq_wget____d649;
	}
	++num;
	if ((backing.DEF_channelOutQ_4_rw_enq_whas____d685) != DEF_channelOutQ_4_rw_enq_whas____d685)
	{
	  vcd_write_val(num, DEF_channelOutQ_4_rw_enq_whas____d685, 1u);
	  backing.DEF_channelOutQ_4_rw_enq_whas____d685 = DEF_channelOutQ_4_rw_enq_whas____d685;
	}
	++num;
	if ((backing.DEF_channelOutQ_4_taggedReg_25_BIT_51___d674) != DEF_channelOutQ_4_taggedReg_25_BIT_51___d674)
	{
	  vcd_write_val(num, DEF_channelOutQ_4_taggedReg_25_BIT_51___d674, 1u);
	  backing.DEF_channelOutQ_4_taggedReg_25_BIT_51___d674 = DEF_channelOutQ_4_taggedReg_25_BIT_51___d674;
	}
	++num;
	if ((backing.DEF_channelOutQ_4_taggedReg___d637) != DEF_channelOutQ_4_taggedReg___d637)
	{
	  vcd_write_val(num, DEF_channelOutQ_4_taggedReg___d637, 52u);
	  backing.DEF_channelOutQ_4_taggedReg___d637 = DEF_channelOutQ_4_taggedReg___d637;
	}
	++num;
	if ((backing.DEF_routePacketQ_first____d656) != DEF_routePacketQ_first____d656)
	{
	  vcd_write_val(num, DEF_routePacketQ_first____d656, 51u);
	  backing.DEF_routePacketQ_first____d656 = DEF_routePacketQ_first____d656;
	}
	++num;
	if ((backing.DEF_x__h16124) != DEF_x__h16124)
	{
	  vcd_write_val(num, DEF_x__h16124, 4u);
	  backing.DEF_x__h16124 = DEF_x__h16124;
	}
	++num;
	if ((backing.DEF_x__h16126) != DEF_x__h16126)
	{
	  vcd_write_val(num, DEF_x__h16126, 4u);
	  backing.DEF_x__h16126 = DEF_x__h16126;
	}
	++num;
	if ((backing.DEF_y__h16125) != DEF_y__h16125)
	{
	  vcd_write_val(num, DEF_y__h16125, 4u);
	  backing.DEF_y__h16125 = DEF_y__h16125;
	}
	++num;
	if ((backing.PORT_EN_channels_0_getNoCPacket_get) != PORT_EN_channels_0_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_EN_channels_0_getNoCPacket_get, 1u);
	  backing.PORT_EN_channels_0_getNoCPacket_get = PORT_EN_channels_0_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_EN_channels_0_putNoCPacket_put) != PORT_EN_channels_0_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_EN_channels_0_putNoCPacket_put, 1u);
	  backing.PORT_EN_channels_0_putNoCPacket_put = PORT_EN_channels_0_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_EN_channels_1_getNoCPacket_get) != PORT_EN_channels_1_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_EN_channels_1_getNoCPacket_get, 1u);
	  backing.PORT_EN_channels_1_getNoCPacket_get = PORT_EN_channels_1_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_EN_channels_1_putNoCPacket_put) != PORT_EN_channels_1_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_EN_channels_1_putNoCPacket_put, 1u);
	  backing.PORT_EN_channels_1_putNoCPacket_put = PORT_EN_channels_1_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_EN_channels_2_getNoCPacket_get) != PORT_EN_channels_2_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_EN_channels_2_getNoCPacket_get, 1u);
	  backing.PORT_EN_channels_2_getNoCPacket_get = PORT_EN_channels_2_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_EN_channels_2_putNoCPacket_put) != PORT_EN_channels_2_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_EN_channels_2_putNoCPacket_put, 1u);
	  backing.PORT_EN_channels_2_putNoCPacket_put = PORT_EN_channels_2_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_EN_channels_3_getNoCPacket_get) != PORT_EN_channels_3_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_EN_channels_3_getNoCPacket_get, 1u);
	  backing.PORT_EN_channels_3_getNoCPacket_get = PORT_EN_channels_3_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_EN_channels_3_putNoCPacket_put) != PORT_EN_channels_3_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_EN_channels_3_putNoCPacket_put, 1u);
	  backing.PORT_EN_channels_3_putNoCPacket_put = PORT_EN_channels_3_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_EN_channels_4_getNoCPacket_get) != PORT_EN_channels_4_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_EN_channels_4_getNoCPacket_get, 1u);
	  backing.PORT_EN_channels_4_getNoCPacket_get = PORT_EN_channels_4_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_EN_channels_4_putNoCPacket_put) != PORT_EN_channels_4_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_EN_channels_4_putNoCPacket_put, 1u);
	  backing.PORT_EN_channels_4_putNoCPacket_put = PORT_EN_channels_4_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_RDY_channels_0_getNoCPacket_get) != PORT_RDY_channels_0_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_RDY_channels_0_getNoCPacket_get, 1u);
	  backing.PORT_RDY_channels_0_getNoCPacket_get = PORT_RDY_channels_0_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_RDY_channels_0_putNoCPacket_put) != PORT_RDY_channels_0_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_RDY_channels_0_putNoCPacket_put, 1u);
	  backing.PORT_RDY_channels_0_putNoCPacket_put = PORT_RDY_channels_0_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_RDY_channels_1_getNoCPacket_get) != PORT_RDY_channels_1_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_RDY_channels_1_getNoCPacket_get, 1u);
	  backing.PORT_RDY_channels_1_getNoCPacket_get = PORT_RDY_channels_1_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_RDY_channels_1_putNoCPacket_put) != PORT_RDY_channels_1_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_RDY_channels_1_putNoCPacket_put, 1u);
	  backing.PORT_RDY_channels_1_putNoCPacket_put = PORT_RDY_channels_1_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_RDY_channels_2_getNoCPacket_get) != PORT_RDY_channels_2_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_RDY_channels_2_getNoCPacket_get, 1u);
	  backing.PORT_RDY_channels_2_getNoCPacket_get = PORT_RDY_channels_2_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_RDY_channels_2_putNoCPacket_put) != PORT_RDY_channels_2_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_RDY_channels_2_putNoCPacket_put, 1u);
	  backing.PORT_RDY_channels_2_putNoCPacket_put = PORT_RDY_channels_2_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_RDY_channels_3_getNoCPacket_get) != PORT_RDY_channels_3_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_RDY_channels_3_getNoCPacket_get, 1u);
	  backing.PORT_RDY_channels_3_getNoCPacket_get = PORT_RDY_channels_3_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_RDY_channels_3_putNoCPacket_put) != PORT_RDY_channels_3_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_RDY_channels_3_putNoCPacket_put, 1u);
	  backing.PORT_RDY_channels_3_putNoCPacket_put = PORT_RDY_channels_3_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_RDY_channels_4_getNoCPacket_get) != PORT_RDY_channels_4_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_RDY_channels_4_getNoCPacket_get, 1u);
	  backing.PORT_RDY_channels_4_getNoCPacket_get = PORT_RDY_channels_4_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_RDY_channels_4_putNoCPacket_put) != PORT_RDY_channels_4_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_RDY_channels_4_putNoCPacket_put, 1u);
	  backing.PORT_RDY_channels_4_putNoCPacket_put = PORT_RDY_channels_4_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_channels_0_getNoCPacket_get) != PORT_channels_0_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_channels_0_getNoCPacket_get, 51u);
	  backing.PORT_channels_0_getNoCPacket_get = PORT_channels_0_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_channels_0_putNoCPacket_put) != PORT_channels_0_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_channels_0_putNoCPacket_put, 51u);
	  backing.PORT_channels_0_putNoCPacket_put = PORT_channels_0_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_channels_1_getNoCPacket_get) != PORT_channels_1_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_channels_1_getNoCPacket_get, 51u);
	  backing.PORT_channels_1_getNoCPacket_get = PORT_channels_1_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_channels_1_putNoCPacket_put) != PORT_channels_1_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_channels_1_putNoCPacket_put, 51u);
	  backing.PORT_channels_1_putNoCPacket_put = PORT_channels_1_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_channels_2_getNoCPacket_get) != PORT_channels_2_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_channels_2_getNoCPacket_get, 51u);
	  backing.PORT_channels_2_getNoCPacket_get = PORT_channels_2_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_channels_2_putNoCPacket_put) != PORT_channels_2_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_channels_2_putNoCPacket_put, 51u);
	  backing.PORT_channels_2_putNoCPacket_put = PORT_channels_2_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_channels_3_getNoCPacket_get) != PORT_channels_3_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_channels_3_getNoCPacket_get, 51u);
	  backing.PORT_channels_3_getNoCPacket_get = PORT_channels_3_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_channels_3_putNoCPacket_put) != PORT_channels_3_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_channels_3_putNoCPacket_put, 51u);
	  backing.PORT_channels_3_putNoCPacket_put = PORT_channels_3_putNoCPacket_put;
	}
	++num;
	if ((backing.PORT_channels_4_getNoCPacket_get) != PORT_channels_4_getNoCPacket_get)
	{
	  vcd_write_val(num, PORT_channels_4_getNoCPacket_get, 51u);
	  backing.PORT_channels_4_getNoCPacket_get = PORT_channels_4_getNoCPacket_get;
	}
	++num;
	if ((backing.PORT_channels_4_putNoCPacket_put) != PORT_channels_4_putNoCPacket_put)
	{
	  vcd_write_val(num, PORT_channels_4_putNoCPacket_put, 51u);
	  backing.PORT_channels_4_putNoCPacket_put = PORT_channels_4_putNoCPacket_put;
	}
	++num;
      }
      else
      {
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelInQ_0_dequeue, 1u);
	backing.DEF_CAN_FIRE_RL_channelInQ_0_dequeue = DEF_CAN_FIRE_RL_channelInQ_0_dequeue;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelInQ_0_enqueue, 1u);
	backing.DEF_CAN_FIRE_RL_channelInQ_0_enqueue = DEF_CAN_FIRE_RL_channelInQ_0_enqueue;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelInQ_1_dequeue, 1u);
	backing.DEF_CAN_FIRE_RL_channelInQ_1_dequeue = DEF_CAN_FIRE_RL_channelInQ_1_dequeue;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelInQ_1_enqueue, 1u);
	backing.DEF_CAN_FIRE_RL_channelInQ_1_enqueue = DEF_CAN_FIRE_RL_channelInQ_1_enqueue;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelInQ_2_dequeue, 1u);
	backing.DEF_CAN_FIRE_RL_channelInQ_2_dequeue = DEF_CAN_FIRE_RL_channelInQ_2_dequeue;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelInQ_2_enqueue, 1u);
	backing.DEF_CAN_FIRE_RL_channelInQ_2_enqueue = DEF_CAN_FIRE_RL_channelInQ_2_enqueue;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelInQ_3_dequeue, 1u);
	backing.DEF_CAN_FIRE_RL_channelInQ_3_dequeue = DEF_CAN_FIRE_RL_channelInQ_3_dequeue;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelInQ_3_enqueue, 1u);
	backing.DEF_CAN_FIRE_RL_channelInQ_3_enqueue = DEF_CAN_FIRE_RL_channelInQ_3_enqueue;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelInQ_4_dequeue, 1u);
	backing.DEF_CAN_FIRE_RL_channelInQ_4_dequeue = DEF_CAN_FIRE_RL_channelInQ_4_dequeue;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelInQ_4_enqueue, 1u);
	backing.DEF_CAN_FIRE_RL_channelInQ_4_enqueue = DEF_CAN_FIRE_RL_channelInQ_4_enqueue;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelOutQ_0_rule_deq, 1u);
	backing.DEF_CAN_FIRE_RL_channelOutQ_0_rule_deq = DEF_CAN_FIRE_RL_channelOutQ_0_rule_deq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelOutQ_0_rule_enq, 1u);
	backing.DEF_CAN_FIRE_RL_channelOutQ_0_rule_enq = DEF_CAN_FIRE_RL_channelOutQ_0_rule_enq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelOutQ_1_rule_deq, 1u);
	backing.DEF_CAN_FIRE_RL_channelOutQ_1_rule_deq = DEF_CAN_FIRE_RL_channelOutQ_1_rule_deq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelOutQ_1_rule_enq, 1u);
	backing.DEF_CAN_FIRE_RL_channelOutQ_1_rule_enq = DEF_CAN_FIRE_RL_channelOutQ_1_rule_enq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelOutQ_2_rule_deq, 1u);
	backing.DEF_CAN_FIRE_RL_channelOutQ_2_rule_deq = DEF_CAN_FIRE_RL_channelOutQ_2_rule_deq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelOutQ_2_rule_enq, 1u);
	backing.DEF_CAN_FIRE_RL_channelOutQ_2_rule_enq = DEF_CAN_FIRE_RL_channelOutQ_2_rule_enq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelOutQ_3_rule_deq, 1u);
	backing.DEF_CAN_FIRE_RL_channelOutQ_3_rule_deq = DEF_CAN_FIRE_RL_channelOutQ_3_rule_deq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelOutQ_3_rule_enq, 1u);
	backing.DEF_CAN_FIRE_RL_channelOutQ_3_rule_enq = DEF_CAN_FIRE_RL_channelOutQ_3_rule_enq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelOutQ_4_rule_deq, 1u);
	backing.DEF_CAN_FIRE_RL_channelOutQ_4_rule_deq = DEF_CAN_FIRE_RL_channelOutQ_4_rule_deq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_channelOutQ_4_rule_enq, 1u);
	backing.DEF_CAN_FIRE_RL_channelOutQ_4_rule_enq = DEF_CAN_FIRE_RL_channelOutQ_4_rule_enq;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_inputArbitratei, 1u);
	backing.DEF_CAN_FIRE_RL_inputArbitratei = DEF_CAN_FIRE_RL_inputArbitratei;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_inputArbitratei_1, 1u);
	backing.DEF_CAN_FIRE_RL_inputArbitratei_1 = DEF_CAN_FIRE_RL_inputArbitratei_1;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_inputArbitratei_2, 1u);
	backing.DEF_CAN_FIRE_RL_inputArbitratei_2 = DEF_CAN_FIRE_RL_inputArbitratei_2;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_inputArbitratei_3, 1u);
	backing.DEF_CAN_FIRE_RL_inputArbitratei_3 = DEF_CAN_FIRE_RL_inputArbitratei_3;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_inputArbitratei_4, 1u);
	backing.DEF_CAN_FIRE_RL_inputArbitratei_4 = DEF_CAN_FIRE_RL_inputArbitratei_4;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_inputChannelArbiterRequest, 1u);
	backing.DEF_CAN_FIRE_RL_inputChannelArbiterRequest = DEF_CAN_FIRE_RL_inputChannelArbiterRequest;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_inputChannelArbiter_every, 1u);
	backing.DEF_CAN_FIRE_RL_inputChannelArbiter_every = DEF_CAN_FIRE_RL_inputChannelArbiter_every;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_outputChannelArbiter_every, 1u);
	backing.DEF_CAN_FIRE_RL_outputChannelArbiter_every = DEF_CAN_FIRE_RL_outputChannelArbiter_every;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_routePacketEast, 1u);
	backing.DEF_CAN_FIRE_RL_routePacketEast = DEF_CAN_FIRE_RL_routePacketEast;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_routePacketHome, 1u);
	backing.DEF_CAN_FIRE_RL_routePacketHome = DEF_CAN_FIRE_RL_routePacketHome;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_routePacketNorth, 1u);
	backing.DEF_CAN_FIRE_RL_routePacketNorth = DEF_CAN_FIRE_RL_routePacketNorth;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_routePacketSouth, 1u);
	backing.DEF_CAN_FIRE_RL_routePacketSouth = DEF_CAN_FIRE_RL_routePacketSouth;
	vcd_write_val(num++, DEF_CAN_FIRE_RL_routePacketWest, 1u);
	backing.DEF_CAN_FIRE_RL_routePacketWest = DEF_CAN_FIRE_RL_routePacketWest;
	vcd_write_val(num++, DEF_CAN_FIRE___me_check_23, 1u);
	backing.DEF_CAN_FIRE___me_check_23 = DEF_CAN_FIRE___me_check_23;
	vcd_write_val(num++, DEF_CAN_FIRE___me_check_28, 1u);
	backing.DEF_CAN_FIRE___me_check_28 = DEF_CAN_FIRE___me_check_28;
	vcd_write_val(num++, DEF_CAN_FIRE___me_check_29, 1u);
	backing.DEF_CAN_FIRE___me_check_29 = DEF_CAN_FIRE___me_check_29;
	vcd_write_val(num++, DEF_CAN_FIRE___me_check_30, 1u);
	backing.DEF_CAN_FIRE___me_check_30 = DEF_CAN_FIRE___me_check_30;
	vcd_write_val(num++, DEF_CAN_FIRE___me_check_31, 1u);
	backing.DEF_CAN_FIRE___me_check_31 = DEF_CAN_FIRE___me_check_31;
	vcd_write_val(num++, DEF_CAN_FIRE_channels_0_getNoCPacket_get, 1u);
	backing.DEF_CAN_FIRE_channels_0_getNoCPacket_get = DEF_CAN_FIRE_channels_0_getNoCPacket_get;
	vcd_write_val(num++, DEF_CAN_FIRE_channels_0_putNoCPacket_put, 1u);
	backing.DEF_CAN_FIRE_channels_0_putNoCPacket_put = DEF_CAN_FIRE_channels_0_putNoCPacket_put;
	vcd_write_val(num++, DEF_CAN_FIRE_channels_1_getNoCPacket_get, 1u);
	backing.DEF_CAN_FIRE_channels_1_getNoCPacket_get = DEF_CAN_FIRE_channels_1_getNoCPacket_get;
	vcd_write_val(num++, DEF_CAN_FIRE_channels_1_putNoCPacket_put, 1u);
	backing.DEF_CAN_FIRE_channels_1_putNoCPacket_put = DEF_CAN_FIRE_channels_1_putNoCPacket_put;
	vcd_write_val(num++, DEF_CAN_FIRE_channels_2_getNoCPacket_get, 1u);
	backing.DEF_CAN_FIRE_channels_2_getNoCPacket_get = DEF_CAN_FIRE_channels_2_getNoCPacket_get;
	vcd_write_val(num++, DEF_CAN_FIRE_channels_2_putNoCPacket_put, 1u);
	backing.DEF_CAN_FIRE_channels_2_putNoCPacket_put = DEF_CAN_FIRE_channels_2_putNoCPacket_put;
	vcd_write_val(num++, DEF_CAN_FIRE_channels_3_getNoCPacket_get, 1u);
	backing.DEF_CAN_FIRE_channels_3_getNoCPacket_get = DEF_CAN_FIRE_channels_3_getNoCPacket_get;
	vcd_write_val(num++, DEF_CAN_FIRE_channels_3_putNoCPacket_put, 1u);
	backing.DEF_CAN_FIRE_channels_3_putNoCPacket_put = DEF_CAN_FIRE_channels_3_putNoCPacket_put;
	vcd_write_val(num++, DEF_CAN_FIRE_channels_4_getNoCPacket_get, 1u);
	backing.DEF_CAN_FIRE_channels_4_getNoCPacket_get = DEF_CAN_FIRE_channels_4_getNoCPacket_get;
	vcd_write_val(num++, DEF_CAN_FIRE_channels_4_putNoCPacket_put, 1u);
	backing.DEF_CAN_FIRE_channels_4_putNoCPacket_put = DEF_CAN_FIRE_channels_4_putNoCPacket_put;
	vcd_write_val(num++, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelInQ_0_dequeue, 1u);
	backing.DEF_WILL_FIRE_RL_channelInQ_0_dequeue = DEF_WILL_FIRE_RL_channelInQ_0_dequeue;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelInQ_0_enqueue, 1u);
	backing.DEF_WILL_FIRE_RL_channelInQ_0_enqueue = DEF_WILL_FIRE_RL_channelInQ_0_enqueue;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelInQ_1_dequeue, 1u);
	backing.DEF_WILL_FIRE_RL_channelInQ_1_dequeue = DEF_WILL_FIRE_RL_channelInQ_1_dequeue;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelInQ_1_enqueue, 1u);
	backing.DEF_WILL_FIRE_RL_channelInQ_1_enqueue = DEF_WILL_FIRE_RL_channelInQ_1_enqueue;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelInQ_2_dequeue, 1u);
	backing.DEF_WILL_FIRE_RL_channelInQ_2_dequeue = DEF_WILL_FIRE_RL_channelInQ_2_dequeue;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelInQ_2_enqueue, 1u);
	backing.DEF_WILL_FIRE_RL_channelInQ_2_enqueue = DEF_WILL_FIRE_RL_channelInQ_2_enqueue;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelInQ_3_dequeue, 1u);
	backing.DEF_WILL_FIRE_RL_channelInQ_3_dequeue = DEF_WILL_FIRE_RL_channelInQ_3_dequeue;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelInQ_3_enqueue, 1u);
	backing.DEF_WILL_FIRE_RL_channelInQ_3_enqueue = DEF_WILL_FIRE_RL_channelInQ_3_enqueue;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelInQ_4_dequeue, 1u);
	backing.DEF_WILL_FIRE_RL_channelInQ_4_dequeue = DEF_WILL_FIRE_RL_channelInQ_4_dequeue;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelInQ_4_enqueue, 1u);
	backing.DEF_WILL_FIRE_RL_channelInQ_4_enqueue = DEF_WILL_FIRE_RL_channelInQ_4_enqueue;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelOutQ_0_rule_deq, 1u);
	backing.DEF_WILL_FIRE_RL_channelOutQ_0_rule_deq = DEF_WILL_FIRE_RL_channelOutQ_0_rule_deq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelOutQ_0_rule_enq, 1u);
	backing.DEF_WILL_FIRE_RL_channelOutQ_0_rule_enq = DEF_WILL_FIRE_RL_channelOutQ_0_rule_enq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelOutQ_1_rule_deq, 1u);
	backing.DEF_WILL_FIRE_RL_channelOutQ_1_rule_deq = DEF_WILL_FIRE_RL_channelOutQ_1_rule_deq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelOutQ_1_rule_enq, 1u);
	backing.DEF_WILL_FIRE_RL_channelOutQ_1_rule_enq = DEF_WILL_FIRE_RL_channelOutQ_1_rule_enq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelOutQ_2_rule_deq, 1u);
	backing.DEF_WILL_FIRE_RL_channelOutQ_2_rule_deq = DEF_WILL_FIRE_RL_channelOutQ_2_rule_deq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelOutQ_2_rule_enq, 1u);
	backing.DEF_WILL_FIRE_RL_channelOutQ_2_rule_enq = DEF_WILL_FIRE_RL_channelOutQ_2_rule_enq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelOutQ_3_rule_deq, 1u);
	backing.DEF_WILL_FIRE_RL_channelOutQ_3_rule_deq = DEF_WILL_FIRE_RL_channelOutQ_3_rule_deq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelOutQ_3_rule_enq, 1u);
	backing.DEF_WILL_FIRE_RL_channelOutQ_3_rule_enq = DEF_WILL_FIRE_RL_channelOutQ_3_rule_enq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelOutQ_4_rule_deq, 1u);
	backing.DEF_WILL_FIRE_RL_channelOutQ_4_rule_deq = DEF_WILL_FIRE_RL_channelOutQ_4_rule_deq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_channelOutQ_4_rule_enq, 1u);
	backing.DEF_WILL_FIRE_RL_channelOutQ_4_rule_enq = DEF_WILL_FIRE_RL_channelOutQ_4_rule_enq;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_inputArbitratei, 1u);
	backing.DEF_WILL_FIRE_RL_inputArbitratei = DEF_WILL_FIRE_RL_inputArbitratei;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_inputArbitratei_1, 1u);
	backing.DEF_WILL_FIRE_RL_inputArbitratei_1 = DEF_WILL_FIRE_RL_inputArbitratei_1;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_inputArbitratei_2, 1u);
	backing.DEF_WILL_FIRE_RL_inputArbitratei_2 = DEF_WILL_FIRE_RL_inputArbitratei_2;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_inputArbitratei_3, 1u);
	backing.DEF_WILL_FIRE_RL_inputArbitratei_3 = DEF_WILL_FIRE_RL_inputArbitratei_3;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_inputArbitratei_4, 1u);
	backing.DEF_WILL_FIRE_RL_inputArbitratei_4 = DEF_WILL_FIRE_RL_inputArbitratei_4;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_inputChannelArbiterRequest, 1u);
	backing.DEF_WILL_FIRE_RL_inputChannelArbiterRequest = DEF_WILL_FIRE_RL_inputChannelArbiterRequest;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_inputChannelArbiter_every, 1u);
	backing.DEF_WILL_FIRE_RL_inputChannelArbiter_every = DEF_WILL_FIRE_RL_inputChannelArbiter_every;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_outputChannelArbiter_every, 1u);
	backing.DEF_WILL_FIRE_RL_outputChannelArbiter_every = DEF_WILL_FIRE_RL_outputChannelArbiter_every;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_routePacketEast, 1u);
	backing.DEF_WILL_FIRE_RL_routePacketEast = DEF_WILL_FIRE_RL_routePacketEast;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_routePacketHome, 1u);
	backing.DEF_WILL_FIRE_RL_routePacketHome = DEF_WILL_FIRE_RL_routePacketHome;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_routePacketNorth, 1u);
	backing.DEF_WILL_FIRE_RL_routePacketNorth = DEF_WILL_FIRE_RL_routePacketNorth;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_routePacketSouth, 1u);
	backing.DEF_WILL_FIRE_RL_routePacketSouth = DEF_WILL_FIRE_RL_routePacketSouth;
	vcd_write_val(num++, DEF_WILL_FIRE_RL_routePacketWest, 1u);
	backing.DEF_WILL_FIRE_RL_routePacketWest = DEF_WILL_FIRE_RL_routePacketWest;
	vcd_write_val(num++, DEF_WILL_FIRE___me_check_23, 1u);
	backing.DEF_WILL_FIRE___me_check_23 = DEF_WILL_FIRE___me_check_23;
	vcd_write_val(num++, DEF_WILL_FIRE___me_check_28, 1u);
	backing.DEF_WILL_FIRE___me_check_28 = DEF_WILL_FIRE___me_check_28;
	vcd_write_val(num++, DEF_WILL_FIRE___me_check_29, 1u);
	backing.DEF_WILL_FIRE___me_check_29 = DEF_WILL_FIRE___me_check_29;
	vcd_write_val(num++, DEF_WILL_FIRE___me_check_30, 1u);
	backing.DEF_WILL_FIRE___me_check_30 = DEF_WILL_FIRE___me_check_30;
	vcd_write_val(num++, DEF_WILL_FIRE___me_check_31, 1u);
	backing.DEF_WILL_FIRE___me_check_31 = DEF_WILL_FIRE___me_check_31;
	vcd_write_val(num++, DEF_WILL_FIRE_channels_0_getNoCPacket_get, 1u);
	backing.DEF_WILL_FIRE_channels_0_getNoCPacket_get = DEF_WILL_FIRE_channels_0_getNoCPacket_get;
	vcd_write_val(num++, DEF_WILL_FIRE_channels_0_putNoCPacket_put, 1u);
	backing.DEF_WILL_FIRE_channels_0_putNoCPacket_put = DEF_WILL_FIRE_channels_0_putNoCPacket_put;
	vcd_write_val(num++, DEF_WILL_FIRE_channels_1_getNoCPacket_get, 1u);
	backing.DEF_WILL_FIRE_channels_1_getNoCPacket_get = DEF_WILL_FIRE_channels_1_getNoCPacket_get;
	vcd_write_val(num++, DEF_WILL_FIRE_channels_1_putNoCPacket_put, 1u);
	backing.DEF_WILL_FIRE_channels_1_putNoCPacket_put = DEF_WILL_FIRE_channels_1_putNoCPacket_put;
	vcd_write_val(num++, DEF_WILL_FIRE_channels_2_getNoCPacket_get, 1u);
	backing.DEF_WILL_FIRE_channels_2_getNoCPacket_get = DEF_WILL_FIRE_channels_2_getNoCPacket_get;
	vcd_write_val(num++, DEF_WILL_FIRE_channels_2_putNoCPacket_put, 1u);
	backing.DEF_WILL_FIRE_channels_2_putNoCPacket_put = DEF_WILL_FIRE_channels_2_putNoCPacket_put;
	vcd_write_val(num++, DEF_WILL_FIRE_channels_3_getNoCPacket_get, 1u);
	backing.DEF_WILL_FIRE_channels_3_getNoCPacket_get = DEF_WILL_FIRE_channels_3_getNoCPacket_get;
	vcd_write_val(num++, DEF_WILL_FIRE_channels_3_putNoCPacket_put, 1u);
	backing.DEF_WILL_FIRE_channels_3_putNoCPacket_put = DEF_WILL_FIRE_channels_3_putNoCPacket_put;
	vcd_write_val(num++, DEF_WILL_FIRE_channels_4_getNoCPacket_get, 1u);
	backing.DEF_WILL_FIRE_channels_4_getNoCPacket_get = DEF_WILL_FIRE_channels_4_getNoCPacket_get;
	vcd_write_val(num++, DEF_WILL_FIRE_channels_4_putNoCPacket_put, 1u);
	backing.DEF_WILL_FIRE_channels_4_putNoCPacket_put = DEF_WILL_FIRE_channels_4_putNoCPacket_put;
	vcd_write_val(num++, DEF__0_CONCAT_DONTCARE___d644, 52u);
	backing.DEF__0_CONCAT_DONTCARE___d644 = DEF__0_CONCAT_DONTCARE___d644;
	vcd_write_val(num++, DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657, 4u);
	backing.DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657 = DEF__0_CONCAT_thisRowAddr_05_MUL_3_06_BITS_3_TO_0_0_ETC___d657;
	vcd_write_val(num++, DEF_channelInQ_0_enqw_wget____d819, 51u);
	backing.DEF_channelInQ_0_enqw_wget____d819 = DEF_channelInQ_0_enqw_wget____d819;
	vcd_write_val(num++, DEF_channelInQ_0_enqw_whas____d658, 1u);
	backing.DEF_channelInQ_0_enqw_whas____d658 = DEF_channelInQ_0_enqw_whas____d658;
	vcd_write_val(num++, DEF_channelInQ_0_ff_i_notEmpty____d659, 1u);
	backing.DEF_channelInQ_0_ff_i_notEmpty____d659 = DEF_channelInQ_0_ff_i_notEmpty____d659;
	vcd_write_val(num++, DEF_channelInQ_1_enqw_wget____d820, 51u);
	backing.DEF_channelInQ_1_enqw_wget____d820 = DEF_channelInQ_1_enqw_wget____d820;
	vcd_write_val(num++, DEF_channelInQ_1_enqw_whas____d660, 1u);
	backing.DEF_channelInQ_1_enqw_whas____d660 = DEF_channelInQ_1_enqw_whas____d660;
	vcd_write_val(num++, DEF_channelInQ_1_ff_i_notEmpty____d661, 1u);
	backing.DEF_channelInQ_1_ff_i_notEmpty____d661 = DEF_channelInQ_1_ff_i_notEmpty____d661;
	vcd_write_val(num++, DEF_channelInQ_2_enqw_wget____d821, 51u);
	backing.DEF_channelInQ_2_enqw_wget____d821 = DEF_channelInQ_2_enqw_wget____d821;
	vcd_write_val(num++, DEF_channelInQ_2_enqw_whas____d663, 1u);
	backing.DEF_channelInQ_2_enqw_whas____d663 = DEF_channelInQ_2_enqw_whas____d663;
	vcd_write_val(num++, DEF_channelInQ_2_ff_i_notEmpty____d664, 1u);
	backing.DEF_channelInQ_2_ff_i_notEmpty____d664 = DEF_channelInQ_2_ff_i_notEmpty____d664;
	vcd_write_val(num++, DEF_channelInQ_3_enqw_wget____d822, 51u);
	backing.DEF_channelInQ_3_enqw_wget____d822 = DEF_channelInQ_3_enqw_wget____d822;
	vcd_write_val(num++, DEF_channelInQ_3_enqw_whas____d666, 1u);
	backing.DEF_channelInQ_3_enqw_whas____d666 = DEF_channelInQ_3_enqw_whas____d666;
	vcd_write_val(num++, DEF_channelInQ_3_ff_i_notEmpty____d667, 1u);
	backing.DEF_channelInQ_3_ff_i_notEmpty____d667 = DEF_channelInQ_3_ff_i_notEmpty____d667;
	vcd_write_val(num++, DEF_channelInQ_4_enqw_wget____d823, 51u);
	backing.DEF_channelInQ_4_enqw_wget____d823 = DEF_channelInQ_4_enqw_wget____d823;
	vcd_write_val(num++, DEF_channelInQ_4_enqw_whas____d669, 1u);
	backing.DEF_channelInQ_4_enqw_whas____d669 = DEF_channelInQ_4_enqw_whas____d669;
	vcd_write_val(num++, DEF_channelInQ_4_ff_i_notEmpty____d670, 1u);
	backing.DEF_channelInQ_4_ff_i_notEmpty____d670 = DEF_channelInQ_4_ff_i_notEmpty____d670;
	vcd_write_val(num++, DEF_channelOutQ_0_rw_enq_wget____d645, 51u);
	backing.DEF_channelOutQ_0_rw_enq_wget____d645 = DEF_channelOutQ_0_rw_enq_wget____d645;
	vcd_write_val(num++, DEF_channelOutQ_0_rw_enq_whas____d678, 1u);
	backing.DEF_channelOutQ_0_rw_enq_whas____d678 = DEF_channelOutQ_0_rw_enq_whas____d678;
	vcd_write_val(num++, DEF_channelOutQ_0_taggedReg_44_BIT_51___d676, 1u);
	backing.DEF_channelOutQ_0_taggedReg_44_BIT_51___d676 = DEF_channelOutQ_0_taggedReg_44_BIT_51___d676;
	vcd_write_val(num++, DEF_channelOutQ_0_taggedReg___d633, 52u);
	backing.DEF_channelOutQ_0_taggedReg___d633 = DEF_channelOutQ_0_taggedReg___d633;
	vcd_write_val(num++, DEF_channelOutQ_1_rw_enq_wget____d646, 51u);
	backing.DEF_channelOutQ_1_rw_enq_wget____d646 = DEF_channelOutQ_1_rw_enq_wget____d646;
	vcd_write_val(num++, DEF_channelOutQ_1_rw_enq_whas____d679, 1u);
	backing.DEF_channelOutQ_1_rw_enq_whas____d679 = DEF_channelOutQ_1_rw_enq_whas____d679;
	vcd_write_val(num++, DEF_channelOutQ_1_taggedReg_07_BIT_51___d672, 1u);
	backing.DEF_channelOutQ_1_taggedReg_07_BIT_51___d672 = DEF_channelOutQ_1_taggedReg_07_BIT_51___d672;
	vcd_write_val(num++, DEF_channelOutQ_1_taggedReg___d634, 52u);
	backing.DEF_channelOutQ_1_taggedReg___d634 = DEF_channelOutQ_1_taggedReg___d634;
	vcd_write_val(num++, DEF_channelOutQ_2_rw_enq_wget____d647, 51u);
	backing.DEF_channelOutQ_2_rw_enq_wget____d647 = DEF_channelOutQ_2_rw_enq_wget____d647;
	vcd_write_val(num++, DEF_channelOutQ_2_rw_enq_whas____d681, 1u);
	backing.DEF_channelOutQ_2_rw_enq_whas____d681 = DEF_channelOutQ_2_rw_enq_whas____d681;
	vcd_write_val(num++, DEF_channelOutQ_2_taggedReg_17_BIT_51___d673, 1u);
	backing.DEF_channelOutQ_2_taggedReg_17_BIT_51___d673 = DEF_channelOutQ_2_taggedReg_17_BIT_51___d673;
	vcd_write_val(num++, DEF_channelOutQ_2_taggedReg___d635, 52u);
	backing.DEF_channelOutQ_2_taggedReg___d635 = DEF_channelOutQ_2_taggedReg___d635;
	vcd_write_val(num++, DEF_channelOutQ_3_rw_enq_wget____d648, 51u);
	backing.DEF_channelOutQ_3_rw_enq_wget____d648 = DEF_channelOutQ_3_rw_enq_wget____d648;
	vcd_write_val(num++, DEF_channelOutQ_3_rw_enq_whas____d683, 1u);
	backing.DEF_channelOutQ_3_rw_enq_whas____d683 = DEF_channelOutQ_3_rw_enq_whas____d683;
	vcd_write_val(num++, DEF_channelOutQ_3_taggedReg_35_BIT_51___d675, 1u);
	backing.DEF_channelOutQ_3_taggedReg_35_BIT_51___d675 = DEF_channelOutQ_3_taggedReg_35_BIT_51___d675;
	vcd_write_val(num++, DEF_channelOutQ_3_taggedReg___d636, 52u);
	backing.DEF_channelOutQ_3_taggedReg___d636 = DEF_channelOutQ_3_taggedReg___d636;
	vcd_write_val(num++, DEF_channelOutQ_4_rw_enq_wget____d649, 51u);
	backing.DEF_channelOutQ_4_rw_enq_wget____d649 = DEF_channelOutQ_4_rw_enq_wget____d649;
	vcd_write_val(num++, DEF_channelOutQ_4_rw_enq_whas____d685, 1u);
	backing.DEF_channelOutQ_4_rw_enq_whas____d685 = DEF_channelOutQ_4_rw_enq_whas____d685;
	vcd_write_val(num++, DEF_channelOutQ_4_taggedReg_25_BIT_51___d674, 1u);
	backing.DEF_channelOutQ_4_taggedReg_25_BIT_51___d674 = DEF_channelOutQ_4_taggedReg_25_BIT_51___d674;
	vcd_write_val(num++, DEF_channelOutQ_4_taggedReg___d637, 52u);
	backing.DEF_channelOutQ_4_taggedReg___d637 = DEF_channelOutQ_4_taggedReg___d637;
	vcd_write_val(num++, DEF_routePacketQ_first____d656, 51u);
	backing.DEF_routePacketQ_first____d656 = DEF_routePacketQ_first____d656;
	vcd_write_val(num++, DEF_x__h16124, 4u);
	backing.DEF_x__h16124 = DEF_x__h16124;
	vcd_write_val(num++, DEF_x__h16126, 4u);
	backing.DEF_x__h16126 = DEF_x__h16126;
	vcd_write_val(num++, DEF_y__h16125, 4u);
	backing.DEF_y__h16125 = DEF_y__h16125;
	vcd_write_val(num++, PORT_EN_channels_0_getNoCPacket_get, 1u);
	backing.PORT_EN_channels_0_getNoCPacket_get = PORT_EN_channels_0_getNoCPacket_get;
	vcd_write_val(num++, PORT_EN_channels_0_putNoCPacket_put, 1u);
	backing.PORT_EN_channels_0_putNoCPacket_put = PORT_EN_channels_0_putNoCPacket_put;
	vcd_write_val(num++, PORT_EN_channels_1_getNoCPacket_get, 1u);
	backing.PORT_EN_channels_1_getNoCPacket_get = PORT_EN_channels_1_getNoCPacket_get;
	vcd_write_val(num++, PORT_EN_channels_1_putNoCPacket_put, 1u);
	backing.PORT_EN_channels_1_putNoCPacket_put = PORT_EN_channels_1_putNoCPacket_put;
	vcd_write_val(num++, PORT_EN_channels_2_getNoCPacket_get, 1u);
	backing.PORT_EN_channels_2_getNoCPacket_get = PORT_EN_channels_2_getNoCPacket_get;
	vcd_write_val(num++, PORT_EN_channels_2_putNoCPacket_put, 1u);
	backing.PORT_EN_channels_2_putNoCPacket_put = PORT_EN_channels_2_putNoCPacket_put;
	vcd_write_val(num++, PORT_EN_channels_3_getNoCPacket_get, 1u);
	backing.PORT_EN_channels_3_getNoCPacket_get = PORT_EN_channels_3_getNoCPacket_get;
	vcd_write_val(num++, PORT_EN_channels_3_putNoCPacket_put, 1u);
	backing.PORT_EN_channels_3_putNoCPacket_put = PORT_EN_channels_3_putNoCPacket_put;
	vcd_write_val(num++, PORT_EN_channels_4_getNoCPacket_get, 1u);
	backing.PORT_EN_channels_4_getNoCPacket_get = PORT_EN_channels_4_getNoCPacket_get;
	vcd_write_val(num++, PORT_EN_channels_4_putNoCPacket_put, 1u);
	backing.PORT_EN_channels_4_putNoCPacket_put = PORT_EN_channels_4_putNoCPacket_put;
	vcd_write_val(num++, PORT_RDY_channels_0_getNoCPacket_get, 1u);
	backing.PORT_RDY_channels_0_getNoCPacket_get = PORT_RDY_channels_0_getNoCPacket_get;
	vcd_write_val(num++, PORT_RDY_channels_0_putNoCPacket_put, 1u);
	backing.PORT_RDY_channels_0_putNoCPacket_put = PORT_RDY_channels_0_putNoCPacket_put;
	vcd_write_val(num++, PORT_RDY_channels_1_getNoCPacket_get, 1u);
	backing.PORT_RDY_channels_1_getNoCPacket_get = PORT_RDY_channels_1_getNoCPacket_get;
	vcd_write_val(num++, PORT_RDY_channels_1_putNoCPacket_put, 1u);
	backing.PORT_RDY_channels_1_putNoCPacket_put = PORT_RDY_channels_1_putNoCPacket_put;
	vcd_write_val(num++, PORT_RDY_channels_2_getNoCPacket_get, 1u);
	backing.PORT_RDY_channels_2_getNoCPacket_get = PORT_RDY_channels_2_getNoCPacket_get;
	vcd_write_val(num++, PORT_RDY_channels_2_putNoCPacket_put, 1u);
	backing.PORT_RDY_channels_2_putNoCPacket_put = PORT_RDY_channels_2_putNoCPacket_put;
	vcd_write_val(num++, PORT_RDY_channels_3_getNoCPacket_get, 1u);
	backing.PORT_RDY_channels_3_getNoCPacket_get = PORT_RDY_channels_3_getNoCPacket_get;
	vcd_write_val(num++, PORT_RDY_channels_3_putNoCPacket_put, 1u);
	backing.PORT_RDY_channels_3_putNoCPacket_put = PORT_RDY_channels_3_putNoCPacket_put;
	vcd_write_val(num++, PORT_RDY_channels_4_getNoCPacket_get, 1u);
	backing.PORT_RDY_channels_4_getNoCPacket_get = PORT_RDY_channels_4_getNoCPacket_get;
	vcd_write_val(num++, PORT_RDY_channels_4_putNoCPacket_put, 1u);
	backing.PORT_RDY_channels_4_putNoCPacket_put = PORT_RDY_channels_4_putNoCPacket_put;
	vcd_write_val(num++, PORT_channels_0_getNoCPacket_get, 51u);
	backing.PORT_channels_0_getNoCPacket_get = PORT_channels_0_getNoCPacket_get;
	vcd_write_val(num++, PORT_channels_0_putNoCPacket_put, 51u);
	backing.PORT_channels_0_putNoCPacket_put = PORT_channels_0_putNoCPacket_put;
	vcd_write_val(num++, PORT_channels_1_getNoCPacket_get, 51u);
	backing.PORT_channels_1_getNoCPacket_get = PORT_channels_1_getNoCPacket_get;
	vcd_write_val(num++, PORT_channels_1_putNoCPacket_put, 51u);
	backing.PORT_channels_1_putNoCPacket_put = PORT_channels_1_putNoCPacket_put;
	vcd_write_val(num++, PORT_channels_2_getNoCPacket_get, 51u);
	backing.PORT_channels_2_getNoCPacket_get = PORT_channels_2_getNoCPacket_get;
	vcd_write_val(num++, PORT_channels_2_putNoCPacket_put, 51u);
	backing.PORT_channels_2_putNoCPacket_put = PORT_channels_2_putNoCPacket_put;
	vcd_write_val(num++, PORT_channels_3_getNoCPacket_get, 51u);
	backing.PORT_channels_3_getNoCPacket_get = PORT_channels_3_getNoCPacket_get;
	vcd_write_val(num++, PORT_channels_3_putNoCPacket_put, 51u);
	backing.PORT_channels_3_putNoCPacket_put = PORT_channels_3_putNoCPacket_put;
	vcd_write_val(num++, PORT_channels_4_getNoCPacket_get, 51u);
	backing.PORT_channels_4_getNoCPacket_get = PORT_channels_4_getNoCPacket_get;
	vcd_write_val(num++, PORT_channels_4_putNoCPacket_put, 51u);
	backing.PORT_channels_4_putNoCPacket_put = PORT_channels_4_putNoCPacket_put;
      }
  }
  
  void MOD_mkNode::vcd_prims(tVCDDumpType dt, MOD_mkNode &backing)
  {
    INST_channelInQ_0_dequeueing.dump_VCD(dt, backing.INST_channelInQ_0_dequeueing);
    INST_channelInQ_0_enqw.dump_VCD(dt, backing.INST_channelInQ_0_enqw);
    INST_channelInQ_0_ff.dump_VCD(dt, backing.INST_channelInQ_0_ff);
    INST_channelInQ_0_firstValid.dump_VCD(dt, backing.INST_channelInQ_0_firstValid);
    INST_channelInQ_1_dequeueing.dump_VCD(dt, backing.INST_channelInQ_1_dequeueing);
    INST_channelInQ_1_enqw.dump_VCD(dt, backing.INST_channelInQ_1_enqw);
    INST_channelInQ_1_ff.dump_VCD(dt, backing.INST_channelInQ_1_ff);
    INST_channelInQ_1_firstValid.dump_VCD(dt, backing.INST_channelInQ_1_firstValid);
    INST_channelInQ_2_dequeueing.dump_VCD(dt, backing.INST_channelInQ_2_dequeueing);
    INST_channelInQ_2_enqw.dump_VCD(dt, backing.INST_channelInQ_2_enqw);
    INST_channelInQ_2_ff.dump_VCD(dt, backing.INST_channelInQ_2_ff);
    INST_channelInQ_2_firstValid.dump_VCD(dt, backing.INST_channelInQ_2_firstValid);
    INST_channelInQ_3_dequeueing.dump_VCD(dt, backing.INST_channelInQ_3_dequeueing);
    INST_channelInQ_3_enqw.dump_VCD(dt, backing.INST_channelInQ_3_enqw);
    INST_channelInQ_3_ff.dump_VCD(dt, backing.INST_channelInQ_3_ff);
    INST_channelInQ_3_firstValid.dump_VCD(dt, backing.INST_channelInQ_3_firstValid);
    INST_channelInQ_4_dequeueing.dump_VCD(dt, backing.INST_channelInQ_4_dequeueing);
    INST_channelInQ_4_enqw.dump_VCD(dt, backing.INST_channelInQ_4_enqw);
    INST_channelInQ_4_ff.dump_VCD(dt, backing.INST_channelInQ_4_ff);
    INST_channelInQ_4_firstValid.dump_VCD(dt, backing.INST_channelInQ_4_firstValid);
    INST_channelOutQ_0_pw_deq.dump_VCD(dt, backing.INST_channelOutQ_0_pw_deq);
    INST_channelOutQ_0_rw_enq.dump_VCD(dt, backing.INST_channelOutQ_0_rw_enq);
    INST_channelOutQ_0_taggedReg.dump_VCD(dt, backing.INST_channelOutQ_0_taggedReg);
    INST_channelOutQ_1_pw_deq.dump_VCD(dt, backing.INST_channelOutQ_1_pw_deq);
    INST_channelOutQ_1_rw_enq.dump_VCD(dt, backing.INST_channelOutQ_1_rw_enq);
    INST_channelOutQ_1_taggedReg.dump_VCD(dt, backing.INST_channelOutQ_1_taggedReg);
    INST_channelOutQ_2_pw_deq.dump_VCD(dt, backing.INST_channelOutQ_2_pw_deq);
    INST_channelOutQ_2_rw_enq.dump_VCD(dt, backing.INST_channelOutQ_2_rw_enq);
    INST_channelOutQ_2_taggedReg.dump_VCD(dt, backing.INST_channelOutQ_2_taggedReg);
    INST_channelOutQ_3_pw_deq.dump_VCD(dt, backing.INST_channelOutQ_3_pw_deq);
    INST_channelOutQ_3_rw_enq.dump_VCD(dt, backing.INST_channelOutQ_3_rw_enq);
    INST_channelOutQ_3_taggedReg.dump_VCD(dt, backing.INST_channelOutQ_3_taggedReg);
    INST_channelOutQ_4_pw_deq.dump_VCD(dt, backing.INST_channelOutQ_4_pw_deq);
    INST_channelOutQ_4_rw_enq.dump_VCD(dt, backing.INST_channelOutQ_4_rw_enq);
    INST_channelOutQ_4_taggedReg.dump_VCD(dt, backing.INST_channelOutQ_4_taggedReg);
    INST_inputChannelArbiter_grant_id_wire.dump_VCD(dt, backing.INST_inputChannelArbiter_grant_id_wire);
    INST_inputChannelArbiter_grant_vector.dump_VCD(dt, backing.INST_inputChannelArbiter_grant_vector);
    INST_inputChannelArbiter_priority_vector.dump_VCD(dt,
						      backing.INST_inputChannelArbiter_priority_vector);
    INST_inputChannelArbiter_request_vector.dump_VCD(dt,
						     backing.INST_inputChannelArbiter_request_vector);
    INST_inputChannelArbiter_request_vector_1.dump_VCD(dt,
						       backing.INST_inputChannelArbiter_request_vector_1);
    INST_inputChannelArbiter_request_vector_2.dump_VCD(dt,
						       backing.INST_inputChannelArbiter_request_vector_2);
    INST_inputChannelArbiter_request_vector_3.dump_VCD(dt,
						       backing.INST_inputChannelArbiter_request_vector_3);
    INST_inputChannelArbiter_request_vector_4.dump_VCD(dt,
						       backing.INST_inputChannelArbiter_request_vector_4);
    INST_outputChannelArbiter_grant_id_wire.dump_VCD(dt,
						     backing.INST_outputChannelArbiter_grant_id_wire);
    INST_outputChannelArbiter_grant_vector.dump_VCD(dt, backing.INST_outputChannelArbiter_grant_vector);
    INST_outputChannelArbiter_priority_vector.dump_VCD(dt,
						       backing.INST_outputChannelArbiter_priority_vector);
    INST_outputChannelArbiter_request_vector.dump_VCD(dt,
						      backing.INST_outputChannelArbiter_request_vector);
    INST_outputChannelArbiter_request_vector_1.dump_VCD(dt,
							backing.INST_outputChannelArbiter_request_vector_1);
    INST_outputChannelArbiter_request_vector_2.dump_VCD(dt,
							backing.INST_outputChannelArbiter_request_vector_2);
    INST_outputChannelArbiter_request_vector_3.dump_VCD(dt,
							backing.INST_outputChannelArbiter_request_vector_3);
    INST_outputChannelArbiter_request_vector_4.dump_VCD(dt,
							backing.INST_outputChannelArbiter_request_vector_4);
    INST_routePacketQ.dump_VCD(dt, backing.INST_routePacketQ);
  }
}
